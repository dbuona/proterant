int.95<-estimate+qnorm(.975)*se
in.95
int.95
estimate(700/300)
estimate<-(700/300)
se<-sqrt(estimate*(1-estiamte)/1000)
estimate<-(700/300)
estimate
se<-sqrt(estimate*(1-estiamte)/1000)
se<-sqrt(estimate*(1-estimate)/1000)
int.95<-estimate+qnorm(c(.025,.975))*se
y<-rep(c(0,1,2,3,4), c(600,300, 50,30,20))
mean(y)
n<-length(y)
n<-length(y)
estimate<-mean(y)
se<-sd(y)/sqrt(n)
int.95(estimate+qt(c(.025,.975))*se)
int.95<-(estimate+qt(c(.025,.975))*se)
int.95<-(estimate+qt(c(.025,.975),n-1)*se)
girl<-n(.4777, .4875, .4859, .4754, .4874, .4864, .4813, .4787, .4895, .4797, .4876, .4859, .4857, .4907, .5010, .4903, .4860, .4911, .4871, .4725, .4822, .4870, .4823, .4973)
girl<-c(.4777, .4875, .4859, .4754, .4874, .4864, .4813, .4787, .4895, .4797, .4876, .4859, .4857, .4907, .5010, .4903, .4860, .4911, .4871, .4725, .4822, .4870, .4823, .4973)
mean(c)
mean(girl)
sd(girl)
mean(theor)
theor<-c(.5,.5,.5)
mean(theor)
sd(theor)
sd(girl)
sd_exp<-sqrt((.486)(1-.486)/3903)
sqrt((.486)(1-.486)/3903)
sqrt((.486)(1-.486)/3903))
sqrt((.486)(1-.486)/3903)
mean(girl)
sd(girl)
sqrt((.485675)^2/(3903-1))
chisq.test(sd(girl),0.007775031)
meangirl<-mean(girl)
int.95 <- meangirl + qt(c(.025,.975),3903-1)
int.95
esde<-sqrt((.485675)^2/(3903-1))
esde
se<=esde(sqrt(3903))
sE<=esde(sqrt(3903))
esde/(sqrt(3903))
SE<-esde/(sqrt(3903))
int.95 <- meangirl + qt(c(.025,.975),3903-1)*SE
int.95
mean(girl)
meangirl<-mean(girl)
sd(girl)
sqrt((.486)(1-.486)/3903)
sqrt((.486)*(1-.486)/3903)
obs<-sd(girl) #observed sd
exp<-sqrt((.486)*(1-.486)/3903) ##should be expected sd based on observed mean if there was not variation butIsn't this the standard error formula not standard deviation?
chisq.test((obs)-(exp))^2/(exp))
se(obs)
se<-obs/sqrt(3903)
se
2*se
obs+(2*se)
obs-(2*se)
int.95 <- meangirl + qnorm(c(.025,.975))*exp
int.95
vector1<-c(0,50,mean=35, sd=10)
vector1
new<-rescale(vector1,mean=100, sd=15)
rescale(vector1,mean=100, sd=15)
help.search(rescaling)
help.search(rescale)
vector1<-c(0,50,mean=35, sd=10)
rescale(vector1,mean=100, sd=15)
runif(20,min=1, max=100)
h<-runif(20,min=1, max=100)
h
h
h
runif(20,min=1, max=100)
#(4)
runif(20,min=1, max=100)
sum(above)
sum(runif(20,min=1, max=100))
sum(runif(20,min=1, max=100))
for (sum(runif(20,min=1, max=100)))
for(i in 1-1000) {sum(runif(20,min=1, max=100))}
three<-for(i in 1-1000) {sum(runif(20,min=1, max=100))}
three#(4)
three<-for(i in 1-1000) {sum(runif(20,min=1, max=100))}
for(i in 1-1000) {sum(runif(20,min=1, max=100))}
h= sum(runif(20,min=1, max=100)
hfor(i in 1-1000) {sum(runif(20,min=1, max=100))}
h
h
#1) Atest is graded from 0to50,with an averagescore of 35and a standard deviation of 10.
s=c()
h= sum(runif(20,min=1, max=100)
for(i in 1-1000) {s[i]=h[i])}
for(i in 1-1000) {s[i]=h[i]}
s
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
library(plotrix)
library(gdata)
library(nlme)
library(scales)
library(arm)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(knitr)
library(xtable)
require(vegan)
data(sipoo)
View(sipoo)
out <- oecosimu(sipoo, decorana, "swap", burnin=100, thin=10, statistic="evals")
out
decorana
plot(as.ts(out))
lag.plot(as.ts(out))
acf(as.ts(out))
## Density plot: needs lattice
require(lattice)
densityplot(out, as.table = TRUE)
## Use quantitative null models to compare
## mean Bray-Curtis dissimilarities
data(dune)
meandist <- function(x) mean(vegdist(x, "bray"))
mbc1 <- oecosimu(dune, meandist, "r2dtable")
mbc1
## Define a custom function that shuffles
## cells in each rows
f <- function(x) {
apply(x, 2, function(z) sample(z, length(z)))
}
mbc2 <- oecosimu(as.matrix(dune), meandist, f)
mbc2
mbc2 <- oecosimu(as.matrix(dune), meandist, f)
data(dune)
meandist <- function(x) mean(vegdist(x, "bray"))
mbc1 <- oecosimu(dune, meandist, "r2dtable")
mbc1
## Define a custom function that shuffles
## cells in each rows
f <- function(x) {
apply(x, 2, function(z) sample(z, length(z)))
}
mbc2 <- oecosimu(as.matrix(dune), meandist, f)
mbc2
mbc2 <- oecosimu(as.matrix(dune),NULL, meandist, f)
mbc2 <- oecosimu(as.matrix(dune),arg= meandist, f)
data(sipoo)
rm(list=ls())
options(stringsAsFactors = FALSE)
require(vegan)
data(sipoo)
View(sipoo)
data <- cbind(c("A","B","C","A"), c("John", "Kendra", "Martin", "Steve"), c("12","12","13","14"))
colnames(data) <- c("Group", "Name", "Score")
data <- as.data.frame(data)
p <- ggplot(data, aes(x = Name, y = Score, fill = Name)) +
geom_point(pch = 19, aes(col = Group)) +
scale_colour_manual(values = c("black", "red", "green")) +
guides(fill = FALSE); p
library(ggplot2)
p <- ggplot(data, aes(x = Name, y = Score, fill = Name)) +
geom_point(pch = 19, aes(col = Group)) +
scale_colour_manual(values = c("black", "red", "green")) +
data = cbind(c("A","B","C","A"), c("John", "Kendra", "Martin", "Steve"), c("12","12","13","14"))
colnames(data) = c("Group", "Name", "Score")
data = as.data.frame(data)
p = ggplot(data, aes(x=Name, y=Score, fill=Name)) + geom_point(pch = 19, aes(col=Group)) + scale_colour_manual(values=c("black", "red", "green"))
print(p)
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length)+scale_color_discrete(breaks="setosa"))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))+scale_color_discrete(breaks="setosa"))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
130*3
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
390*3
10*4*2
den<-12+8+4+2
reps<-den*3
treatments<-reps*2
surface<-24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
treaties<-surface*3 #=390
backup<-3*surface
treaties<-backup*3 #=390
surface<-24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
##130 seeds of each species * 3 treatments
backup<-3*surface
treaties<-backup*3 #=390
surface<-24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
##130 seeds of each species * 3 treatments
backup<-3*surface
treaties<-backup*3 #=1170
#GERMINATION TRIALS
#10 seeds per petri dish, 32? dishes per chamber * 8 species
# 4 replicates of 10
dish<-10
reps<-dish*4
germtreat<-reps*2
#80 seeds/species
### for testing pairwise
den<-12+8+4+2
reps<-den*3
treatments<-reps*2
##156
treaties+treatments+germtreat
warnings()
\begin{tabular*}{10 cm}{|l|l|}
1000/10/2
50\3
50/3
16*3*2*10
####c### This is the final analysis file for hysteranthy anaylsis on MTSV as of 3/28/18.
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant/input")
library("ape")
library("phytools")
library("geiger")
library("gbm")
library("pez")
library(caper)
library(picante)
library("tidyverse")
library(boot)
library("phylolm")
library("ggplot2")
library(arm)
library("randomForest")
library(car)
load("hystmodels.RData")
z.inter.seed<-phyloglm(pro~pol_cent+height_cent+flo_cent+dev_time_cent+tol_cent,mich.data, mich.tree, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=599,full.matrix = TRUE)
z.inter.seed<-phyloglm(pro~pol_cent+height_cent+flo_cent+dev_time_cent+tol_cent,mich.data, mich.tree, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=599,full.matrix = TRUE)
summary(z.inter.seed)
bootestX<-as.data.frame(z.inter.seed$coefficients)
bootconfX<-as.data.frame(z.inter.seed$bootconfint95)
bootconfX<-as.data.frame(t(bootconfX))
bootestX<-rownames_to_column(bootestX, "trait")
bootconfX<-rownames_to_column(bootconfX, "trait")
bootmichX<-full_join(bootconfX,bootestX, by="trait")
colnames(bootmichX)<-c("trait","low","high","estimate")
bootmichX<-dplyr::filter(bootmichX, trait!="alpha")
bootmichX<-dplyr::filter(bootmichX, trait!="(Intercept)")
###names
bootmichX$trait[bootmichX$trait=="tol_cent"]<-"shade tolerance"
bootmichX$trait[bootmichX$trait=="pol_cent"]<-"pollination syndrome"
bootmichX$trait[bootmichX$trait=="height_cent"]<-"max height"
bootmichX$trait[bootmichX$trait=="dev_time_cent"]<-"seed development"
bootmichX$trait[bootmichX$trait=="flo_cent"]<-"flower timing"
bootmichX$class<-"physiological-MTSV"
bootestY<-as.data.frame(z.phys.seed$coefficients)
bootconfY<-as.data.frame(z.phys.seed$bootconfint95)
bootconfY<-as.data.frame(t(bootconfY))
bootestY<-rownames_to_column(bootestY, "trait")
bootconfY<-rownames_to_column(bootconfY, "trait")
bootmichY<-full_join(bootconfY,bootestY, by="trait")
colnames(bootmichY)<-c("trait","low","high","estimate")
bootmichY<-dplyr::filter(bootmichY, trait!="alpha")
bootmichY<-dplyr::filter(bootmichY, trait!="(Intercept)")
###names
bootmichY$trait[bootmichY$trait=="tol_cent"]<-"shade tolerance"
bootmichY$trait[bootmichY$trait=="pol_cent"]<-"pollination syndrome"
bootmichY$trait[bootmichY$trait=="height_cent"]<-"max height"
bootmichY$trait[bootmichY$trait=="dev_time_cent"]<-"seed development"
bootmichY$trait[bootmichY$trait=="flo_cent"]<-"flower timing"
bootmichY$class<-"physiological-MTSV"
bootestZ<-as.data.frame(z.funct.seed$coefficients)
bootconfZ<-as.data.frame(z.funct.seed$bootconfint95)
bootconfZ<-as.data.frame(t(bootconfZ))
bootestZ<-rownames_to_column(bootestZ, "trait")
bootconfZ<-rownames_to_column(bootconfZ, "trait")
bootmichZ<-full_join(bootconfZ,bootestZ, by="trait")
colnames(bootmichZ)<-c("trait","low","high","estimate")
bootmichZ<-dplyr::filter(bootmichZ, trait!="alpha")
bootmichZ<-dplyr::filter(bootmichZ, trait!="(Intercept)")
###names
bootmichZ$trait[bootmichZ$trait=="tol_cent"]<-"shade tolerance"
bootmichZ$trait[bootmichZ$trait=="pol_cent"]<-"pollination syndrome"
bootmichZ$trait[bootmichZ$trait=="height_cent"]<-"max height"
bootmichZ$trait[bootmichZ$trait=="dev_time_cent"]<-"seed development"
bootmichZ$trait[bootmichZ$trait=="flo_cent"]<-"flower timing"
bootmichZ$class<-"functional-MTSV"
functplot1<-ggplot(bootmichZ,aes(estimate,trait))+geom_point(size=2.5)+geom_segment(aes(y=trait,yend=trait,x=low,xend=high))+theme(panel.border=element_rect(aes(color=blue)))+geom_vline(aes(xintercept=0,color="red"))+xlim(-7,5)+theme(axis.text = element_text(size=14, hjust = .5))+guides(color="none")
functplot1
summary(z.phys.seed)
bootestY<-as.data.frame(z.phys.seed$coefficients)
bootconfY<-as.data.frame(z.phys.seed$bootconfint95)
bootconfY<-as.data.frame(t(bootconfY))
bootestY<-rownames_to_column(bootestY, "trait")
bootconfY<-rownames_to_column(bootconfY, "trait")
bootmichY<-full_join(bootconfY,bootestY, by="trait")
colnames(bootmichY)<-c("trait","low","high","estimate")
bootmichY<-dplyr::filter(bootmichY, trait!="alpha")
bootmichY<-dplyr::filter(bootmichY, trait!="(Intercept)")
###names
bootmichY$trait[bootmichY$trait=="tol_cent"]<-"shade tolerance"
bootmichY$trait[bootmichY$trait=="pol_cent"]<-"pollination syndrome"
bootmichY$trait[bootmichY$trait=="height_cent"]<-"max height"
bootmichY$trait[bootmichY$trait=="dev_time_cent"]<-"seed development"
bootmichY$trait[bootmichY$trait=="flo_cent"]<-"flower timing"
summary(z.inter.seed)
bootestX<-as.data.frame(z.inter.seed$coefficients)
bootconfX<-as.data.frame(z.inter.seed$bootconfint95)
bootconfX<-as.data.frame(t(bootconfX))
bootestX<-rownames_to_column(bootestX, "trait")
bootconfX<-rownames_to_column(bootconfX, "trait")
bootmichX<-full_join(bootconfX,bootestX, by="trait")
colnames(bootmichX)<-c("trait","low","high","estimate")
bootmichX<-dplyr::filter(bootmichX, trait!="alpha")
bootmichX<-dplyr::filter(bootmichX, trait!="(Intercept)")
###names
bootmichX$trait[bootmichX$trait=="tol_cent"]<-"shade tolerance"
bootmichX$trait[bootmichX$trait=="pol_cent"]<-"pollination syndrome"
bootmichX$trait[bootmichX$trait=="height_cent"]<-"max height"
bootmichX$trait[bootmichX$trait=="dev_time_cent"]<-"seed development"
bootmichX$trait[bootmichX$trait=="flo_cent"]<-"flower timing"
bootmichX$class<-"physiological-MTSV"
michcomp<-rbind(bootmichX,bootmichY,bootmichZ)
bootmichY$class<-"physiological-MTSV"
michcomp<-rbind(bootmichX,bootmichY,bootmichZ)
pd=position_dodgev(height=0.25)
library(ggstance)
pd=position_dodgev(height=0.25)
ggplot(michcomp,aes(estimate,trait))+geom_point(size=2.5,aes(color=class),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=class))+geom_vline(aes(xintercept=0))+theme_bw()
bootmichX$class<-"intermidiate-MTSV"
michcomp<-rbind(bootmichX,bootmichY,bootmichZ)
library(ggstance)
pd=position_dodgev(height=0.25)
ggplot(michcomp,aes(estimate,trait))+geom_point(size=2.5,aes(color=class),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=class))+geom_vline(aes(xintercept=0))+theme_bw()
fullcomp<-rbind(michcomp,bootdatasilv)
fullcomp$low<-ifelse(fullcomp$trait==c("flower timing"),-(fullcomp$low),fullcomp$low)
fullcomp$high<-ifelse(fullcomp$trait==c("flower timing"),-(fullcomp$high),fullcomp$high)
fullcomp$estimate<-ifelse(fullcomp$trait==c("flower timing"),-(fullcomp$estimate),fullcomp$estimate)
fullcomp$category<-NA
fullcomp$category[which(fullcomp$class=="physiological-Silvics")] <- "physiological"
fullcomp$category[which(fullcomp$class=="physiological-MTSV")] <- "physiological"
fullcomp$category[which(fullcomp$class=="functional-Silvics")] <- "functional"
fullcomp$category[which(fullcomp$class=="functional-MTSV")] <- "functional"
fullcomp$category[which(fullcomp$class=="intermediate-MTSV")] <- "intermediate"
fullcomp$data<-NA
fullcomp$data[which(fullcomp$class=="physiological-Silvics")] <- "USFS"
fullcomp$data[which(fullcomp$class=="physiological-MTSV")] <- "MTSV"
fullcomp$data[which(fullcomp$class=="functional-Silvics")] <- "USFS"
fullcomp$data[which(fullcomp$class=="functional-MTSV")] <- "MTSV"
###now express traits more positively
fullcomp$trait[fullcomp$trait=="flower timing"]<-"earlier flowering"
fullcomp$trait[fullcomp$trait=="seed development"]<-"seed development period"
library(ggstance)
pd=position_dodgev(height=0.4)
figure<-ggplot(fullcomp,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd,data=fullcomp)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,group=class))+geom_vline(aes(xintercept=0))+xlim(-7,7)+theme_bw()+annotate("text", x = 6, y = 5.5, label = "Flowers first",fontface =2)+annotate("text", x = -6, y = 5.5, label = "Leaves first",fontface =2)
figure
fullcomp<-rbind(michcomp,bootdatasilv)
fullcomp$low<-ifelse(fullcomp$trait==c("flower timing"),-(fullcomp$low),fullcomp$low)
fullcomp$high<-ifelse(fullcomp$trait==c("flower timing"),-(fullcomp$high),fullcomp$high)
fullcomp$estimate<-ifelse(fullcomp$trait==c("flower timing"),-(fullcomp$estimate),fullcomp$estimate)
fullcomp$category<-NA
fullcomp$category[which(fullcomp$class=="physiological-Silvics")] <- "physiological"
fullcomp$category[which(fullcomp$class=="physiological-MTSV")] <- "physiological"
fullcomp$category[which(fullcomp$class=="functional-Silvics")] <- "functional"
fullcomp$category[which(fullcomp$class=="functional-MTSV")] <- "functional"
fullcomp$category[which(fullcomp$class=="intermediate-MTSV")] <- "intermediate"
fullcomp$data<-NA
fullcomp$data[which(fullcomp$class=="physiological-Silvics")] <- "USFS"
fullcomp$data[which(fullcomp$class=="physiological-MTSV")] <- "MTSV"
fullcomp$data[which(fullcomp$class=="functional-Silvics")] <- "USFS"
fullcomp$data[which(fullcomp$class=="functional-MTSV")] <- "MTSV"
###now express traits more positively
fullcomp$trait[fullcomp$trait=="flower timing"]<-"earlier flowering"
fullcomp$trait[fullcomp$trait=="seed development"]<-"seed development period"
library(ggstance)
pd=position_dodgev(height=0.4)
figure<-ggplot(fullcomp,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd,data=fullcomp)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,group=class))+geom_vline(aes(xintercept=0))+xlim(-7,7)+theme_bw()+annotate("text", x = 6, y = 5.5, label = "Flowers first",fontface =2)+annotate("text", x = -6, y = 5.5, label = "Leaves first",fontface =2)
figure
fullcomp<-rbind(michcomp,bootdatasilv)
fullcomp$low<-ifelse(fullcomp$trait==c("flower timing"),-(fullcomp$low),fullcomp$low)
fullcomp$high<-ifelse(fullcomp$trait==c("flower timing"),-(fullcomp$high),fullcomp$high)
fullcomp$estimate<-ifelse(fullcomp$trait==c("flower timing"),-(fullcomp$estimate),fullcomp$estimate)
fullcomp$category<-NA
fullcomp$category[which(fullcomp$class=="physiological-Silvics")] <- "physiological"
fullcomp$category[which(fullcomp$class=="physiological-MTSV")] <- "physiological"
fullcomp$category[which(fullcomp$class=="functional-Silvics")] <- "functional"
fullcomp$category[which(fullcomp$class=="functional-MTSV")] <- "functional"
fullcomp$category[which(fullcomp$class=="intermediate-MTSV")] <- "intermediate"
fullcomp$data<-NA
fullcomp$data[which(fullcomp$class=="physiological-Silvics")] <- "USFS"
fullcomp$data[which(fullcomp$class=="physiological-MTSV")] <- "MTSV"
fullcomp$data[which(fullcomp$class=="functional-Silvics")] <- "USFS"
fullcomp$data[which(fullcomp$class=="functional-MTSV")] <- "MTSV"
fullcomp$data[which(fullcomp$class=="intermediate-MTSV")] <- "MTSV"
###now express traits more positively
fullcomp$trait[fullcomp$trait=="flower timing"]<-"earlier flowering"
fullcomp$trait[fullcomp$trait=="seed development"]<-"seed development period"
library(ggstance)
pd=position_dodgev(height=0.4)
figure<-ggplot(fullcomp,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd,data=fullcomp)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,group=class))+geom_vline(aes(xintercept=0))+xlim(-7,7)+theme_bw()+annotate("text", x = 6, y = 5.5, label = "Flowers first",fontface =2)+annotate("text", x = -6, y = 5.5, label = "Leaves first",fontface =2)
figure
figure<-ggplot(fullcomp,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd,data=fullcomp)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,group=class))+geom_vline(aes(xintercept=0))+xlim(-7,7)+theme_bw()+annotate("text", x = 6, y = 5.5, label = "Flowers first",fontface =2)+annotate("text", x = -6, y = 5.5, label = "Leaves first",fontface =2)
figure
View(fullcomp)
fullcomp<-rbind(michcomp,bootdatasilv)
fullcomp$low<-ifelse(fullcomp$trait==c("flower timing"),-(fullcomp$low),fullcomp$low)
fullcomp$high<-ifelse(fullcomp$trait==c("flower timing"),-(fullcomp$high),fullcomp$high)
fullcomp$estimate<-ifelse(fullcomp$trait==c("flower timing"),-(fullcomp$estimate),fullcomp$estimate)
fullcomp$category<-NA
fullcomp$category[which(fullcomp$class=="physiological-Silvics")] <- "physiological"
fullcomp$category[which(fullcomp$class=="physiological-MTSV")] <- "physiological"
fullcomp$category[which(fullcomp$class=="functional-Silvics")] <- "functional"
fullcomp$category[which(fullcomp$class=="functional-MTSV")] <- "functional"
fullcomp$category[which(fullcomp$class=="intermidiate-MTSV")] <- "intermediate"
fullcomp$data<-NA
fullcomp$data[which(fullcomp$class=="physiological-Silvics")] <- "USFS"
fullcomp$data[which(fullcomp$class=="physiological-MTSV")] <- "MTSV"
fullcomp$data[which(fullcomp$class=="functional-Silvics")] <- "USFS"
fullcomp$data[which(fullcomp$class=="functional-MTSV")] <- "MTSV"
fullcomp$data[which(fullcomp$class=="intermidiate-MTSV")] <- "MTSV"
###now express traits more positively
fullcomp$trait[fullcomp$trait=="flower timing"]<-"earlier flowering"
fullcomp$trait[fullcomp$trait=="seed development"]<-"seed development period"
library(ggstance)
pd=position_dodgev(height=0.4)
figure<-ggplot(fullcomp,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd,data=fullcomp)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,group=class))+geom_vline(aes(xintercept=0))+xlim(-7,7)+theme_bw()+annotate("text", x = 6, y = 5.5, label = "Flowers first",fontface =2)+annotate("text", x = -6, y = 5.5, label = "Leaves first",fontface =2)
figure
z.inter.silv<-phyloglm(pro~pol_cent+height_cent+flo_cent+dev_time_cent+tol_cent,silv.data, silv.tree, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=599,full.matrix = TRUE)
bootestSI<-as.data.frame(z.inter.silv$coefficients)
bootconfSI<-as.data.frame(z.inter.silv$bootconfint95)
bootconfSI<-as.data.frame(t(bootconfSI))
bootestSI<-rownames_to_column(bootestSI, "trait")
bootconfSI<-rownames_to_column(bootconfSI, "trait")
bootsilvI<-full_join(bootconfSI,bootestSI, by="trait")
colnames(bootsilvI)<-c("trait","low","high","estimate")
bootsilvI<-dplyr::filter(bootsilvI, trait!="alpha")
bootsilvI<-dplyr::filter(bootsilvI, trait!="(Intercept)")
###names
bootsilvI$trait[bootsilvI$trait=="tol_cent"]<-"shade tolerance"
bootsilvI$trait[bootsilvI$trait=="pol_cent"]<-"pollination syndrome"
bootsilvI$trait[bootsilvI$trait=="height_cent"]<-"max height"
bootsilvI$trait[bootsilvI$trait=="dev_time_cent"]<-"seed development"
bootsilvI$trait[bootsilvI$trait=="flo_cent"]<-"flower timing"
bootsilvI$class<-"intermidiate-Silvics"
bootdatasilv<-rbind(bootdatasilv,bootsilvI)
pd=position_dodgev(height=0.25)
ggplot(bootdatasilv,aes(estimate,trait))+geom_point(size=2.5,aes(color=class),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=class))+geom_vline(aes(xintercept=0))+theme_bw()
fullcomp<-rbind(michcomp,bootdatasilv)
fullcomp$low<-ifelse(fullcomp$trait==c("flower timing"),-(fullcomp$low),fullcomp$low)
fullcomp$high<-ifelse(fullcomp$trait==c("flower timing"),-(fullcomp$high),fullcomp$high)
fullcomp$estimate<-ifelse(fullcomp$trait==c("flower timing"),-(fullcomp$estimate),fullcomp$estimate)
fullcomp$category<-NA
fullcomp$category[which(fullcomp$class=="physiological-Silvics")] <- "physiological"
fullcomp$category[which(fullcomp$class=="physiological-MTSV")] <- "physiological"
fullcomp$category[which(fullcomp$class=="functional-Silvics")] <- "functional"
fullcomp$category[which(fullcomp$class=="functional-MTSV")] <- "functional"
fullcomp$category[which(fullcomp$class=="intermidiate-MTSV")] <- "intermediate"
fullcomp$category[which(fullcomp$class=="intermidiate-Silvics")] <- "intermediate"
fullcomp$data<-NA
fullcomp$data[which(fullcomp$class=="physiological-Silvics")] <- "USFS"
fullcomp$data[which(fullcomp$class=="physiological-MTSV")] <- "MTSV"
fullcomp$data[which(fullcomp$class=="functional-Silvics")] <- "USFS"
fullcomp$data[which(fullcomp$class=="functional-MTSV")] <- "MTSV"
fullcomp$data[which(fullcomp$class=="intermidiate-MTSV")] <- "MTSV"
fullcomp$data[which(fullcomp$class=="intermidiate-Silvics")] <- "USFS"
fullcomp$trait[fullcomp$trait=="flower timing"]<-"earlier flowering"
fullcomp$trait[fullcomp$trait=="seed development"]<-"seed development period"
library(ggstance)
pd=position_dodgev(height=0.4)
figure<-ggplot(fullcomp,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd,data=fullcomp)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,group=class))+geom_vline(aes(xintercept=0))+xlim(-7,7)+theme_bw()+annotate("text", x = 6, y = 5.5, label = "Flowers first",fontface =2)+annotate("text", x = -6, y = 5.5, label = "Leaves first",fontface =2)
figure
figure<-ggplot(fullcomp,aes(estimate,trait))+geom_point(size=2.5,aes(color=data,shape=category),position=pd,data=fullcomp)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=data,group=class))+geom_vline(aes(xintercept=0))+xlim(-7,7)+theme_bw()+annotate("text", x = 6, y = 5.5, label = "Flowers first",fontface =2)+annotate("text", x = -6, y = 5.5, label = "Leaves first",fontface =2)
figure
figure<-ggplot(fullcomp,aes(estimate,trait))+geom_point(size=2.5,aes(color=data,shape=category),position=pd,data=fullcomp)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=class,group=class))+geom_vline(aes(xintercept=0))+xlim(-7,7)+theme_bw()+annotate("text", x = 6, y = 5.5, label = "Flowers first",fontface =2)+annotate("text", x = -6, y = 5.5, label = "Leaves first",fontface =2)
figure
figure<-ggplot(fullcomp,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd,data=fullcomp)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,group=class))+geom_vline(aes(xintercept=0))+xlim(-7,7)+theme_bw()+annotate("text", x = 6, y = 5.5, label = "Flowers first",fontface =2)+annotate("text", x = -6, y = 5.5, label = "Leaves first",fontface =2)
figure
figure<-ggplot(fullcomp,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd,data=fullcomp)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,group=class,linetype=data))+geom_vline(aes(xintercept=0))+xlim(-7,7)+theme_bw()+annotate("text", x = 6, y = 5.5, label = "Flowers first",fontface =2)+annotate("text", x = -6, y = 5.5, label = "Leaves first",fontface =2)
figure
figure<-ggplot(fullcomp,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd,data=fullcomp)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,group=class))+geom_vline(aes(xintercept=0))+xlim(-7,7)+theme_bw()+annotate("text", x = 6, y = 5.5, label = "Flowers first",fontface =2)+annotate("text", x = -6, y = 5.5, label = "Leaves first",fontface =2)
figure
save.image(file="hystmodels.RData")
figure
