graphics.off()
library(plotrix)
library(gdata)
library(nlme)
library(scales)
library(arm)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(knitr)
library(xtable)
require(vegan)
data(sipoo)
View(sipoo)
out <- oecosimu(sipoo, decorana, "swap", burnin=100, thin=10, statistic="evals")
out
decorana
plot(as.ts(out))
lag.plot(as.ts(out))
acf(as.ts(out))
## Density plot: needs lattice
require(lattice)
densityplot(out, as.table = TRUE)
## Use quantitative null models to compare
## mean Bray-Curtis dissimilarities
data(dune)
meandist <- function(x) mean(vegdist(x, "bray"))
mbc1 <- oecosimu(dune, meandist, "r2dtable")
mbc1
## Define a custom function that shuffles
## cells in each rows
f <- function(x) {
apply(x, 2, function(z) sample(z, length(z)))
}
mbc2 <- oecosimu(as.matrix(dune), meandist, f)
mbc2
mbc2 <- oecosimu(as.matrix(dune), meandist, f)
data(dune)
meandist <- function(x) mean(vegdist(x, "bray"))
mbc1 <- oecosimu(dune, meandist, "r2dtable")
mbc1
## Define a custom function that shuffles
## cells in each rows
f <- function(x) {
apply(x, 2, function(z) sample(z, length(z)))
}
mbc2 <- oecosimu(as.matrix(dune), meandist, f)
mbc2
mbc2 <- oecosimu(as.matrix(dune),NULL, meandist, f)
mbc2 <- oecosimu(as.matrix(dune),arg= meandist, f)
data(sipoo)
rm(list=ls())
options(stringsAsFactors = FALSE)
require(vegan)
data(sipoo)
View(sipoo)
data <- cbind(c("A","B","C","A"), c("John", "Kendra", "Martin", "Steve"), c("12","12","13","14"))
colnames(data) <- c("Group", "Name", "Score")
data <- as.data.frame(data)
p <- ggplot(data, aes(x = Name, y = Score, fill = Name)) +
geom_point(pch = 19, aes(col = Group)) +
scale_colour_manual(values = c("black", "red", "green")) +
guides(fill = FALSE); p
library(ggplot2)
p <- ggplot(data, aes(x = Name, y = Score, fill = Name)) +
geom_point(pch = 19, aes(col = Group)) +
scale_colour_manual(values = c("black", "red", "green")) +
data = cbind(c("A","B","C","A"), c("John", "Kendra", "Martin", "Steve"), c("12","12","13","14"))
colnames(data) = c("Group", "Name", "Score")
data = as.data.frame(data)
p = ggplot(data, aes(x=Name, y=Score, fill=Name)) + geom_point(pch = 19, aes(col=Group)) + scale_colour_manual(values=c("black", "red", "green"))
print(p)
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length)+scale_color_discrete(breaks="setosa"))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))+scale_color_discrete(breaks="setosa"))
ggplot(iris) + geom_point(aes(x=Sepal.Width, y=Sepal.Length, color=Species, size=Sepal.Length))
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
130*3
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
390*3
10*4*2
den<-12+8+4+2
reps<-den*3
treatments<-reps*2
surface<-24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
treaties<-surface*3 #=390
backup<-3*surface
treaties<-backup*3 #=390
surface<-24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
##130 seeds of each species * 3 treatments
backup<-3*surface
treaties<-backup*3 #=390
surface<-24+18+12+6+0+
16+12+8+4+0+
8+6+4+2+0+
4+3+2+1+0
##130 seeds of each species * 3 treatments
backup<-3*surface
treaties<-backup*3 #=1170
#GERMINATION TRIALS
#10 seeds per petri dish, 32? dishes per chamber * 8 species
# 4 replicates of 10
dish<-10
reps<-dish*4
germtreat<-reps*2
#80 seeds/species
### for testing pairwise
den<-12+8+4+2
reps<-den*3
treatments<-reps*2
##156
treaties+treatments+germtreat
warnings()
\begin{tabular*}{10 cm}{|l|l|}
1000/10/2
50\3
50/3
16*3*2*10
library(rstan)
library(rstanarm)
data(spinach)
library(devtools)
install_github("daniel-gerhard/standrc")
install.packages("devtools")
library(devtools)
install_github("daniel-gerhard/standrc")
install.packages("drcSeedGerm")
install_github("OnofriAndreaPG/drcSeedGerm")
library(devtools)
install_github("OnofriAndreaPG/drcSeedGerm")
data("lotusOR")
install_github("OnofriAndreaPG/drcSeedGerm")
library(devtools)
install_github("OnofriAndreaPG/drcSeedGerm")
library(drcSeedGerm)
data("lotusOR")
data(lotusOR)
data(lotusOr)
counts <- lotusOr[,3:length(lotusOr[1,])]
treat <- data.frame(tratt=lotusOr[,1])
nViable <- rep(25,12)
moniTimes <- c(1:15)
counts
6.7e8/1.8
rm(list=ls())
options(stringsAsFactors = FALSE)
# libraries
library(rstan)
library(dplyr)
library(tibble)
library(shinystan)
library(RColorBrewer)
library(tidyr)
library(gridExtra)
library("ggpubr")
library(ggstance)
library(brms)
library(reshape2)
library(tibble)
# Setting working directory. Add in your own path in an if statement for your file structure
if(length(grep("lizzie", getwd())>0)) {
setwd("~/Documents/git/treegarden/budreview/ospree/bb_analysis")
} else if (length(grep("ailene", getwd()))>0) {setwd("/Users/aileneettinger/Documents/GitHub/ospree/analyses/bb_analysis")
}else if(length(grep("Ignacio", getwd()))>0) {
setwd("~/GitHub/ospree/analyses/bb_analysis")
} else if(length(grep("catchamberlain", getwd()))>0) {
setwd("~/Documents/git/ospree/analyses/bb_analysis")
} else if(length(grep("danielbuonaiuto", getwd()))>0) {
setwd("~/Documents/git/ospree/analyses/bb_analysis")
}else setwd("~/Documents/git/projects/treegarden/budreview/ospree/analyses/bb_analysis")
use.flags.for.mainmodel <- TRUE
use.flags.for.allsppmodel <- FALSE
use.yourown.flagdesign <- FALSE
if(use.flags.for.mainmodel==TRUE & use.flags.for.allsppmodel | use.flags.for.mainmodel==TRUE & use.yourown.flagdesign |
use.yourown.flagdesign  & use.flags.for.allsppmodel | use.flags.for.mainmodel==TRUE & use.flags.for.allsppmodel
if(use.flags.for.mainmodel){
use.chillports = FALSE
use.zscore = TRUE
use.allspp =FALSE # for the main model this is false
use.multcuespp = FALSE
use.cropspp = FALSE
# Default is species complex use  alltypes of designs
use.expramptypes.fp = TRUE
use.exptypes.fp = FALSE
use.expchillonly = FALSE
}
if(use.flags.for.allsppmodel){
use.chillports = FALSE
use.zscore = FALSE
use.allspp = TRUE
use.multcuespp = FALSE
use.cropspp = TRUE
use.expramptypes.fp = FALSE
use.exptypes.fp = FALSE
use.expchillonly = FALSE
}
if(use.yourown.flagdesign){
use.chillports = TRUE # change to false for using utah instead of chill portions (most models use chill portions z)
use.zscore = TRUE # change to false to use raw predictors
# Default is species complex and no crops
use.allspp = FALSE
use.multcuespp = FALSE
use.cropspp = FALSE
# Default is species complex use  alltypes of designs
use.expramptypes.fp = TRUE
use.exptypes.fp = FALSE
#Default is all chilling data
use.expchillonly = FALSE # change to true for only experimental chilling
#note: with only exp chilling, there is only exp photo and force too.
#also: subsetting to exp chill only reduces dataset to 3 species, <9 studies
}
source("source/bbstanleadin.R")
rm(list=ls())
options(stringsAsFactors = FALSE)
# libraries
library(shinystan)
# Setting working directory. Add in your own path in an if statement for your file structure
if(length(grep("lizzie", getwd())>0)) {
setwd("~/Documents/git/treegarden/budreview/ospree/bb_analysis")
} else if (length(grep("ailene", getwd()))>0) {setwd("~/Documents/GitHub/ospree/analyses/bb_analysis")
}else if(length(grep("Ignacio", getwd()))>0) {
setwd("~/GitHub/ospree/analyses/bb_analysis")
} else if(length(grep("catchamberlain", getwd()))>0) {
setwd("~/Documents/git/ospree/analyses/bb_analysis")
} else if(length(grep("danielbuonaiuto", getwd()))>0) {
setwd("~/Documents/git/ospree/analyses/bb_analysis")
}else setwd("~/Documents/git/projects/treegarden/budreview/ospree/analyses/bb_analysis")
######################################
# Flags to choose for bbstanleadin.R #
######################################
# Master flags! Here you pick if you want the flags for the main model (figure in main text) versus the all spp model (supp)
use.flags.for.mainmodel <- TRUE
use.flags.for.allsppmodel <- FALSE
use.yourown.flagdesign <- FALSE
if(use.flags.for.mainmodel==TRUE & use.flags.for.allsppmodel | use.flags.for.mainmodel==TRUE & use.yourown.flagdesign |
use.yourown.flagdesign  & use.flags.for.allsppmodel | use.flags.for.mainmodel==TRUE & use.flags.for.allsppmodel
& use.yourown.flagdesign) print("ALERT! You have set too many master flags to true, you must pick only one!")
if(use.flags.for.mainmodel){
use.chillports = FALSE
use.zscore = TRUE
use.allspp =FALSE # for the main model this is false
use.multcuespp = FALSE
use.cropspp = FALSE
# Default is species complex use  alltypes of designs
use.expramptypes.fp = TRUE
use.exptypes.fp = FALSE
use.expchillonly = FALSE
}
if(use.flags.for.allsppmodel){
use.chillports = FALSE
use.zscore = FALSE
use.allspp = TRUE
use.multcuespp = FALSE
use.cropspp = TRUE
use.expramptypes.fp = FALSE
use.exptypes.fp = FALSE
use.expchillonly = FALSE
}
if(use.yourown.flagdesign){
use.chillports = TRUE # change to false for using utah instead of chill portions (most models use chill portions z)
use.zscore = TRUE # change to false to use raw predictors
# Default is species complex and no crops
use.allspp = FALSE
use.multcuespp = FALSE
use.cropspp = FALSE
# Default is species complex use  alltypes of designs
use.expramptypes.fp = TRUE
use.exptypes.fp = FALSE
#Default is all chilling data
use.expchillonly = FALSE # change to true for only experimental chilling
#note: with only exp chilling, there is only exp photo and force too.
#also: subsetting to exp chill only reduces dataset to 3 species, <9 studies
}
source("source/bbstanleadin.R")
rm(list=ls())
options(stringsAsFactors = FALSE)
# libraries
library(shinystan)
# Setting working directory. Add in your own path in an if statement for your file structure
if(length(grep("lizzie", getwd())>0)) {
setwd("~/Documents/git/treegarden/budreview/ospree/bb_analysis")
} else if (length(grep("ailene", getwd()))>0) {setwd("~/Documents/GitHub/ospree/analyses/bb_analysis")
}else if(length(grep("Ignacio", getwd()))>0) {
setwd("~/GitHub/ospree/analyses/bb_analysis")
} else if(length(grep("catchamberlain", getwd()))>0) {
setwd("~/Documents/git/ospree/analyses/bb_analysis")
} else if(length(grep("danielbuonaiuto", getwd()))>0) {
setwd("~/Documents/git/ospree/analyses/bb_analysis")
}else setwd("~/Documents/git/projects/treegarden/budreview/ospree/analyses/bb_analysis")
rm(list=ls())
options(stringsAsFactors = FALSE)
# libraries
library(shinystan)
# Setting working directory. Add in your own path in an if statement for your file structure
if(length(grep("lizzie", getwd())>0)) {
setwd("~/Documents/git/treegarden/budreview/ospree/bb_analysis")
} else if (length(grep("ailene", getwd()))>0) {setwd("~/Documents/GitHub/ospree/analyses/bb_analysis")
}else if(length(grep("Ignacio", getwd()))>0) {
setwd("~/GitHub/ospree/analyses/bb_analysis")
} else if(length(grep("catchamberlain", getwd()))>0) {
setwd("~/Documents/git/ospree/analyses/bb_analysis")
} else if(length(grep("danielbuonaiuto", getwd()))>0) {
setwd("~/Documents/git/ospree/analyses/bb_analysis")
}else setwd("~/Documents/git/projects/treegarden/budreview/ospree/analyses/bb_analysis")
######################################
# Flags to choose for bbstanleadin.R #
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant/Input")
library(ggplot2)
library(tidyr)
library(dplyr)
library(chillR)
library(brms)
library(tibble)
HF<-read.csv("HarvardForest/hf003-05-mean-ind.csv",header=TRUE)
#HF2<-read.csv("HarvardForest/hf003-06-mean-spp.csv",header=TRUE)
##Hypothesis 1: variation in FLS is a product of variation in climate between phases
#https://cran.r-project.org/web/packages/chillR/vignettes/hourly_temperatures.html
weather<-read.csv("..//FLOBUDS/data/hf000-01-daily-m.csv",header = TRUE)
weather<-dplyr::select(weather,c("date","airtmax","airtmin"))
weather<-separate(weather,date,c("Year","Month","Day"),sep="-",remove=TRUE)
colnames(weather)<-c("Year","Month","Day","Tmax","Tmin")
sapply(weather,mode) #mode(weather)
weather$Year<-as.numeric(weather$Year)
weather$Month<-as.numeric(weather$Month)
weather$Day<-as.numeric(weather$Day)
unique(weather$Year)
weather<-filter(weather,Year>=1989)
#all_daylengths<-cbind(JDay=1:365,sapply(daylength(latitude=42.5,JDay=1:365),cbind)) ## calculate day length at HF on every day of year
#ad<-as.data.frame(all_daylengths) ## data frame of day length
weather<-make_all_day_table(weather)
hourtemps<-stack_hourly_temps(weather, latitude=42.5)$hourtemps ## make hourly
hourtemps$DATE<-ISOdate(hourtemps$Year,hourtemps$Month,hourtemps$Day,hourtemps$Hour)
HF.bb<-filter(HF,!is.na(bb.jd))
indies<-unique(HF.bb$tree.id)
df<-data.frame(Season=character(),End_year=numeric(),Season_days=numeric(),Data_days=numeric(), Perc_complete=numeric(),Chilling_Hours=numeric(),Utah_Model=numeric(),Chill_portions=numeric(), GDH=numeric(), tree.id=character())
for (i in seq_along(indies)){
dataoneplant<-filter(HF.bb,tree.id==indies[i])
burst<-dataoneplant$bb.jd
for(k in c(1:length(burst))){
climatt<-as.data.frame(chilling(hourtemps,Start_JDay=1,End_JDay=burst[k]))
climatt$tree.id<-indies[i]
df<-rbind(climatt,df)
}
}
View(df)
HF.bb<-filter(HF,!is.na(bb.jd))
indies<-unique(HF.bb$tree.id)
df<-data.frame(Season=character(),End_year=numeric(),Season_days=numeric(),Data_days=numeric(), Perc_complete=numeric(),Chilling_Hours=numeric(),Utah_Model=numeric(),Chill_portions=numeric(), GDH=numeric(), tree.id=character())
for (i in seq_along(indies)){
dataoneplant<-filter(HF.bb,tree.id==indies[i])
burst<-dataoneplant$bb.jd
for(k in c(1:length(burst))){
climatt<-as.data.frame(chilling(hourtemps,Start_JDay=1,End_JDay=burst[k]))
climatt$tree.id<-indies[i]}
df<-rbind(climatt,df) }
View(df)
View(HF.bb)
View(df)
df<-data.frame(Season=character(),End_year=numeric(),Season_days=numeric(),Data_days=numeric(), Perc_complete=numeric(),Chilling_Hours=numeric(),Utah_Model=numeric(),Chill_portions=numeric(), GDH=numeric(), tree.id=character(),species=character())
for (i in seq_along(indies)){
dataoneplant<-filter(HF.bb,tree.id==indies[i])
burst<-dataoneplant$bb.jd
for(k in c(1:length(burst))){
climatt<-as.data.frame(chilling(hourtemps,Start_JDay=1,End_JDay=burst[k]))
climatt$tree.id<-indies[i]
climatt$species<-unique(dataoneplant$species)}
df<-rbind(climatt,df) }
View(df)
df<-data.frame(Season=character(),End_year=numeric(),Season_days=numeric(),Data_days=numeric(), Perc_complete=numeric(),Chilling_Hours=numeric(),Utah_Model=numeric(),Chill_portions=numeric(), GDH=numeric(), tree.id=character(),species=character())
for (i in seq_along(indies)){
dataoneplant<-filter(HF.bb,tree.id==indies[i])
burst<-dataoneplant$bb.jd
for(k in c(1:length(burst))){
climatt<-as.data.frame(chilling(hourtemps,Start_JDay=1,End_JDay=burst[k]))
climatt$tree.id<-indies[i]
climatt$species<-unique(dataoneplant$species)}
df<-rbind(climatt,df) }
View(df)
HF.flo<-filter(HF,!is.na(fopn.jd))
indies2<-unique(HF.flo$tree.id)
for (i in seq_along(indies2)){
dataoneplant<-filter(HF.flo,tree.id==indies2[i])
burst<-dataoneplant$fopn.jd
for(k in c(1:length(burst))){
climatt<-as.data.frame(chilling(hourtemps,Start_JDay=1,End_JDay=burst[k]))
climatt$tree.id<-indies2[i]
climatt$species<-unique(dataoneplant$species)}
df2<-rbind(climatt,df2) }
df2<-data.frame(Season=character(),End_year=numeric(),Season_days=numeric(),Data_days=numeric(), Perc_complete=numeric(),Chilling_Hours=numeric(),Utah_Model=numeric(),Chill_portions=numeric(), GDH=numeric(), tree.id=character(),species=character())
for (i in seq_along(indies2)){
dataoneplant<-filter(HF.flo,tree.id==indies2[i])
burst<-dataoneplant$fopn.jd
for(k in c(1:length(burst))){
climatt<-as.data.frame(chilling(hourtemps,Start_JDay=1,End_JDay=burst[k]))
climatt$tree.id<-indies2[i]
climatt$species<-unique(dataoneplant$species)}
df2<-rbind(climatt,df2) }
View(df2)
df<-select(df,Season,End_Year,GDH,tree.id,species)
View(df)
df<-select(df,Season,End_year,GDH,tree.id,species)
df2<-elect(df2,Season,End_year,GDH,tree.id,species)
df2<-select(df2,Season,End_year,GDH,tree.id,species)
colnames(df)<-c("Season","End_year","GDH_bb","tree.id","species")
colnames(df2)<-c("Season","End_year","GDH_fl","tree.id","species")
daters<-left_join(df,df2)
View(daters)
daters<-left_join(d2,df)
daters<-left_join(df2,df)
View(daters)
daters$GDH_diff<-daters$GDD_bb-daters$GDD_fl
daters$GDH_diff<-daters$GDH_bb-daters$GDH_fl
View(daters)
lmer(GDH_diff~End_year)
lm(GDH_diff~End_year)
lm(GDH_diff~End_year,data=daters)
summary(lm(GDH_diff~End_year,data=daters))
aov(lm(GDH_diff~End_year,data=daters))
aov(GDH_diff~End_year,data=daters)
summary(aov(GDH_diff~End_year,data=daters))
library(lme4)
library(lmerTest)
install.packages("lmerTest")
library("lmerTest")
model <- lmer(GDD_diff ~ End_year + (1|tree.id),
data=daters,
REML=TRUE)
model <- lmer(GDH_diff ~ End_year + (1|tree.id),
data=daters,
REML=TRUE)
anova(model)
model <- lmer(GDH_diff ~ End_year + (End_year|tree.id),
data=daters,
REML=TRUE)
anova(model)
model <- lmer(GDH_diff ~ End_year + (1|tree.id),
data=daters,
REML=TRUE)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(aes(color=species))
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(color=species))
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species))
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_wrap(~species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species,group=tree.id),position="dodge")+facet_wrap(~species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species,group=tree.id),position="dodge")+facet_wrap(tree.id~species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_wrap(tree.id~species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_grid(tree.id~species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_wrap(species~tree.id)
daters<-separate(daters,tree.id,"Sp","tree.num",by="-")
View(daters)
daters<-left_join(df2,df)
daters$GDH_diff<-daters$GDH_bb-daters$GDH_fl
?separate()
daters<-separate(daters,tree.id,c("Sp","tree.num"),sep="-")
View(daters)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_wrap(species~tree.num)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_grid(species~tree.num)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_grid(tree.num~species)
daters.hyst<-filter(daters,GDH_diff>=0)
ggplot(daters.hyst,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_grid(tree.num~species)
daters.ser<-filter(daters,GDH_diff<=0)
ggplot(daters.ser,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_grid(tree.num~species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_grid(tree.num~species)
ggplot(daters.hyst,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_grid(tree.num~species)
ggplot(daters.hyst,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_grid(tree.num~species,scales = "free", space = "free")
ggplot(daters.ser,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_grid(tree.num~species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_wrap(species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_wrap(species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_wrap(~species)
ggplot(daters.hyst,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species,color=tree.num),position="dodge")+facet_grid(tree.num~species,scales = "free", space = "free")
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species,color=tree.num),position="dodge")+facet_wrap(~species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(color=tree.num),position="dodge")+facet_wrap(~species)
write.csv(dater,"GDH_diffs_HF.csv",row.names = FALSE)
write.csv(daters,"GDH_diffs_HF.csv",row.names = FALSE)
daters.hyst<-filter(daters,GDH_diff>=0)
ggplot(daters.hyst,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_grid(tree.num~species,scales = "free", space = "free")
ggplot(daters.hyst,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_wrap(~species,scales = "free", space = "free")
ggplot(daters.hyst,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_wrap(~species)
ggplot(daters.ser,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_wrap(~species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(color=tree.num),position="dodge")+facet_wrap(~species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(color=species),position="dodge")+facet_wrap(~species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_wrap(~species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species))+facet_wrap(~species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species))+facet_wrap(~species)+ylim(-1000,INF)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species))+facet_wrap(~species)+ylim(-1000,Inf)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species))+facet_wrap(~species)+ylim(-1000,40000)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species))+facet_wrap(~species)+ylim(-1000,30000)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species))+facet_wrap(~species)+ylim(-1000,20000)
ggplot(daters.hyst,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species),position="dodge")+facet_wrap(~species)
ggplot(daters,aes(End_year,GDH_diff))+geom_bar(stat="identity",aes(fill=species))+facet_wrap(~species)+ylim(-1000,5000)
