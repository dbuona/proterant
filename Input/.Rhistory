library(geiger)
library(randomForest)
library(gbm)
library(pez)
library(dplyr)
library(tidyr)
library(caper)
library(picante)
library(phylobase)
setwd("~/Documents/git/proterant/input")
###read in tree from Zanne et al
treee<-read.tree("Vascular_Plants_rooted.dated.tre")
#list of species in tree
names.intree<-treee$tip.label
### read in data from michigan trees, format it like Zanne
anthy<-read.csv("michigantrees_sequence.csv", header = TRUE)
anthy$name<-paste(anthy$Genus,anthy$Species,sep="_")
# list of my species myspecies
namelist<-unique(anthy$name)
##Prune the tree
to.prune<-which(!names.intree%in%namelist)
pruned.by.anthy<-drop.tip(treee,to.prune)
###what are the tip labels in pruned phylogeny?
mytree.names<-pruned.by.anthy$tip.label
#put the tree and data sheet in same order
final.df<-anthy[match(mytree.names, anthy$name),]
namelist2<-final.df$name
namelist2==mytree.names
final.df$name== mytree.names
##okay all catagories match
#now make a new column for proteranthy as a bianary trait
final.df["pro"]<-NA
final.df$pro[final.df$Phen.sequence == "pro"] <- 1
final.df$pro[final.df$Phen.sequence == "pro/syn"] <- 1
final.df$pro[final.df$Phen.sequence== "syn"] <- 0
final.df$pro[final.df$Phen.sequence== "syn/ser"] <- 0
final.df$pro[final.df$Phen.sequence== "ser"] <- 0
final.df$pro[final.df$Phen.sequence== "hyst"] <- 0
###now make pollination syndrom discrete
final.df["pol"]<-NA
final.df$pol[final.df$Pollination == "wind"] <- 9
final.df$pol[final.df$Pollination == "ambo"] <- 8
final.df$pol[final.df$Pollination == "insect"] <- 7
###make factors for bianary traits
final.df$pro<-as.integer(final.df$pro)
final.df$pol<-as.integer(final.df$pol)
##subset down to relevant columns
final.df<-select_(final.df, "name", "pro", "pol")
##make comprative data object
which(final.df$name%in%pruned.by.anthy$tip.label)
which(pruned.by.anthy$tip.label%in%final.df$name)
pruned.by.anthy$node.label<-""
d<-comparative.data(pruned.by.anthy,final.df,name, na.omit = FALSE)
d
phylo.d(d, binvar=pro)
phylo.d(d, binvar="pro")
treee
plot(treee)
plot(pruned.by.anthy)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
#load packages
library(stringr)
library(ape)
library(phytools)
library(geiger)
library(randomForest)
library(gbm)
library(pez)
library(dplyr)
library(tidyr)
library(caper)
library(picante)
library(phylobase)
setwd("~/Documents/git/proterant/input")
###read in tree from Zanne et al
treee<-read.tree("Vascular_Plants_rooted.dated.tre")
#list of species in tree
names.intree<-treee$tip.label
plot(treee)
###first attempt at plgs
## phylogeny of proterany as a bianary trait, adapt from first phylo_script.R april 10
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
#load packages
library(stringr)
library(ape)
library(phytools)
library(geiger)
library(randomForest)
library(gbm)
library(pez)
library(dplyr)
library(tidyr)
library(caper)
library(picante)
library(phylobase)
setwd("~/Documents/git/proterant/input")
###read in tree from Zanne et al
treee<-read.tree("Vascular_Plants_rooted.dated.tre")
#list of species in tree
names.intree<-treee$tip.label
### read in data from michigan trees, format it like Zanne
anthy<-read.csv("michigantrees_sequence.csv", header = TRUE)
anthy$name<-paste(anthy$Genus,anthy$Species,sep="_")
# list of my species myspecies
namelist<-unique(anthy$name)
##Prune the tree
to.prune<-which(!names.intree%in%namelist)
pruned.by.anthy<-drop.tip(treee,to.prune)
###what are the tip labels in pruned phylogeny?
mytree.names<-pruned.by.anthy$tip.label
#put the tree and data sheet in same order
final.df<-anthy[match(mytree.names, anthy$name),]
namelist2<-final.df$name
namelist2==mytree.names
final.df$name== mytree.names
##okay all catagories match
#now make a new column for proteranthy as a bianary trait
final.df["pro"]<-NA
final.df$pro[final.df$Phen.sequence == "pro"] <- 1
final.df$pro[final.df$Phen.sequence == "pro/syn"] <- 1
final.df$pro[final.df$Phen.sequence== "syn"] <- 0
final.df$pro[final.df$Phen.sequence== "syn/ser"] <- 0
final.df$pro[final.df$Phen.sequence== "ser"] <- 0
final.df$pro[final.df$Phen.sequence== "hyst"] <- 0
###now make pollination syndrom discrete
final.df["pol"]<-NA
final.df$pol[final.df$Pollination == "wind"] <- 9
final.df$pol[final.df$Pollination == "ambo"] <- 8
final.df$pol[final.df$Pollination == "insect"] <- 7
###make factors for bianary traits
final.df$pro<-as.integer(final.df$pro)
final.df$pol<-as.integer(final.df$pol)
plot(anoleData[, c("pol", "pro")])
plot(final.df[, c("pol", "pro")])
name.check(pruned.by.anthy, final.df)
View(final.df)
View(anthy)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
#load packages
library(stringr)
library(ape)
library(phytools)
library(geiger)
library(randomForest)
library(gbm)
library(pez)
library(dplyr)
library(tidyr)
library(caper)
library(picante)
library(phylobase)
setwd("~/Documents/git/proterant/input")
###read in tree from Zanne et al
treee<-read.tree("Vascular_Plants_rooted.dated.tre")
#list of species in tree
names.intree<-treee$tip.label
### read in data from michigan trees, format it like Zanne
anthy<-read.csv("michigantrees_sequence.csv", header = TRUE)
anthy$name<-paste(anthy$Genus,anthy$Species,sep="_")
# list of my species myspecies
namelist<-unique(anthy$name)
##Prune the tree
to.prune<-which(!names.intree%in%namelist)
pruned.by.anthy<-drop.tip(treee,to.prune)
###what are the tip labels in pruned phylogeny?
mytree.names<-pruned.by.anthy$tip.label
#put the tree and data sheet in same order
final.df<-anthy[match(mytree.names, anthy$name),]
namelist2<-final.df$name
namelist2==mytree.names
final.df$name== mytree.names
##okay all catagories match
#now make a new column for proteranthy as a bianary trait
final.df["pro"]<-NA
final.df$pro[final.df$Phen.sequence == "pro"] <- 1
final.df$pro[final.df$Phen.sequence == "pro/syn"] <- 1
final.df$pro[final.df$Phen.sequence== "syn"] <- 0
final.df$pro[final.df$Phen.sequence== "syn/ser"] <- 0
final.df$pro[final.df$Phen.sequence== "ser"] <- 0
final.df$pro[final.df$Phen.sequence== "hyst"] <- 0
###now make pollination syndrom discrete
final.df["pol"]<-NA
final.df$pol[final.df$Pollination == "wind"] <- 9
final.df$pol[final.df$Pollination == "ambo"] <- 8
final.df$pol[final.df$Pollination == "insect"] <- 7
###make factors for bianary traits
final.df$pro<-as.integer(final.df$pro)
final.df$pol<-as.integer(final.df$pol)
name.check(pruned.by.anthy, final.df)
plot(final.df[, c("pol", "pro")])
plot(final.df[, c("Phen.sequence", "Pollination")])
name.check(pruned.by.anthy, final.df)
View(name.check(pruned.by.anthy, final.df))
View(name.check(pruned.by.anthy, final.df, data.names=name))
View(name.check(pruned.by.anthy, final.df, data.names="name"))
name.check(pruned.by.anthy, final.df, data.names=final.df$name)
plot(anoleData[, c("pro", "pol")])
plot(final.df[, c("pro", "pol")])
plot(jitter(final.df[, c("pro", "pol")]))
plot(final.df[, jitter(c("pro", "pol")])
pro <- final.df[, "pro"]
pol<- final.df[, "pol"]
# Give them names
#names(pol) <- names(pro) <-
# Calculate PICs
proPic <- pic(pro, final.df)
polPic <- pic(pol, final.df)
proPic <- pic(pro, pruned.by.anthy)
polPic <- pic(pol, pruned.by.anthy)
picModel <- lm(proPic ~ polPic - 1)
summary(picModel)
picModel <- lm(proPic ~ polPic - 1)
polPic <- pic(pol, pruned.by.anthy)
View(final.df)
###first attempt at plgs
## phylogeny of proterany as a bianary trait, adapt from first phylo_script.R april 10
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
#load packages
library(stringr)
library(ape)
library(phytools)
library(geiger)
library(randomForest)
library(gbm)
library(pez)
library(dplyr)
library(tidyr)
library(caper)
library(picante)
library(phylobase)
setwd("~/Documents/git/proterant/input")
###read in tree from Zanne et al
treee<-read.tree("Vascular_Plants_rooted.dated.tre")
#list of species in tree
names.intree<-treee$tip.label
### read in data from michigan trees, format it like Zanne
anthy<-read.csv("michigantrees_sequence.csv", header = TRUE)
anthy$name<-paste(anthy$Genus,anthy$Species,sep="_")
# list of my species myspecies
namelist<-unique(anthy$name)
##Prune the tree
to.prune<-which(!names.intree%in%namelist)
pruned.by.anthy<-drop.tip(treee,to.prune)
###what are the tip labels in pruned phylogeny?
mytree.names<-pruned.by.anthy$tip.label
#put the tree and data sheet in same order
final.df<-anthy[match(mytree.names, anthy$name),]
namelist2<-final.df$name
namelist2==mytree.names
final.df$name== mytree.names
##okay all catagories match
#now make a new column for proteranthy as a bianary trait
final.df["pro"]<-NA
final.df$pro[final.df$Phen.sequence == "pro"] <- 1
final.df$pro[final.df$Phen.sequence == "pro/syn"] <- 1
final.df$pro[final.df$Phen.sequence== "syn"] <- 0
final.df$pro[final.df$Phen.sequence== "syn/ser"] <- 0
final.df$pro[final.df$Phen.sequence== "ser"] <- 0
final.df$pro[final.df$Phen.sequence== "hyst"] <- 0
###now make pollination syndrom discrete
final.df["pol"]<-NA
final.df$pol[final.df$Pollination == "wind"] <- 9
final.df$pol[final.df$Pollination == "ambo"] <- 8
final.df$pol[final.df$Pollination == "insect"] <- 7
final.df$pol[final.df$Pollination == "NA"] <-8
###make factors for bianary traits
final.df$pro<-as.integer(final.df$pro)
final.df$pol<-as.integer(final.df$pol)
name.check(pruned.by.anthy, final.df, data.names=final.df$name)
plot(final.df(c("pro", "pol")])
#model
pro <- final.df[, "pro"]
pol<- final.df[, "pol"]
# Give them names
names(pol) <- names(pro) <-
# Calculate PICs
proPic <- pic(pro, pruned.by.anthy)
polPic <- pic(pol, pruned.by.anthy)
View(final.df)
###first attempt at plgs
## phylogeny of proterany as a bianary trait, adapt from first phylo_script.R april 10
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
#load packages
library(stringr)
library(ape)
library(phytools)
library(geiger)
library(randomForest)
library(gbm)
library(pez)
library(dplyr)
library(tidyr)
library(caper)
library(picante)
library(phylobase)
setwd("~/Documents/git/proterant/input")
###read in tree from Zanne et al
treee<-read.tree("Vascular_Plants_rooted.dated.tre")
#list of species in tree
names.intree<-treee$tip.label
### read in data from michigan trees, format it like Zanne
anthy<-read.csv("michigantrees_sequence.csv", header = TRUE)
anthy$name<-paste(anthy$Genus,anthy$Species,sep="_")
# list of my species myspecies
namelist<-unique(anthy$name)
##Prune the tree
to.prune<-which(!names.intree%in%namelist)
pruned.by.anthy<-drop.tip(treee,to.prune)
###what are the tip labels in pruned phylogeny?
mytree.names<-pruned.by.anthy$tip.label
#put the tree and data sheet in same order
final.df<-anthy[match(mytree.names, anthy$name),]
namelist2<-final.df$name
namelist2==mytree.names
final.df$name== mytree.names
##okay all catagories match
#now make a new column for proteranthy as a bianary trait
final.df["pro"]<-NA
final.df$pro[final.df$Phen.sequence == "pro"] <- 1
final.df$pro[final.df$Phen.sequence == "pro/syn"] <- 1
final.df$pro[final.df$Phen.sequence== "syn"] <- 0
final.df$pro[final.df$Phen.sequence== "syn/ser"] <- 0
final.df$pro[final.df$Phen.sequence== "ser"] <- 0
final.df$pro[final.df$Phen.sequence== "hyst"] <- 0
final.df["pol"]<-NA
final.df$pol[final.df$Pollination == "wind"] <- 9
final.df$pol[final.df$Pollination == "ambo"] <- 8
final.df$pol[final.df$Pollination == "insect"] <- 7
final.df$pol[final.df$Pollination == "NA"] <-8
View(final.df)
final.df$pol[final.df$Pollination == NA] <-8
final.df$pol[final.df$Pollination == "NA"] <-8
View(final.df)
final.df$pol[final.df$Pollination == NA] <-8
final.df$pol[final.df$Pollination == is.na(final.df$Pollination)] <-8
final.df$pol[final.df$Pollination == "")] <-8
final.df$pol[final.df$Pollination == ""] <-8
final.df$pol<-ifelse(final.df$pol==NA, 8, final.df$pol)
###first attempt at plgs
## phylogeny of proterany as a bianary trait, adapt from first phylo_script.R april 10
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
#load packages
library(stringr)
library(ape)
library(phytools)
library(geiger)
library(randomForest)
library(gbm)
library(pez)
library(dplyr)
library(tidyr)
library(caper)
library(picante)
library(phylobase)
setwd("~/Documents/git/proterant/input")
###read in tree from Zanne et al
treee<-read.tree("Vascular_Plants_rooted.dated.tre")
#list of species in tree
names.intree<-treee$tip.label
### read in data from michigan trees, format it like Zanne
anthy<-read.csv("michigantrees_sequence.csv", header = TRUE)
anthy$name<-paste(anthy$Genus,anthy$Species,sep="_")
# list of my species myspecies
namelist<-unique(anthy$name)
##Prune the tree
to.prune<-which(!names.intree%in%namelist)
pruned.by.anthy<-drop.tip(treee,to.prune)
###what are the tip labels in pruned phylogeny?
mytree.names<-pruned.by.anthy$tip.label
#put the tree and data sheet in same order
final.df<-anthy[match(mytree.names, anthy$name),]
namelist2<-final.df$name
namelist2==mytree.names
final.df$name== mytree.names
##okay all catagories match
#now make a new column for proteranthy as a bianary trait
final.df["pro"]<-NA
final.df$pro[final.df$Phen.sequence == "pro"] <- 1
final.df$pro[final.df$Phen.sequence == "pro/syn"] <- 1
final.df$pro[final.df$Phen.sequence== "syn"] <- 0
final.df$pro[final.df$Phen.sequence== "syn/ser"] <- 0
final.df$pro[final.df$Phen.sequence== "ser"] <- 0
final.df$pro[final.df$Phen.sequence== "hyst"] <- 0
###now make pollination syndrom discrete
final.df["pol"]<-NA
final.df$pol[final.df$Pollination == "wind"] <- 9
final.df$pol[final.df$Pollination == "ambo"] <- 8
final.df$pol[final.df$Pollination == "insect"] <- 7
final.df$pol[final.df$Pollination == ""] <-8
final.df$pol<-ifelse(final.df$pol=="", 8, final.df$pol)
final.df$pol<-ifelse(final.df$pol=NA, 8, final.df$pol)
final.df$pol<-ifelse(final.df$pol==NA, 8, final.df$pol)
###first attempt at plgs
## phylogeny of proterany as a bianary trait, adapt from first phylo_script.R april 10
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
#load packages
library(stringr)
library(ape)
library(phytools)
library(geiger)
library(randomForest)
library(gbm)
library(pez)
library(dplyr)
library(tidyr)
library(caper)
library(picante)
library(phylobase)
setwd("~/Documents/git/proterant/input")
###read in tree from Zanne et al
treee<-read.tree("Vascular_Plants_rooted.dated.tre")
#list of species in tree
names.intree<-treee$tip.label
### read in data from michigan trees, format it like Zanne
anthy<-read.csv("michigantrees_sequence.csv", header = TRUE)
anthy$name<-paste(anthy$Genus,anthy$Species,sep="_")
# list of my species myspecies
namelist<-unique(anthy$name)
##Prune the tree
to.prune<-which(!names.intree%in%namelist)
pruned.by.anthy<-drop.tip(treee,to.prune)
###what are the tip labels in pruned phylogeny?
mytree.names<-pruned.by.anthy$tip.label
#put the tree and data sheet in same order
final.df<-anthy[match(mytree.names, anthy$name),]
namelist2<-final.df$name
namelist2==mytree.names
final.df$name== mytree.names
##okay all catagories match
#now make a new column for proteranthy as a bianary trait
final.df["pro"]<-NA
final.df$pro[final.df$Phen.sequence == "pro"] <- 1
final.df$pro[final.df$Phen.sequence == "pro/syn"] <- 1
final.df$pro[final.df$Phen.sequence== "syn"] <- 0
final.df$pro[final.df$Phen.sequence== "syn/ser"] <- 0
final.df$pro[final.df$Phen.sequence== "ser"] <- 0
final.df$pro[final.df$Phen.sequence== "hyst"] <- 0
###now make pollination syndrom discrete
final.df["pol"]<-NA
final.df$pol[final.df$Pollination == "wind"] <- 9
final.df$pol[final.df$Pollination == "ambo"] <- 8
final.df$pol[final.df$Pollination == "insect"] <- 7
final.df$pro<-as.character(final.df$pro)
final.df$pol[final.df$Pollination == NA] <-8
###first attempt at plgs
## phylogeny of proterany as a bianary trait, adapt from first phylo_script.R april 10
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
#load packages
library(stringr)
library(ape)
library(phytools)
library(geiger)
library(randomForest)
library(gbm)
library(pez)
library(dplyr)
library(tidyr)
library(caper)
library(picante)
library(phylobase)
setwd("~/Documents/git/proterant/input")
###read in tree from Zanne et al
treee<-read.tree("Vascular_Plants_rooted.dated.tre")
#list of species in tree
names.intree<-treee$tip.label
### read in data from michigan trees, format it like Zanne
anthy<-read.csv("michigantrees_sequence.csv", header = TRUE)
anthy$name<-paste(anthy$Genus,anthy$Species,sep="_")
# list of my species myspecies
namelist<-unique(anthy$name)
##Prune the tree
to.prune<-which(!names.intree%in%namelist)
pruned.by.anthy<-drop.tip(treee,to.prune)
###what are the tip labels in pruned phylogeny?
mytree.names<-pruned.by.anthy$tip.label
#put the tree and data sheet in same order
final.df<-anthy[match(mytree.names, anthy$name),]
namelist2<-final.df$name
namelist2==mytree.names
final.df$name== mytree.names
##okay all catagories match
#now make a new column for proteranthy as a bianary trait
final.df["pro"]<-NA
final.df$pro[final.df$Phen.sequence == "pro"] <- 1
final.df$pro[final.df$Phen.sequence == "pro/syn"] <- 1
final.df$pro[final.df$Phen.sequence== "syn"] <- 0
final.df$pro[final.df$Phen.sequence== "syn/ser"] <- 0
final.df$pro[final.df$Phen.sequence== "ser"] <- 0
final.df$pro[final.df$Phen.sequence== "hyst"] <- 0
###now make pollination syndrom discrete
final.df["pol"]<-0
final.df$pol[final.df$Pollination == "wind"] <- 9
final.df$pol[final.df$Pollination == "ambo"] <- 8
final.df$pol[final.df$Pollination == "insect"] <- 7
final.df$pol[final.df$Pollination ==0 ] <-8
final.df$pol<-ifelse(final.df$pol==0, 8, final.df$pol)
