rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant")
library("phytools")
library(broom)
library(dplyr)
library(tidyr)
library(boot)
library("ggplot2")
library(car)
library(lme4)
library(brms)
library(ggstance)
library(MCMCglmm)
source("Scripts/continuous_mod_prep.R")
load("continuous.mods.RData")
use.sp<-c("ACPE","ACRU","QURU")
d.plus<-filter(d, species %in% use.sp)
jpeg("../figure/individual_HF_var.jpg")
ggplot(d.plus)+stat_summary(fun.data = "mean_cl_boot",geom="errorbar",aes(tree.id, offset.phys,color=species),linetype="solid")+stat_summary(fun.data = "mean_cl_boot", geom = "errorbar",aes(tree.id,offset.funct,color=species),linetype="dashed")+stat_summary(fun.data = "mean_cl_boot", geom = "errorbar",aes(tree.id,offset.inter,color=species),linetype="dotdash")+theme_bw()+scale_color_manual(values=c("darkgreen","red","blue"))+ylab("FLS offset")+xlab("tree ID")
dev.off()
m<-lmer(offset.inter~tree.id+(1|species)+(1|year),data=d.plus)
n<-lmer(offset.phys~tree.id+(1|species)+(1|year),data=d.plus)
o<-lmer(offset.funct~tree.id+(1|species)+(1|year),data=d.plus)
Anova(m)
Anova(n)
Anova(o)
jpeg("../figure/interannual_HF_var.jpg")
ggplot(d.plus)+geom_line(aes(year,offset.funct, group=tree.id, color=species),linetype="dashed")+theme_bw()+scale_color_manual(values=c("darkgreen","red","blue"))+geom_line(aes(year,offset.phys, group=tree.id, color=species),linetype="solid")+theme_bw()+scale_color_manual(values=c("darkgreen","red","blue"))+geom_line(aes(year,offset.inter, group=tree.id, color=species),linetype="dotdash")+theme_bw()+scale_color_manual(values=c("darkgreen","red","blue"))+ylab("FLS offset")
dev.off()
mm<-lmer(offset.inter~year+(1|tree.id),data=d.plus)
nn<-lmer(offset.phys~year+(1|tree.id),data=d.plus)
oo<-lmer(offset.funct~year+(1|tree.id),data=d.plus)
summary(mm)
Anova(mm)
spfordata<-traits$species
d<-filter(d,species %in% c(spfordata))
dater<-left_join(d,traits, by="species")
intersect(traits$species, dater$species)
unique(dater$species)
#flower_ave<-dater %>% group_by(name) %>% summarise(average.flower.time=mean(fopn.jd,na.rm=TRUE))
flower_ave<-dplyr::select(dater,tree.id,species,name, year,fopn.jd)
flower_ave$origin <- as.Date(paste0(flower_ave$year, "-01-01"),tz = "UTC")
flower_ave$flo_date<-as.Date(flower_ave$fopn.jd, origin = flower_ave$origin, tz = "UTC")
flower_ave<-separate(flower_ave, flo_date, c("year", "month", "dia"))
flower_ave$month<-as.numeric(flower_ave$month)
flo_month<-flower_ave %>% group_by(name) %>% summarise(flowering_month=mean(month,na.rm=TRUE))
dater<-left_join(dater,flo_month, by="name")
dater$cent_flo_month<-(dater$flowering_month-mean(dater$flowering_month,na.rm=TRUE))/(2*sd(dater$flowering_month,na.rm=TRUE))
dater$cent_floday<-(dater$fopn.jd-mean(dater$fopn.jd,na.rm=TRUE))/(2*sd(dater$fopn.jd,na.rm=TRUE))
library(brms)
inv.phylo <- MCMCglmm::inverseA(HF.tree.pruned, nodes = "TIPS", scale = TRUE)
A <- solve(inv.phylo$Ainv)
rownames(A) <- rownames(inv.phylo$Ainv)
###bayesian and continuous-- main model###############
###all measurements of flowering time swamp all other predictors
modelcont.funct <- brm(offset.funct~cent_pol+cent_minP+cent_flo_month +(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
modelcont.phys <- brm(offset.phys~ cent_pol+cent_minP+cent_flo_month+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
modelcont.inter <- brm(offset.inter~ cent_pol+cent_minP+cent_flo_month+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
Aa<-as.data.frame(tidy(modelcont.funct,robust = TRUE))
Aa<-Aa %>% "["(.,2:5,)
Aa$class<-"functional"
Bb<-as.data.frame(tidy(modelcont.inter,robust = TRUE))
Bb<-Bb %>% "["(.,2:5,)
Bb$class<-"intermediate"
Cc<-as.data.frame(tidy(modelcont.phys,robust = TRUE))
Cc<-Cc %>% "["(.,2:5,)
Cc$class<-"physiological"
Dd<-rbind(Aa,Bb,Cc)
library(ggstance)
pd=position_dodgev(height=0.3)
ggplot(Dd,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
# housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
# Setting working directory. Add in your own path in an if statement for your file structure
if(length(grep("lizzie", getwd())>0)) {
setwd("~/Documents/git/treegarden/budreview/ospree/bb_analysis")
} else if (length(grep("ailene", getwd()))>0) {setwd("/Users/aileneettinger/git/ospree/analyses/bb_analysis")
}else if(length(grep("Ignacio", getwd()))>0) {
setwd("~/GitHub/ospree/analyses/bb_analysis")
} else if(length(grep("catchamberlain", getwd()))>0) {
setwd("~/Documents/git/ospree/analyses/bb_analysis")
} else if(length(grep("danielbuonaiuto", getwd()))>0) {
setwd("~/Documents/git/ospree/analyses/bb_analysis")
}else setwd("~/Documents/git/projects/treegarden/budreview/ospree/analyses/bb_analysis")
# dostan = TRUE
# Flags to choose for bbstanleadin.R
use.chillunits = FALSE # change to true for testing chill units
use.allspp = FALSE
source("source/bbstanleadin.R")
####c### This is the final analysis file for hysteranthy anaylsis on MTSV as of 3/28/18.
###major update on 11.27.18
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant/input")
library("ape")
library("phytools")
library("geiger")
library("gbm")
library("pez")
library(caper)
library(picante)
library("tidyverse")
library(boot)
library("phylolm")
library("ggplot2")
library(arm)
library("randomForest")
library(car)
library(ggstance)
library(broom)
mich.tree<-read.tree("pruned_for_mich.tre")
mich.data<-read.csv("mich_data_full_clean.csv")
drought.dat<-read.csv("..//Data/USDA_traitfor_MTSV.csv",header=TRUE)
##############################################
###Now do all you did with silvics
#######################################################
silv.tree<-read.tree("pruned_silvics.tre")
silv.data<-read.csv("silv_data_full.csv")
silv.tree$node.label<-NULL
silv.data<-left_join(silv.data,drought.dat) ###maybe you should make a drought species list specifically for silvics to lose less species
View(silv.data)
silv.USDA<-select(silv.data,name,min._precip,min_temp, frost_free)
silv.USDA<-dplyr::select(silv.data,name,min._precip,min_temp, frost_free)
write.csv(silv.USDA, "silv.USDA.CSV",rownames= FALSE)
write.csv(silv.USDA, "silv.USDA.CSV",rownames=FALSE)
write.csv(silv.USDA, "silv.USDA.csv")
silv.USDA<-read.csv("silv.USDA.csv")
silv.tree$node.label<-NULL
silv.data<-left_join(silv.data,drought.dat) ###maybe you should make a drought species list specifically for silvics to lose less species
##############################################
###Now do all you did with silvics
#######################################################
silv.tree<-read.tree("pruned_silvics.tre")
silv.data<-read.csv("silv_data_full.csv")
silv.USDA<-read.csv("silv.USDA.csv")
silv.tree$node.label<-NULL
silv.data<-left_join(silv.data,drought.dat) ###maybe you should make a drought species list specifically for silvics to lose less species
####Silvics cleaning########
###fruiting
silv.data$fruiting<-NA
silv.data$fruiting<-silv.data$av_fruit_time
###functional hysteranthy
silv.data["pro2"]<-NA
silv.data$pro2[silv.data$silvic_phen_seq== "pro"] <- 1
silv.data$pro2[silv.data$silvic_phen_seq== "pro/syn"] <- 1
silv.data$pro2[silv.data$silvic_phen_seq== "syn"] <- 1
silv.data$pro2[silv.data$silvic_phen_seq== "syn/ser"] <- 0
silv.data$pro2[silv.data$silvic_phen_seq== "ser"] <- 0
silv.data$pro2[silv.data$silvic_phen_seq== "hyst"] <- 0
silv.data$pro2[silv.data$name == "Quercus_laurifolia"] <- 1
###super bio hysteranthy for silvics
silv.data["pro3"]<-NA
silv.data$pro3[silv.data$silvic_phen_seq== "pro"] <- 1
silv.data$pro3[silv.data$silvic_phen_seq== "pro/syn"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "syn"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "syn/ser"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "ser"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "hyst"] <- 0
silv.data$pro3[silv.data$name == "Quercus_laurifolia"] <- 1
###silv rescaling
silv.data$height_cent<-(silv.data$height-mean(silv.data$height))/(2*sd(silv.data$height))
silv.data$fruit_cent<-(silv.data$fruiting-mean(silv.data$fruiting))/(2*sd(silv.data$fruiting))
silv.data$flo_cent<-(silv.data$flower_time-mean(silv.data$flower_time))/(2*sd(silv.data$flower_time))
silv.data$pol_cent<-(silv.data$pol-mean(silv.data$pol))/(2*sd(silv.data$pol))
silv.data$tol_cent<-(silv.data$shade_bin-mean(silv.data$shade_bin))/(2*sd(silv.data$shade_bin))
silv.data$dev.time<-silv.data$fruiting-silv.data$flower_time
silv.data$dev_time_cent<-(silv.data$dev.time-mean(silv.data$dev.time))/(2*sd(silv.data$dev.time))
#######make a datasheet for dealing with slilvics drought
silv.data.wdrought<-filter(silv.data,!is.na(min._precip))
silv.data.wdrought$precip_cent<-(silv.data.wdrought$min._precip-mean(silv.data.wdrought$min._precip))/(2*sd(silv.data.wdrought$min._precip))
####prune silvics tree to match reduced dataset
names.intree<-silv.tree$tip.label
namelist<-unique(silv.data.wdrought$name)
to.prune<-which(!names.intree%in%namelist)
silv.tree.droughtprune<-drop.tip(silv.tree,to.prune)
mytree.names<-silv.tree.droughtprune$tip.label
setdiff(namelist,mytree.names)
intersect(namelist,mytree.names)
##############################################
###Now do all you did with silvics
#######################################################
silv.tree<-read.tree("pruned_silvics.tre")
silv.data<-read.csv("silv_data_full.csv")
silv.USDA<-read.csv("silv.USDA.csv")
silv.tree$node.label<-NULL
silv.data<-left_join(silv.data,silv.USDA) ###maybe you should make a drought species list specifically for silvics to lose less species
####Silvics cleaning########
###fruiting
silv.data$fruiting<-NA
silv.data$fruiting<-silv.data$av_fruit_time
###functional hysteranthy
silv.data["pro2"]<-NA
silv.data$pro2[silv.data$silvic_phen_seq== "pro"] <- 1
silv.data$pro2[silv.data$silvic_phen_seq== "pro/syn"] <- 1
silv.data$pro2[silv.data$silvic_phen_seq== "syn"] <- 1
silv.data$pro2[silv.data$silvic_phen_seq== "syn/ser"] <- 0
silv.data$pro2[silv.data$silvic_phen_seq== "ser"] <- 0
silv.data$pro2[silv.data$silvic_phen_seq== "hyst"] <- 0
silv.data$pro2[silv.data$name == "Quercus_laurifolia"] <- 1
###super bio hysteranthy for silvics
silv.data["pro3"]<-NA
silv.data$pro3[silv.data$silvic_phen_seq== "pro"] <- 1
silv.data$pro3[silv.data$silvic_phen_seq== "pro/syn"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "syn"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "syn/ser"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "ser"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "hyst"] <- 0
silv.data$pro3[silv.data$name == "Quercus_laurifolia"] <- 1
###silv rescaling
silv.data$height_cent<-(silv.data$height-mean(silv.data$height))/(2*sd(silv.data$height))
silv.data$fruit_cent<-(silv.data$fruiting-mean(silv.data$fruiting))/(2*sd(silv.data$fruiting))
silv.data$flo_cent<-(silv.data$flower_time-mean(silv.data$flower_time))/(2*sd(silv.data$flower_time))
silv.data$pol_cent<-(silv.data$pol-mean(silv.data$pol))/(2*sd(silv.data$pol))
silv.data$tol_cent<-(silv.data$shade_bin-mean(silv.data$shade_bin))/(2*sd(silv.data$shade_bin))
silv.data$dev.time<-silv.data$fruiting-silv.data$flower_time
silv.data$dev_time_cent<-(silv.data$dev.time-mean(silv.data$dev.time))/(2*sd(silv.data$dev.time))
#######make a datasheet for dealing with slilvics drought
silv.data.wdrought<-filter(silv.data,!is.na(min._precip))
silv.data.wdrought$precip_cent<-(silv.data.wdrought$min._precip-mean(silv.data.wdrought$min._precip))/(2*sd(silv.data.wdrought$min._precip))
####prune silvics tree to match reduced dataset
names.intree<-silv.tree$tip.label
namelist<-unique(silv.data.wdrought$name)
to.prune<-which(!names.intree%in%namelist)
silv.tree.droughtprune<-drop.tip(silv.tree,to.prune)
mytree.names<-silv.tree.droughtprune$tip.label
setdiff(namelist,mytree.names)
intersect(namelist,mytree.names)
#############################################################################################
#####silvics########  with drought
##########################################################################################
silv.data.wdrought<- silv.data.wdrought %>% remove_rownames %>% column_to_rownames(var="name")
z.funct.drought.silvics<-phyloglm(pro2~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent,silv.data.wdrought, silv.tree.droughtprune, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=599,full.matrix = TRUE)
z.phys.drought.silvics<-phyloglm(pro3~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent,silv.data.wdrought, silv.tree.droughtprune, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=599,full.matrix = TRUE)
z.inter.drought.silvics<-phyloglm(pro~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent,silv.data.wdrought, silv.tree.droughtprune, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=599,full.matrix = TRUE)
bootestSI<-as.data.frame(z.inter.drought.silvics$coefficients)
bootconfSI<-as.data.frame(z.inter.drought.silvics$bootconfint95)
bootconfSI<-as.data.frame(t(bootconfSI))
bootestSI<-rownames_to_column(bootestSI, "trait")
bootconfSI<-rownames_to_column(bootconfSI, "trait")
bootdroughtII<-full_join(bootconfSI,bootestSI, by="trait")
colnames(bootdroughtII)<-c("trait","low","high","estimate")
bootdroughtII<-dplyr::filter(bootdroughtII, trait!="alpha")
bootdroughtII<-dplyr::filter(bootdroughtII, trait!="(Intercept)")
bootdroughtII$class<-"intermediate-USFS"
bootestSF<-as.data.frame(z.funct.drought.silvics$coefficients)
bootconfSF<-as.data.frame(z.funct.drought.silvics$bootconfint95)
bootconfSF<-as.data.frame(t(bootconfSF))
bootestSF<-rownames_to_column(bootestSF, "trait")
bootconfSF<-rownames_to_column(bootconfSF, "trait")
bootdroughtFF<-full_join(bootconfSF,bootestSF, by="trait")
colnames(bootdroughtFF)<-c("trait","low","high","estimate")
bootdroughtFF<-dplyr::filter(bootdroughtFF, trait!="alpha")
bootdroughtFF<-dplyr::filter(bootdroughtFF, trait!="(Intercept)")
bootdroughtFF$class<-"functional-USFS"
bootestSP<-as.data.frame(z.phys.drought.silvics$coefficients)
bootconfSP<-as.data.frame(z.phys.drought.silvics$bootconfint95)
bootconfSP<-as.data.frame(t(bootconfSP))
bootestSP<-rownames_to_column(bootestSP, "trait")
bootconfSP<-rownames_to_column(bootconfSP, "trait")
bootdroughtPP<-full_join(bootconfSP,bootestSP, by="trait")
colnames(bootdroughtPP)<-c("trait","low","high","estimate")
bootdroughtPP<-dplyr::filter(bootdroughtPP, trait!="alpha")
bootdroughtPP<-dplyr::filter(bootdroughtPP, trait!="(Intercept)")
bootdroughtPP$class<-"physiological-USFS"
bootdrought.USFS<-rbind(bootdroughtFF,bootdroughtPP)
bootdrought.USFS<-rbind(bootdrought.USFS,bootdroughtII)
plotty2<-ggplot(bootdrought.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=class),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=class))+geom_vline(aes(xintercept=0))+theme_bw()
plotty2<-ggplot(bootdrought.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=class),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=class))+geom_vline(aes(xintercept=0))+theme_bw()
plotty2
###and plot
pd=position_dodgev(height=0.4)
plotty2<-ggplot(bootdrought.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=class),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=class))+geom_vline(aes(xintercept=0))+theme_bw()
plotty2
comps<-rbind(bootdrought,bootdrought.USFS)
#if you dont want to run the model:
load("hystmodels.RData")
comps<-rbind(bootdrought,bootdrought.USFS)
plotty3
plotty3<-ggplot(comps,aes(estimate,trait))+geom_point(size=2.5,aes(color=class),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=class))+geom_vline(aes(xintercept=0))+theme_bw()
plotty3
comps$category<-NA
comps$category<-NA
comps$category[which(comps$class=="physiological-Silvics")] <- "physiological"
comps$category[which(comps$class=="physiological-MTSV")] <- "physiological"
comps$category[which(comps$class=="functional-Silvics")] <- "functional"
comps$category[which(comps$class=="functional-MTSV")] <- "functional"
comps$category[which(comps$class=="intermidiate-MTSV")] <- "intermediate"
comps$category[which(comps$class=="intermidiate-Silvics")] <- "intermediate"
comps$data<-NA
comps$data[which(comps$class=="physiological-Silvics")] <- "USFS"
comps$data[which(comps$class=="physiological-MTSV")] <- "MTSV"
comps$data[which(comps$class=="functional-Silvics")] <- "USFS"
comps$data[which(comps$class=="functional-MTSV")] <- "MTSV"
comps$data[which(comps$class=="intermidiate-MTSV")] <- "MTSV"
comps$data[which(comps$class=="intermidiate-Silvics")] <- "USFS"
plotty3<-ggplot(comps,aes(estimate,trait))+geom_point(size=2.5,aes(color=catagory,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=catagory,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()
plotty3
plotty3<-ggplot(comps,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()
plotty3
comps<-rbind(bootdrought,bootdrought.USFS)
comps$category<-NA
comps$category[which(comps$class=="physiological-Silvics")] <- "physiological"
comps$category[which(comps$class=="physiological-MTSV")] <- "physiological"
comps$category[which(comps$class=="functional-Silvics")] <- "functional"
comps$category[which(comps$class=="functional-MTSV")] <- "functional"
comps$category[which(comps$class=="intermidiate-MTSV")] <- "intermediate"
comps$category[which(comps$class=="intermidiate-Silvics")] <- "intermediate"
comps$data<-NA
comps$data[which(comps$class=="physiological-Silvics")] <- "USFS"
comps$category<-NA
comps$category[which(comps$class=="physiological-USFS")] <- "physiological"
comps$category[which(comps$class=="physiological-MTSV")] <- "physiological"
comps$category[which(comps$class=="functional-USFS")] <- "functional"
comps$category[which(comps$class=="functional-MTSV")] <- "functional"
comps$category[which(comps$class=="intermidiate-MTSV")] <- "intermediate"
comps$category[which(comps$class=="intermidiate-USFS")] <- "intermediate"
comps$data<-NA
comps$data[which(comps$class=="physiological-USFS")] <- "USFS"
comps$data[which(comps$class=="physiological-MTSV")] <- "MTSV"
comps$data[which(comps$class=="functional-USFS")] <- "USFS"
comps$data[which(comps$class=="functional-MTSV")] <- "MTSV"
comps$data[which(comps$class=="intermidiate-MTSV")] <- "MTSV"
comps$data[which(comps$class=="intermidiate-USFS")] <- "USFS"
plotty3<-ggplot(comps,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()
plotty3
comps$category[which(comps$class=="physiological-USFS")] <- "physiological"
comps$category[which(comps$class=="physiological-MTSV")] <- "physiological"
comps$category[which(comps$class=="functional-USFS")] <- "functional"
comps$category[which(comps$class=="functional-MTSV")] <- "functional"
comps$category[which(comps$class=="interiediate-MTSV")] <- "intermediate"
comps$category[which(comps$class=="intermediate-USFS")] <- "intermediate"
comps$data<-NA
comps$data[which(comps$class=="physiological-USFS")] <- "USFS"
comps$data[which(comps$class=="physiological-MTSV")] <- "MTSV"
comps$data[which(comps$class=="functional-USFS")] <- "USFS"
comps$data[which(comps$class=="functional-MTSV")] <- "MTSV"
comps$data[which(comps$class=="intermidiate-MTSV")] <- "MTSV"
comps$data[which(comps$class=="intermediate-USFS")] <- "USFS"
plotty3<-ggplot(comps,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()
plotty3
comps$category<-NA
comps$category[which(comps$class=="physiological-USFS")] <- "physiological"
comps$category[which(comps$class=="physiological-MTSV")] <- "physiological"
comps$category[which(comps$class=="functional-USFS")] <- "functional"
comps$category[which(comps$class=="functional-MTSV")] <- "functional"
comps$category[which(comps$class=="intermidiate-MTSV")] <- "intermediate"
comps$category[which(comps$class=="intermediate-USFS")] <- "intermediate"
comps$data<-NA
comps$data[which(comps$class=="physiological-USFS")] <- "USFS"
comps$data[which(comps$class=="physiological-MTSV")] <- "MTSV"
comps$data[which(comps$class=="functional-USFS")] <- "USFS"
comps$data[which(comps$class=="functional-MTSV")] <- "MTSV"
comps$data[which(comps$class=="intermidiate-MTSV")] <- "MTSV"
comps$data[which(comps$class=="intermediate-USFS")] <- "USFS"
plotty3<-ggplot(comps,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()
plotty3
comps$category<-NA
comps$category[which(comps$class=="physiological-USFS")] <- "physiological"
comps$category[which(comps$class=="physiological-MTSV")] <- "physiological"
comps$category[which(comps$class=="functional-USFS")] <- "functional"
comps$category[which(comps$class=="functional-MTSV")] <- "functional"
comps$category[which(comps$class=="intermediate-MTSV")] <- "intermediate"
comps$category[which(comps$class=="intermediate-USFS")] <- "intermediate"
comps$data<-NA
comps$data[which(comps$class=="physiological-USFS")] <- "USFS"
comps$data[which(comps$class=="physiological-MTSV")] <- "MTSV"
comps$data[which(comps$class=="functional-USFS")] <- "USFS"
comps$data[which(comps$class=="functional-MTSV")] <- "MTSV"
comps$data[which(comps$class=="intermediate-MTSV")] <- "MTSV"
comps$data[which(comps$class=="intermediate-USFS")] <- "USFS"
plotty3<-ggplot(comps,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()
plotty3
save.image(file="hystmodels.RData")
###and plot
pd=position_dodgev(height=0.6)
plotty3<-ggplot(comps,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()
plotty3
save.image(file="hystmodels.RData")
View(comps)
orderlist = c("pol_cent", "precip_cent", "flo_cent","pol_cent:flo_cent", "pol_cent:flo_cent","pol_cent:precip_cent")
comps<- transform(comps, trait = factor(trait, levels = orderlist))
plotty3<-ggplot(comps,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()
plotty3
comps<- transform(comps, trait = factor(trait, levels = orderlist))
orderlist = c("pol_cent", "precip_cent", "flo_cent","pol_cent:flo_cent", "pol_cent:flo_cent","pol_cent:precip_cent")
comps<- transform(comps, trait = factor(trait, levels = orderlist))
comps<- transform(comps, trait = (trait, levels = orderlist))
comps<- transform(comps, trait = ( levels = orderlist))
plotty3<-ggplot(comps,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()
plotty3
comps<- transform(comps, trait = (trait, levels = orderlist))
comps<- transform(comps, trait = (factor(trait), levels = orderlist))
plotty3<-ggplot(comps,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()
plotty3
comps<-rbind(bootdrought,bootdrought.USFS)
comps$category<-NA
comps$category[which(comps$class=="physiological-USFS")] <- "physiological"
comps$category[which(comps$class=="physiological-MTSV")] <- "physiological"
comps$category[which(comps$class=="functional-USFS")] <- "functional"
comps$category[which(comps$class=="functional-MTSV")] <- "functional"
comps$category[which(comps$class=="intermediate-MTSV")] <- "intermediate"
comps$category[which(comps$class=="intermediate-USFS")] <- "intermediate"
comps$data<-NA
comps$data[which(comps$class=="physiological-USFS")] <- "USFS"
comps$data[which(comps$class=="physiological-MTSV")] <- "MTSV"
comps$data[which(comps$class=="functional-USFS")] <- "USFS"
comps$data[which(comps$class=="functional-MTSV")] <- "MTSV"
comps$data[which(comps$class=="intermediate-MTSV")] <- "MTSV"
comps$data[which(comps$class=="intermediate-USFS")] <- "USFS"
plotty3<-ggplot(comps,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()
plotty3
save.image(file="hystmodels.RData")
