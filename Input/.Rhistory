df.dat.hf.match$temp_night<-ifelse(df.dat.hf.match$warm==20,10,5)
colnames(db.dat.match)[colnames(db.dat.match)=="flo_day" ] <- "fday"
colnames(db.dat.match)[colnames(db.dat.match)=="leaf_day" ] <- "lday"
colnames(db.dat.match)[colnames(db.dat.match)=="Lbb_day" ] <- "bday"
colnames(db.dat.match)[colnames(db.dat.match)=="temp_day" ] <- "warm"
colnames(db.dat.match)[colnames(db.dat.match)=="photoperiod" ] <- "photo"
### make db's dat a relative matching chill period
db.dat.match<-filter(db.dat.match,chilldays=28)
### make db's dat a relative matching chill period
db.dat.match<-filter(db.dat.match,chilldays==28)
View(df.dat.HF)
df.dat.hf.match$chilldays<-33
#ifelse(df.dat.hf.match$chill=="chill1",30,45) ignore this
df.dat.hf.match$temp_night<-ifelse(df.dat.hf.match$warm==20,10,5)
db.dat.match<-dplyr::select(db.dat.match,GEN.SPA,flo_day,Lbb_day,leaf_day,treatcode,photoperiod,temp_day,temp_night, chilldays,chill,study)
###compare_periodicity begun by Dan B. on Feb 7 2019
#The goal of this file is to compare the effect of covarying photoperiodicity and thermoperiodcity by comparing dany flynn to Dan b's budburst experients
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
library(dplyr)
library(brms)
setwd("~/Documents/git/proterant/FLOBUDS")
db.dat<-read.csv("input/xfirst.event.dat.csv")
df.dat<-read.csv("input/Budburst By Day.csv")
db.dat$photoperiod<-ifelse(db.dat$Light=="L",12,8)
db.dat$temp_day<-ifelse(db.dat$Force=="W",24,18)
db.dat$temp_night<-ifelse(db.dat$Force=="W",18,12)
db.dat$chilldays<-ifelse(db.dat$Chill==0,28,56)
### Dan Flynn Temps  20/10 (15) and 15/5  (10)
##Dan B's Temps: 24/18 (21) and 18/12 (15)
##Dan B and Dan F photoperiods 12hours and 8 hours. Dan F covaried theromo anf photoperiodicity, Dan B did not.
###Chilling. Dan Flyyn's "Chill 2" was 4 degrees according to paper 33 days at 4c
##Dan Flynn's chilling periods were 0, 30d and 45d, Dan B's were 28d, and 56d. Acutally I think chill 2 was 4 degrees at
#ubset DF's data to be similar to DB's
df.dat<-filter(df.dat,chill=="chill2")
db.dat$Chill[db.dat$Chill==0]<-"chill1"
db.dat$Chill[db.dat$Chill==1]<-"chill2"
### try with HF only
df.dat.HF<-filter(df.dat,site=="HF")
unique(db.dat$GEN.SPA)
unique(df.dat.HF$sp)
n <- 4
df.dat.HF$GEN.SPA<-paste(substr(df.dat.HF$sp, 1, n-1), ".", substr(df.dat.HF$sp, n, nchar(df.dat.HF$sp)), sep = "")
###use only overlapping species
matching_sps<-intersect(unique(df.dat.HF$GEN.SPA),unique(db.dat$GEN.SPA)) ### overlapping speices
db.dat.match<-filter(db.dat,GEN.SPA %in% matching_sps)
df.dat.hf.match<-filter(df.dat.HF,GEN.SPA %in% matching_sps)
db.dat.match$study<-"DB"
df.dat.hf.match$study<-"DF"
db.dat.match<-dplyr::select(db.dat.match,GEN.SPA,flo_day,Lbb_day,leaf_day,treatcode,photoperiod,temp_day,temp_night, chilldays,chill,study)
df.dat.hf.match<-dplyr::select(df.dat.hf.match,GEN.SPA,fday,bday,lday,treatcode,warm,photo,chill,study)
df.dat.hf.match$chilldays<-33
#ifelse(df.dat.hf.match$chill=="chill1",30,45) ignore this
df.dat.hf.match$temp_night<-ifelse(df.dat.hf.match$warm==20,10,5)
colnames(db.dat.match)[colnames(db.dat.match)=="flo_day" ] <- "fday"
colnames(db.dat.match)[colnames(db.dat.match)=="leaf_day" ] <- "lday"
colnames(db.dat.match)[colnames(db.dat.match)=="Lbb_day" ] <- "bday"
colnames(db.dat.match)[colnames(db.dat.match)=="temp_day" ] <- "warm"
colnames(db.dat.match)[colnames(db.dat.match)=="photoperiod" ] <- "photo"
### make db's dat a relative matching chill period
db.dat.match<-filter(db.dat.match,chilldays==28)
both.dat<-rbind(df.dat.hf.match,db.dat.match)
###compare_periodicity begun by Dan B. on Feb 7 2019
#The goal of this file is to compare the effect of covarying photoperiodicity and thermoperiodcity by comparing dany flynn to Dan b's budburst experients
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
library(dplyr)
library(brms)
setwd("~/Documents/git/proterant/FLOBUDS")
db.dat<-read.csv("input/xfirst.event.dat.csv")
df.dat<-read.csv("input/Budburst By Day.csv")
db.dat$photoperiod<-ifelse(db.dat$Light=="L",12,8)
db.dat$temp_day<-ifelse(db.dat$Force=="W",24,18)
db.dat$temp_night<-ifelse(db.dat$Force=="W",18,12)
db.dat$chilldays<-ifelse(db.dat$Chill==0,28,56)
### Dan Flynn Temps  20/10 (15) and 15/5  (10)
##Dan B's Temps: 24/18 (21) and 18/12 (15)
##Dan B and Dan F photoperiods 12hours and 8 hours. Dan F covaried theromo anf photoperiodicity, Dan B did not.
###Chilling. Dan Flyyn's "Chill 2" was 4 degrees according to paper 33 days at 4c
##Dan Flynn's chilling periods were 0, 30d and 45d, Dan B's were 28d, and 56d. Acutally I think chill 2 was 4 degrees at
#ubset DF's data to be similar to DB's
df.dat<-filter(df.dat,chill=="chill2")
db.dat$Chill[db.dat$Chill==0]<-"chill1"
db.dat$Chill[db.dat$Chill==1]<-"chill2"
### try with HF only
df.dat.HF<-filter(df.dat,site=="HF")
unique(db.dat$GEN.SPA)
unique(df.dat.HF$sp)
n <- 4
df.dat.HF$GEN.SPA<-paste(substr(df.dat.HF$sp, 1, n-1), ".", substr(df.dat.HF$sp, n, nchar(df.dat.HF$sp)), sep = "")
###use only overlapping species
matching_sps<-intersect(unique(df.dat.HF$GEN.SPA),unique(db.dat$GEN.SPA)) ### overlapping speices
db.dat.match<-filter(db.dat,GEN.SPA %in% matching_sps)
df.dat.hf.match<-filter(df.dat.HF,GEN.SPA %in% matching_sps)
db.dat.match$study<-"DB"
df.dat.hf.match$study<-"DF"
db.dat.match<-dplyr::select(db.dat.match,GEN.SPA,flo_day,Lbb_day,leaf_day,treatcode,photoperiod,temp_day,temp_night, chilldays,chill,study)
db.dat$Chill[db.dat$Chill==0]<-"chill1"
db.dat$Chill[db.dat$Chill==1]<-"chill2"
###compare_periodicity begun by Dan B. on Feb 7 2019
#The goal of this file is to compare the effect of covarying photoperiodicity and thermoperiodcity by comparing dany flynn to Dan b's budburst experients
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
library(dplyr)
library(brms)
setwd("~/Documents/git/proterant/FLOBUDS")
db.dat<-read.csv("input/xfirst.event.dat.csv")
df.dat<-read.csv("input/Budburst By Day.csv")
db.dat$photoperiod<-ifelse(db.dat$Light=="L",12,8)
db.dat$temp_day<-ifelse(db.dat$Force=="W",24,18)
db.dat$temp_night<-ifelse(db.dat$Force=="W",18,12)
db.dat$chilldays<-ifelse(db.dat$Chill==0,28,56)
### Dan Flynn Temps  20/10 (15) and 15/5  (10)
##Dan B's Temps: 24/18 (21) and 18/12 (15)
##Dan B and Dan F photoperiods 12hours and 8 hours. Dan F covaried theromo anf photoperiodicity, Dan B did not.
###Chilling. Dan Flyyn's "Chill 2" was 4 degrees according to paper 33 days at 4c
##Dan Flynn's chilling periods were 0, 30d and 45d, Dan B's were 28d, and 56d. Acutally I think chill 2 was 4 degrees at
#ubset DF's data to be similar to DB's
df.dat<-filter(df.dat,chill=="chill2")
db.dat$chill[db.dat$Chill==0]<-"chill1"
db.dat$chill[db.dat$Chill==1]<-"chill2"
### try with HF only
df.dat.HF<-filter(df.dat,site=="HF")
unique(db.dat$GEN.SPA)
unique(df.dat.HF$sp)
n <- 4
df.dat.HF$GEN.SPA<-paste(substr(df.dat.HF$sp, 1, n-1), ".", substr(df.dat.HF$sp, n, nchar(df.dat.HF$sp)), sep = "")
###use only overlapping species
matching_sps<-intersect(unique(df.dat.HF$GEN.SPA),unique(db.dat$GEN.SPA)) ### overlapping speices
db.dat.match<-filter(db.dat,GEN.SPA %in% matching_sps)
df.dat.hf.match<-filter(df.dat.HF,GEN.SPA %in% matching_sps)
db.dat.match$study<-"DB"
df.dat.hf.match$study<-"DF"
db.dat.match<-dplyr::select(db.dat.match,GEN.SPA,flo_day,Lbb_day,leaf_day,treatcode,photoperiod,temp_day,temp_night, chilldays,chill,study)
df.dat.hf.match<-dplyr::select(df.dat.hf.match,GEN.SPA,fday,bday,lday,treatcode,warm,photo,chill,study)
df.dat.hf.match$chilldays<-33
#ifelse(df.dat.hf.match$chill=="chill1",30,45) ignore this
df.dat.hf.match$temp_night<-ifelse(df.dat.hf.match$warm==20,10,5)
colnames(db.dat.match)[colnames(db.dat.match)=="flo_day" ] <- "fday"
colnames(db.dat.match)[colnames(db.dat.match)=="leaf_day" ] <- "lday"
colnames(db.dat.match)[colnames(db.dat.match)=="Lbb_day" ] <- "bday"
colnames(db.dat.match)[colnames(db.dat.match)=="temp_day" ] <- "warm"
colnames(db.dat.match)[colnames(db.dat.match)=="photoperiod" ] <- "photo"
### make db's dat a relative matching chill period
db.dat.match<-filter(db.dat.match,chilldays==28)
both.dat<-rbind(df.dat.hf.match,db.dat.match)
View(both.dat)
both.mod<-brm(bday~warm+photo+warm:study+photo:study+(1|GEN.SPA),data=both.dat)
summary(both.mod)
both.mod<-brm(bday~warm+photo+warm:study+photo:study+warm:photo:study+(1|GEN.SPA),data=both.dat)
summary(both.mod)
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
library(dplyr)
library(brms)
setwd("~/Documents/git/proterant/FLOBUDS")
db.dat<-read.csv("input/xfirst.event.dat.csv")
df.dat<-read.csv("input/hf314-01-budburst.csv")
View(df.dat)
df.dat<-filter(df.dat,site=="HF")
unique(db.dat$GEN.SPA)
unique(df.dat$sp)
df.dat<-read.csv("input/hf314-01-budburst.csv")
df.dat.HF<-filter(df.dat,site=="HF")
n <- 4
df.dat.HF$GEN.SPA<-paste(substr(df.dat.HF$sp, 1, n-1), ".", substr(df.dat.HF$sp, n, nchar(df.dat.HF$sp)), sep = "")
unique(df.dat.HF$GEN.SPA)
matching_sps<-intersect(unique(df.dat.HF$GEN.SPA),unique(db.dat$GEN.SPA))
matching_sps
df.dat.HF<-fitler(df.dat.HF,chill=="chill2")
df.dat.HF<-filter(df.dat.HF,chill=="chill2")
unique(db.dat$GEN.SPA)
unique(df.dat.HF$GEN.SPA)
matching_sps<-intersect(unique(df.dat.HF$GEN.SPA),unique(db.dat$GEN.SPA)) ##
matching_sps
df.dat.HF<-filter(df.dat.HF,chill!="chill1")
df.dat.HF<-filter(df.dat,site=="HF")
n <- 4
df.dat.HF$GEN.SPA<-paste(substr(df.dat.HF$sp, 1, n-1), ".", substr(df.dat.HF$sp, n, nchar(df.dat.HF$sp)), sep = "")
df.dat.HF<-filter(df.dat.HF,chill!="chill1")
unique(db.dat$GEN.SPA)
unique(df.dat.HF$GEN.SPA)
matching_sps<-intersect(unique(df.dat.HF$GEN.SPA),unique(db.dat$GEN.SPA)) ##
matching_sps
df.dat.HF<-filter(df.dat,site=="HF")
n <- 4
df.dat.HF$GEN.SPA<-paste(substr(df.dat.HF$sp, 1, n-1), ".", substr(df.dat.HF$sp, n, nchar(df.dat.HF$sp)), sep = "")
df.dat.HF<-filter(df.dat.HF,chill==chill2")
unique(db.dat$GEN.SPA)
matching_sps<-intersect(unique(df.dat.HF$GEN.SPA),unique(db.dat$GEN.SPA)) ##
df.dat.HF<-filter(df.dat,site=="HF")
db.dat<-read.csv("input/xfirst.event.dat.csv")
df.dat<-read.csv("input/hf314-01-budburst.csv")
df.dat.HF<-filter(df.dat,site=="HF")
n <- 4
df.dat.HF$GEN.SPA<-paste(substr(df.dat.HF$sp, 1, n-1), ".", substr(df.dat.HF$sp, n, nchar(df.dat.HF$sp)), sep = "")
df.dat.HF<-filter(df.dat.HF,chill=="chill2")
unique(db.dat$GEN.SPA)
unique(df.dat.HF$GEN.SPA)
matching_sps<-intersect(unique(df.dat.HF$GEN.SPA),unique(db.dat$GEN.SPA)) ##
matching_sps<
db.dat$photoperiod<-ifelse(db.dat$Light=="L",12,8)
matching_sps
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant/input")
###Anaysis 1: Is hysteranthy changing over time?
aln<-read.csv("alnus_delta_hyst.csv",header=TRUE)
frax<-read.csv("fraxinus_delta_hyst.csv",header=TRUE)
aes<-read.csv("aes_delta_hyst.csv",header=TRUE)
###analysis 1: Is hysteranthy changing with time? featureing PEP725 data
###making the hinge
alnUSW <- pepnumber(aln, "s_id")
###function for ordering pepsite
pepnumber <- function(dat, sitecolname){
df <- data.frame(s_id=unique(as.numeric(unlist(dat[sitecolname]))),
peporder=c(1:length(unique(unlist(dat[sitecolname])))))
datmerge <- merge(dat, df, by=sitecolname)
return(datmerge)
}
###making the hinge
alnUSW <- pepnumber(aln, "s_id")
aln<-alnUSW
aln$YEAR.hin <- aln$year
aln$YEAR.hin[which(aln$YEAR.hin<1980)] <- 1980
aln$YEAR.hin <- aln$YEAR.hin-1980
fraxUSW <- pepnumber(frax, "s_id")
frax<-fraxUSW
frax$YEAR.hin <- frax$year
frax$YEAR.hin[which(frax$YEAR.hin<1980)] <- 1980
frax$YEAR.hin <- frax$YEAR.hin-1980
aesUSW <- pepnumber(aes, "s_id")
aes<-aesUSW
aes$YEAR.hin <- aes$year
aes$YEAR.hin[which(aes$YEAR.hin<1980)] <- 1980
aes$YEAR.hin <- aes$YEAR.hin-1980
fagUSW <- pepnumber(fag, "s_id")
fag<-fagUSW
fag$YEAR.hin <- fag$year
fag$YEAR.hin[which(fag$YEAR.hin<1980)] <- 1980
fag$YEAR.hin <- fag$YEAR.hin-1980
##### running the models
fit.aln.brms<-brm(offset~YEAR.hin+(YEAR.hin|peporder),data=aln)
aln.dat<-as.data.frame(coef(fit.aln.brms))
View(aln.dat)
aln.dat<-rownames_to_column(aln.dat, var = "peporder")
newdat<-merge(dat,aln)
newdat<-merge(aln.dat,aln)
View(newdat)
aln.dat<-rownames_to_column(aln.dat, var = "peporder")
aln.dat<-merge(aln.dat,aln)
colnames(aln.dat)
aln.dat<-as.data.frame(coef(fit.aln.brms))
aln.dat<-rownames_to_column(aln.dat, var = "peporder")
aln.dat<-merge(aln.dat,aln)
colnames(new.dat)
names(newdat)[1]<-"peporder"
names(newdat)[4]<-"Intercept.2.5"
aln.dat<-rownames_to_column(aln.dat, var = "peporder")
aln.dat<-as.data.frame(coef(fit.aln.brms))
View(aln.dat)
aln.dat<-rownames_to_column(aln.dat, var = "peporder")
new.dat<-merge(aln.dat,aln)
colnames(new.dat)
names(newdat)[1]<-"peporder"
names(newdat)[4]<-"Intercept.2.5"
names(newdat)[5]<-"Intercept.97.5"
names(newdat)[2]<-"Intercept"
names(newdat)[6]<-"slope"
names(newdat)[7]<-"slope.2.5"
names(newdat)[8]<-"slope.97.5"
newdata<-dplyr::select(newdat,peporder,Intercept,Intercept.2.5,Intercept.97.5,slope,slope.2.5,slope.97.5,s_id,year,offset,YEAR.hin,lat,lon)
newdata$hinge<-ifelse(newdata$YEAR.hin>0,1,0)
colnames(newdata)
alphaX<-mean(newdata$Intercept)
alphaXlow<-mean(newdata$Intercept.2.5)
alphaXhigh<-mean(newdata$Intercept.97.5)
betaX<-mean(newdata$slope)
betaXlow<-mean(newdata$slope.2.5)
betaXhigh<-mean(newdata$slope.97.5)
allbetas<-newdata$slope
allalphas<-newdata$Intercept
####Fraxinus model
fit.frax.brms<-brm(offset~YEAR.hin+(YEAR.hin|peporder),data=frax)
dat1<-as.data.frame(coef(fit.frax.brms))
dat1<-rownames_to_column(dat1, var = "peporder")
newdat1<-merge(dat1,frax)
colnames(newdat1)
names(newdat1)[1]<-"peporder"
names(newdat1)[4]<-"Intercept.2.5"
names(newdat1)[5]<-"Intercept.97.5"
names(newdat1)[2]<-"Intercept"
names(newdat1)[6]<-"slope"
names(newdat1)[7]<-"slope.2.5"
names(newdat1)[8]<-"slope.97.5"
newdata1<-dplyr::select(newdat1,peporder,Intercept,Intercept.2.5,Intercept.97.5,slope,slope.2.5,slope.97.5,s_id,year,offset,YEAR.hin,lat,lon)
newdata1$hinge<-ifelse(newdata1$YEAR.hin>0,1,0)
alpha1<-mean(newdata1$Intercept)
alphalow<-mean(newdata1$Intercept.2.5)
alphahigh<-mean(newdata1$Intercept.97.5)
beta1<-mean(newdata1$slope)
###Aesculus model
fit.aes.brms<-brm(offset~YEAR.hin+(YEAR.hin|peporder),data=aes)
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant/input")
###Data#####################################################################
#data1
aln<-read.csv("alnus_delta_hyst.csv",header=TRUE)
frax<-read.csv("fraxinus_delta_hyst.csv",header=TRUE)
aes<-read.csv("aes_delta_hyst.csv",header=TRUE)
###function for ordering pepsite
pepnumber <- function(dat, sitecolname){
df <- data.frame(s_id=unique(as.numeric(unlist(dat[sitecolname]))),
peporder=c(1:length(unique(unlist(dat[sitecolname])))))
datmerge <- merge(dat, df, by=sitecolname)
return(datmerge)
}
###making the hinge
aln <- pepnumber(aln, "s_id")
aln$YEAR.hin <- aln$year
aln$YEAR.hin[which(aln$YEAR.hin<1980)] <- 1980
aln$YEAR.hin <- aln$YEAR.hin-1980
frax <- pepnumber(frax, "s_id")
frax$YEAR.hin <- frax$year
frax$YEAR.hin[which(frax$YEAR.hin<1980)] <- 1980
frax$YEAR.hin <- frax$YEAR.hin-1980
aes<- pepnumber(aes, "s_id")
aes$YEAR.hin <- aes$year
aes$YEAR.hin[which(aes$YEAR.hin<1980)] <- 1980
aes$YEAR.hin <- aes$YEAR.hin-1980
##### Alnus model
fit.aln.brms<-brm(offset~YEAR.hin+(YEAR.hin|peporder),data=aln)
frax.dat<-as.data.frame(coef(fit.frax.brms))
aln.dat<-as.data.frame(coef(fit.aln.brms))
aln.dat<-rownames_to_column(aln.dat, var = "peporder")
aln.dat<-merge(aln.dat,aln)
colnames(aln.dat)
names(aln.dat)[1]<-"peporder"
names(aln.dat)[4]<-"Intercept.2.5"
names(aln.dat)[5]<-"Intercept.97.5"
names(aln.dat)[2]<-"Intercept"
names(aln.dat)[6]<-"slope"
names(aln.dat)[7]<-"slope.2.5"
names(aln.dat)[8]<-"slope.97.5"
aln.dat<-dplyr::select(aln.dat,peporder,Intercept,Intercept.2.5,Intercept.97.5,slope,slope.2.5,slope.97.5,s_id,year,offset,YEAR.hin,lat,lon)
aln.dat$hinge<-ifelse(aln.dat$YEAR.hin>0,1,0)
alphaALN<-mean(aln.dat$Intercept)
alphaALNlow<-mean(aln.dat$Intercept.2.5)
alphaALNhigh<-mean(aln.dat$Intercept.97.5)
betaALN<-mean(aln.dat$slope)
save.image("paper_full_analysis")
####Fraxinus model
fit.frax.brms<-brm(offset~YEAR.hin+(YEAR.hin|peporder),data=frax)
frax.dat<-as.data.frame(coef(fit.frax.brms))
frax.dat<-rownames_to_column(frax.dat, var = "peporder")
frax.dat<-merge(frax.dat,frax)
names(frax.dat)[1]<-"peporder"
names(frax.dat)[4]<-"Intercept.2.5"
names(frax.dat)[5]<-"Intercept.97.5"
names(frax.dat)[2]<-"Intercept"
names(frax.dat)[6]<-"slope"
names(frax.dat)[7]<-"slope.2.5"
names(frax.dat)[8]<-"slope.97.5"
frax.dat<-dplyr::select(frax.dat,peporder,Intercept,Intercept.2.5,Intercept.97.5,slope,slope.2.5,slope.97.5,s_id,year,offset,YEAR.hin,lat,lon)
frax.dat$hinge<-ifelse(frax.dat$YEAR.hin>0,1,0)
alphaFRAX<-mean(frax.dat$Intercept)
alphaFRAXlow<-mean(frax.dat$Intercept.2.5)
alphaFRAXhigh<-mean(frax.dat$Intercept.97.5)
betaFRAX<-mean(frax.dat$slope)
save.image("paper_full_analysis")
###Aesculus model
fit.aes.brms<-brm(offset~YEAR.hin+(YEAR.hin|peporder),data=aes)
aes.dat<-as.data.frame(coef(fit.aes.brms))
aes.dat<-rownames_to_column(aes.dat, var = "peporder")
aes.dat<-merge(aes.dat,aes)
names(aes.dat)[1]<-"peporder"
names(aes.dat)[4]<-"Intercept.2.5"
names(aes.dat)[5]<-"Intercept.97.5"
names(aes.dat)[2]<-"Intercept"
names(aes.dat)[6]<-"slope"
names(aes.dat)[7]<-"slope.2.5"
names(aes.dat)[8]<-"slope.97.5"
aes.dat<-dplyr::select(aes.dat,peporder,Intercept,Intercept.2.5,Intercept.97.5,slope,slope.2.5,slope.97.5,s_id,year,offset,YEAR.hin,lat,lon)
aes.dat$hinge<-ifelse(aes.dat$YEAR.hin>0,1,0)
alphaAES<-mean(aes.dat$Intercept)
betaAES<-mean(aes.dat$slope)
alphaAESlow<-mean(aes.dat$Intercept.2.5)
alphaAEShigh<-mean(aes.dat$Intercept.97.5)
plot(c(1960,2015), c(-30,45), type = "n", xlab = "year", ylab = "FLS offset", bty='l')
#rect(xleft=1960, ybottom=-30, xright=1980, ytop=50,col="ivory1" )
#rect(xleft=1980, ybottom=-30, xright=2015, ytop=50,col="ivory2")
segments(x0=1980,y0=alphaALN,x1=2015,y1=alpha+betaALN*35,col="azure3",lty="dotted" )
#rect(xleft=1960, ybottom=-30, xright=1980, ytop=50,col="ivory1" )
#rect(xleft=1980, ybottom=-30, xright=2015, ytop=50,col="ivory2")
segments(x0=1980,y0=alphaALN,x1=2015,y1=alpha+(betaALN*35),col="azure3",lty="dotted" )
#rect(xleft=1960, ybottom=-30, xright=1980, ytop=50,col="ivory1" )
#rect(xleft=1980, ybottom=-30, xright=2015, ytop=50,col="ivory2")
segments(x0=1980,y0=alphaALN,x1=2015,y1=alpha+betaALN*35,col="azure3",lty="dotted" )
#rect(xleft=1960, ybottom=-30, xright=1980, ytop=50,col="ivory1" )
#rect(xleft=1980, ybottom=-30, xright=2015, ytop=50,col="ivory2")
segments(x0=1980,y0=alphaALN,x1=2015,y1=alphaALN+betaALN*35,col="azure3",lty="dotted" )
segments(x0=1960,y0=alphaALN,x1=1980,y1=alphaALN,col="azure3",lty="dotted")
allbetas<-aln.dat$slope
allalphas<-aln.dat$Intercept
allbetas1<-frax.dat$slope
allalphas1<-frax.dat$Intercept
allbetas2<-aes.dat$slope
allalphas2<-aes.dat$Intercept
plot(c(1960,2015), c(-30,45), type = "n", xlab = "year", ylab = "FLS offset", bty='l')
#rect(xleft=1960, ybottom=-30, xright=1980, ytop=50,col="ivory1" )
#rect(xleft=1980, ybottom=-30, xright=2015, ytop=50,col="ivory2")
segments(x0=1980,y0=allalphas,x1=2015,y1=allalphas+allbetas*35,col="azure3",lty="dotted" )
segments(x0=1960,y0=allalphas,x1=1980,y1=allalphas,col="azure3",lty="dotted")
segments(x0=1980,y0=allalphas1,x1=2015,y1=allalphas1+allbetas1*35,col="azure3")
segments(x0=1960,y0=allalphas1,x1=1980,y1=allalphas1,col="azure3")
segments(x0=1980,y0=allalphas2,x1=2015,y1=allalphas2+allbetas2*35,col="azure3",lty="dashed")
segments(x0=1960,y0=allalphas2,x1=1980,y1=allalphas2,col="azure3",lty="dashed")
segments(x0=1960,y0=alphaALN, x1=1980,y1=alphaALN,col="darkgreen",lwd=3)
segments(x0=1980,y0=alphaALN, x1=2015,y1=alphaALN+betaALN*35,col="darkgreen",lwd=3)
segments(x0=1960,y0=alphaALNlow, x1=2015,y1=alphaALNlow, lty=2, col="darkgreen",lwd=2)
segments(x0=1960,y0=alphaALNhigh, x1=2015,y1=alphaALNhigh, lty=2, col="darkgreen",lwd=2)
segments(x0=1960,y0=alphaFRAX, x1=1980,y1=alphaFRAX,col="red",lwd=3)
segments(x0=1960,y0=alphaFRAXlow, x1=2015,y1=alphaFRAXlow, lty=2,col="red",lwd=2)
segments(x0=1980,y0=alphaFRAX, x1=2015,y1=alphaFRAX+betaFRAX*35,col="red",lwd=3)
segments(x0=1960,y0=alphaFRAXhigh, x1=2015,y1=alphaFRAXhigh, lty=2,col="red",lwd=2)
segments(x0=1960,y0=alphaAES, x1=1980,y1=alphaAES,col="blue",lwd=3)
segments(x0=1980,y0=alphaAES, x1=2015,y1=alphaAES+betaAES*35,col="blue",lwd=3)
segments(x0=1960,y0=alphaAESlow, x1=2015,y1=alpha2low, lty=2,col="blue",lwd=2)
segments(x0=1960,y0=alphaAESlow, x1=2015,y1=alphaAESlow, lty=2,col="blue",lwd=2)
segments(x0=1960,y0=alphaAEShigh, x1=2015,y1=alphaAEShigh, lty=2,col="blue",lwd=2)
legend(2002,3, legend=c("A. glutinosa", "F. excelsior","A. hippocastanum"),col=c("darkgreen", "red","blue"), lwd=2, cex=0.6)
legend(1990,3, legend=c("A. glutinosa", "F. excelsior","A. hippocastanum"),col=c("darkgreen", "red","blue"), lwd=2, cex=0.6)
legend(1900,3, legend=c("A. glutinosa", "F. excelsior","A. hippocastanum"),col=c("darkgreen", "red","blue"), lwd=2, cex=0.6)
plot(c(1960,2015), c(-30,45), type = "n", xlab = "year", ylab = "FLS offset", bty='l')
#rect(xleft=1960, ybottom=-30, xright=1980, ytop=50,col="ivory1" )
#rect(xleft=1980, ybottom=-30, xright=2015, ytop=50,col="ivory2")
segments(x0=1980,y0=allalphas,x1=2015,y1=allalphas+allbetas*35,col="azure3",lty="dotted" )
segments(x0=1960,y0=allalphas,x1=1980,y1=allalphas,col="azure3",lty="dotted")
segments(x0=1980,y0=allalphas1,x1=2015,y1=allalphas1+allbetas1*35,col="azure3")
segments(x0=1960,y0=allalphas1,x1=1980,y1=allalphas1,col="azure3")
segments(x0=1980,y0=allalphas2,x1=2015,y1=allalphas2+allbetas2*35,col="azure3",lty="dashed")
segments(x0=1960,y0=allalphas2,x1=1980,y1=allalphas2,col="azure3",lty="dashed")
segments(x0=1960,y0=alphaALN, x1=1980,y1=alphaALN,col="darkgreen",lwd=3)
segments(x0=1980,y0=alphaALN, x1=2015,y1=alphaALN+betaALN*35,col="darkgreen",lwd=3)
segments(x0=1960,y0=alphaALNlow, x1=2015,y1=alphaALNlow, lty=2, col="darkgreen",lwd=2)
segments(x0=1960,y0=alphaALNhigh, x1=2015,y1=alphaALNhigh, lty=2, col="darkgreen",lwd=2)
segments(x0=1960,y0=alphaFRAX, x1=1980,y1=alphaFRAX,col="red",lwd=3)
segments(x0=1980,y0=alphaFRAX, x1=2015,y1=alphaFRAX+betaFRAX*35,col="red",lwd=3)
segments(x0=1960,y0=alphaFRAXlow, x1=2015,y1=alphaFRAXlow, lty=2,col="red",lwd=2)
segments(x0=1960,y0=alphaFRAXhigh, x1=2015,y1=alphaFRAXhigh, lty=2,col="red",lwd=2)
segments(x0=1960,y0=alphaAES, x1=1980,y1=alphaAES,col="blue",lwd=3)
segments(x0=1980,y0=alphaAES, x1=2015,y1=alphaAES+betaAES*35,col="blue",lwd=3)
segments(x0=1960,y0=alphaAESlow, x1=2015,y1=alphaAESlow, lty=2,col="blue",lwd=2)
segments(x0=1960,y0=alphaAEShigh, x1=2015,y1=alphaAEShigh, lty=2,col="blue",lwd=2)
legend(1900,3, legend=c("A. glutinosa", "F. excelsior","A. hippocastanum"),col=c("darkgreen", "red","blue"), lwd=2, cex=0.6)
legend(1999,3, legend=c("A. glutinosa", "F. excelsior","A. hippocastanum"),col=c("darkgreen", "red","blue"), lwd=2, cex=0.6)
plot(c(1960,2015), c(-30,45), type = "n", xlab = "year", ylab = "FLS offset", bty='l')
#rect(xleft=1960, ybottom=-30, xright=1980, ytop=50,col="ivory1" )
#rect(xleft=1980, ybottom=-30, xright=2015, ytop=50,col="ivory2")
segments(x0=1980,y0=allalphas,x1=2015,y1=allalphas+allbetas*35,col="azure3",lty="dotted" )
segments(x0=1960,y0=allalphas,x1=1980,y1=allalphas,col="azure3",lty="dotted")
segments(x0=1980,y0=allalphas1,x1=2015,y1=allalphas1+allbetas1*35,col="azure3")
segments(x0=1960,y0=allalphas1,x1=1980,y1=allalphas1,col="azure3")
segments(x0=1980,y0=allalphas2,x1=2015,y1=allalphas2+allbetas2*35,col="azure3",lty="dashed")
segments(x0=1960,y0=allalphas2,x1=1980,y1=allalphas2,col="azure3",lty="dashed")
segments(x0=1960,y0=alphaALN, x1=1980,y1=alphaALN,col="darkgreen",lwd=3)
segments(x0=1980,y0=alphaALN, x1=2015,y1=alphaALN+betaALN*35,col="darkgreen",lwd=3)
segments(x0=1960,y0=alphaALNlow, x1=2015,y1=alphaALNlow, lty=2, col="darkgreen",lwd=2)
segments(x0=1960,y0=alphaALNhigh, x1=2015,y1=alphaALNhigh, lty=2, col="darkgreen",lwd=2)
segments(x0=1960,y0=alphaFRAX, x1=1980,y1=alphaFRAX,col="red",lwd=3)
segments(x0=1980,y0=alphaFRAX, x1=2015,y1=alphaFRAX+betaFRAX*35,col="red",lwd=3)
segments(x0=1960,y0=alphaFRAXlow, x1=2015,y1=alphaFRAXlow, lty=2,col="red",lwd=2)
segments(x0=1960,y0=alphaFRAXhigh, x1=2015,y1=alphaFRAXhigh, lty=2,col="red",lwd=2)
segments(x0=1960,y0=alphaAES, x1=1980,y1=alphaAES,col="blue",lwd=3)
segments(x0=1980,y0=alphaAES, x1=2015,y1=alphaAES+betaAES*35,col="blue",lwd=3)
segments(x0=1960,y0=alphaAESlow, x1=2015,y1=alphaAESlow, lty=2,col="blue",lwd=2)
segments(x0=1960,y0=alphaAEShigh, x1=2015,y1=alphaAEShigh, lty=2,col="blue",lwd=2)
legend(2010,3, legend=c("A. glutinosa", "F. excelsior","A. hippocastanum"),col=c("darkgreen", "red","blue"), lwd=2, cex=0.6)
legend(2006,3, legend=c("A. glutinosa", "F. excelsior","A. hippocastanum"),col=c("darkgreen", "red","blue"), lwd=2, cex=0.6)
jpeg("..//figure/FLS_climate_change.jpeg")
plot(c(1960,2015), c(-30,45), type = "n", xlab = "year", ylab = "FLS offset", bty='l')
#rect(xleft=1960, ybottom=-30, xright=1980, ytop=50,col="ivory1" )
#rect(xleft=1980, ybottom=-30, xright=2015, ytop=50,col="ivory2")
segments(x0=1980,y0=allalphas,x1=2015,y1=allalphas+allbetas*35,col="azure3",lty="dotted" )
segments(x0=1960,y0=allalphas,x1=1980,y1=allalphas,col="azure3",lty="dotted")
segments(x0=1980,y0=allalphas1,x1=2015,y1=allalphas1+allbetas1*35,col="azure3")
segments(x0=1960,y0=allalphas1,x1=1980,y1=allalphas1,col="azure3")
segments(x0=1980,y0=allalphas2,x1=2015,y1=allalphas2+allbetas2*35,col="azure3",lty="dashed")
segments(x0=1960,y0=allalphas2,x1=1980,y1=allalphas2,col="azure3",lty="dashed")
segments(x0=1960,y0=alphaALN, x1=1980,y1=alphaALN,col="darkgreen",lwd=3)
segments(x0=1980,y0=alphaALN, x1=2015,y1=alphaALN+betaALN*35,col="darkgreen",lwd=3)
segments(x0=1960,y0=alphaALNlow, x1=2015,y1=alphaALNlow, lty=2, col="darkgreen",lwd=2)
segments(x0=1960,y0=alphaALNhigh, x1=2015,y1=alphaALNhigh, lty=2, col="darkgreen",lwd=2)
segments(x0=1960,y0=alphaFRAX, x1=1980,y1=alphaFRAX,col="red",lwd=3)
segments(x0=1980,y0=alphaFRAX, x1=2015,y1=alphaFRAX+betaFRAX*35,col="red",lwd=3)
segments(x0=1960,y0=alphaFRAXlow, x1=2015,y1=alphaFRAXlow, lty=2,col="red",lwd=2)
segments(x0=1960,y0=alphaFRAXhigh, x1=2015,y1=alphaFRAXhigh, lty=2,col="red",lwd=2)
segments(x0=1960,y0=alphaAES, x1=1980,y1=alphaAES,col="blue",lwd=3)
segments(x0=1980,y0=alphaAES, x1=2015,y1=alphaAES+betaAES*35,col="blue",lwd=3)
segments(x0=1960,y0=alphaAESlow, x1=2015,y1=alphaAESlow, lty=2,col="blue",lwd=2)
segments(x0=1960,y0=alphaAEShigh, x1=2015,y1=alphaAEShigh, lty=2,col="blue",lwd=2)
legend(2006,3, legend=c("A. glutinosa", "F. excelsior","A. hippocastanum"),col=c("darkgreen", "red","blue"), lwd=2, cex=0.6)
dev.off()
save.image("paper_full_analysis")
save.image("paper_full_analysis.RData")
