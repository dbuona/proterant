aln2<-read.csv("alnus_delta_hyst.csv") ## # with 50 years
frax<-read.csv("fraxinus10_delta_hyst.csv",header=TRUE)## 10
frax2<-read.csv("fraxinus_delta_hyst.csv") ## at least 50
aes<-read.csv("aes10_delta_hyst.csv",header=TRUE) ##10 (Non hysteramthous)
aes2<-read.csv("aes_delta_hyst.csv",header=TRUE) ## 50 years
quer<-read.csv("Quercus10_delta_hyst.csv",header=TRUE) ##10
pru<-read.csv("Prunus10_delta_hyst.csv",header=TRUE)##10
cory<-read.csv("cory10_delta_hyst.csv",header=TRUE)  ##10
bet<-read.csv("betpen10_delta_hyst.csv",head=TRUE) #10
aln$taxa<-"Alnus glutinosa" ##assign species
frax$taxa<-"Fraxinus excelsior"
aes$taxa<-"Aesculus hippocastenum"
d<-rbind(aln,frax,cory,bet,quer) #make a datasheet of fraxinus and alnus
DI.aug<-raster("grids_germany_multi_annual_drought_index_1981-2010_08.asc")
DI.apr<-raster("grids_germany_multi_annual_drought_index_1981-2010_04.asc")
DI.sept<-raster("grids_germany_multi_annual_drought_index_1981-2010_09.asc")
moist.aug<-raster("grids_germany_multi_annual_soil_moist_1991-2010_08.asc") ##Gause Kruger 3 for August
moist.apr<-raster("grids_germany_multi_annual_soil_moist_1991-2010_04.asc")
coordinates(d)<- ~lon + lat ###PEP site coordinates
proj4string(d) <- CRS("+proj=longlat +datum=WGS84") ##establish the project
#   <- spTransform(d, CRS("+proj=tmerc +lat_0=47.2700 +lon_0=7.5000 +k=1 +x_0=3386564.9400+y_0=5237917.9109 +ellps=krass +units=m +no_defs")) ### this doesnt work
p <- spTransform(d, CRS("+proj=tmerc +lat_0=50.625 +lon_0=9.84375, +k=1 +x_0=3559832.734474 +y_0=5610860.187573 +ellps=krass +units=m +no_defs")) ###convert our coordinate to Gausse Kruger
gaas<-coordinates(p) ### make these values coordinates in structure
gaas.cord<-as.data.frame(gaas)
pep.cord<-as.data.frame(d)
colnames(gaas.cord)<-c("x","y")
df<-cbind(pep.cord,gaas.cord) ### aff the next
###decent projectiontry to extract
Soil<-extract(moist.aug, matrix(c(df$x,df$y), ncol = 2)) ### extract the soil moisture at the pep sites
df$SM<-Soil
drought.index<-extract(DI.aug, matrix(c(df$x,df$y), ncol = 2)) ### same but form drought index
df$drought_index<-drought.index
###
df$flo.cent<-df$flower-mean(df$flower,na.rm=TRUE)
df$soil.cent<-df$SM-mean(df$SM,na.rm=TRUE)
unique(df$taxa)
DI.mod<-lm(offset~SM*taxa,data=df)
summary(DI.mod) ### seems like alnus is the only
df.alnus<-filter(df,taxa=="Alnus glutinosa")
DI.mod.aln<-lm(offset~SM,data=df.alnus)
df.frax<-filter(df,taxa=="Fraxinus excelsior")
DI.mod.frax<-lm(offset~SM,data=df.frax)
summary(DI.mod.frax)
df.bet<-filter(df,taxa=="Betula pendula")
DI.mod.bet<-lm(offset~SM,data=df.bet)
summary(DI.mod.bet) ####becomse more leafing first
twopred.aln<-lm(offset~flo.cent*soil.cent,data=df.alnus)
summary(twopred.aln)
twopred.frax<-lm(offset~flo.cent*soil.cent,data=df.frax)
summary(twopred.frax)
twopred.bet<-lm(offset~flo.cent*soil.cent,data=df.bet)
summary(twopred.bet)
###### Other question, are propualtions even "significantly" different
aov.aln<-lm(offset~as.factor(s_id), data=aln2)
Anova(aov.aln,ype="III")
save.image("intervar.RData")
#######################################################################################
###PART I, Does Hysteranthy chance in a DROUGHT YEAR
###subset to the 4 drought year, 4 wet years
d.sub<-dplyr::filter(d,year %in% c(2003,2004,2005,2006,2007,2008,2009,2010))
dat<-rbind(aln,frax,cory,bet,quer)
d.sub<-dplyr::filter(dat,year %in% c(2003,2004,2005,2006,2007,2008,2009,2010))
d.sub$drought<-ifelse(d.sub$year %in% c(2003,2004,2005,2006),1,0) #1 are drought
annual<-lmer(offset~drought*taxa+(1|s_id),dat=d.sub)
summary(annual)
annual<-lmer(offset~drought+(1|s_id)++(1|taxa),,dat=d.sub)
annual<-lmer(offset~drought+(1|s_id)+(1|taxa),dat=d.sub)
summary(annual)
coef(annual)
annual<-lmer(offset~drought+(1|s_id)+(drought|taxa),dat=d.sub)
summary(annual)
coef(annual)
annual.flower<-lmer(flower~drought+(1|s_id)+(drought|taxa),dat=d.sub)
summary(annual.flower)
coef(annual.flower)
annual.leaf<-lmer(leaf~drought+(1|s_id)+(drought|taxa),dat=d.sub)
cof(annual.leaf)
coef(annual.leaf)
coef(annual.leaf$taxa)
coef(annual.flower)
coef(annual.leaf)
coef(annual.flower)
coef(annual.leaf)
save.image("intervar.RData")
ohen.aln<-lm(offset~flower+leaf,data=df.alnus)
phen.aln<-lm(offset~flower+leaf,data=df.alnus)
summary(phen.aln)
summary(DI.mod.frax)
summary(twopred.aln)
twopred.frax<-lm(offset~flo.cent*soil.cent,data=df.frax)
summary(twopred.frax)
df$leaf.cent<-df$leaf-mean(df$leaf,na.rm=TRUE)
leaf.aln<-lm(offset~leaf.cent*soil.cent,data=df.alnus)
df$leaf.cent<-df$leaf-mean(df$leaf,na.rm=TRUE)
df.alnus<-filter(df,taxa=="Alnus glutinosa")
df.frax<-filter(df,taxa=="Fraxinus excelsior")
df.bet<-filter(df,taxa=="Betula pendula")
twopred.aln<-lm(offset~flo.cent*soil.cent,data=df.alnus)
summary(twopred.aln)
leaf.aln<-lm(offset~leaf.cent*soil.cent,data=df.alnus)
summary(leaf.aln)
leaf.aln<-lm(offset~leaf.cent,data=df.alnus)
summary(leaf.aln)
flo.aln<-offset~flo.cent,data=df.alnus)
flo.aln<-lm(offset~flo.cent,data=df.alnus)
summary(flo.aln)
summary(leaf.aln)
soil.aln<-lm(offset~soil.cent,data=df.alnus)
summary(soil.aln)
summary(leaf.aln)
summary(soil.aln)
summary(flo.aln)
twopred.frax<-lm(offset~flo.cent*soil.cent,data=df.frax)
summary(twopred.frax)
twopred.bet<-lm(offset~flo.cent*soil.cent,data=df.bet)
summary(twopred.bet)
####c### This is the final analysis file for hysteranthy anaylsis on MTSV as of 3/28/18.
###major update on 11.27.18
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant/input")
library("ape")
library("phytools")
library("geiger")
library("gbm")
library("pez")
library(caper)
library(picante)
library("tidyverse")
library(boot)
library("phylolm")
library("ggplot2")
library(arm)
library("randomForest")
library(car)
library(ggstance)
library(broom)
#if you dont want to run the model:
load("hystmodels.RData")
load("continuous.mods.RData")
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant")
library("phytools")
library(broom)
library(dplyr)
library(tidyr)
library(boot)
library("ggplot2")
library(car)
library(lme4)
library(brms)
library(ggstance)
library(MCMCglmm)
source("Scripts/continuous_mod_prep.R")
load("continuous.mods.RData")
View(df)
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant/input")
library(tidyverse)
library(lme4)
library(car)
library(rgdal)
library(ggstance)
library(grid)
library(ggthemes)
library(brms)
library(lubridate)
library(broom)
library("ggmap")
library(sp)
library("raster")
library("remote")
library(reshape2)
#read in clean data of offset for each species
aln<-read.csv("alnus10_delta_hyst.csv",header=TRUE) ## alnus from stations with atleast 10 years of data
aln2<-read.csv("alnus_delta_hyst.csv") ## # with 50 years
frax<-read.csv("fraxinus10_delta_hyst.csv",header=TRUE)## 10
frax2<-read.csv("fraxinus_delta_hyst.csv") ## at least 50
aes<-read.csv("aes10_delta_hyst.csv",header=TRUE) ##10 (Non hysteramthous)
aes2<-read.csv("aes_delta_hyst.csv",header=TRUE) ## 50 years
quer<-read.csv("Quercus10_delta_hyst.csv",header=TRUE) ##10
pru<-read.csv("Prunus10_delta_hyst.csv",header=TRUE)##10
cory<-read.csv("cory10_delta_hyst.csv",header=TRUE)  ##10
bet<-read.csv("betpen10_delta_hyst.csv",head=TRUE) #10
aln$taxa<-"Alnus glutinosa" ##assign species
frax$taxa<-"Fraxinus excelsior"
aes$taxa<-"Aesculus hippocastenum"
d<-rbind(aln,frax,cory,bet,quer) #make a datasheet of fraxinus and alnus
####c### This is the final analysis file for hysteranthy anaylsis on MTSV as of 3/28/18.
###major update on 11.27.18
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant/input")
library("ape")
library("phytools")
library("geiger")
library("gbm")
library("pez")
library(caper)
library(picante)
library("tidyverse")
library(boot)
library("phylolm")
library("ggplot2")
library(arm)
library("randomForest")
library(car)
library(ggstance)
library(broom)
#if you dont want to run the model:
load("hystmodels.RData")
plotty4
plotty3
###does the plot look better with the two separet
comps.MTSV<-filter(comps,data=="MTSV")
pd=position_dodgev(height=0.4)
plotty3a<-ggplot(comps.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0.4,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))
plotty3a<-ggplot(comps.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0.4,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))
plotty3a<-ggplot(comps.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0.4,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))
plotty3a<-ggplot(comps.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0.4,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))
plotty3a
comps.USFS<-filter(comps,data=="USFS")
plotty3b<-ggplot(comps.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0.4,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))
plotty3b
grid.arrange(plotty3a,plotty3b)
plotty3a<-ggplot(comps.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0.4,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))+xlim(-8,8)
plotty3b<-ggplot(comps.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0.4,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))+xlim(-8,8)
plotty3a<-ggplot(comps.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0.4,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))+xlim(-8,8)
grid.arrange(plotty3a,plotty3b)
grid.arrange(plotty3a,plotty3b,nrow=1)
plotty3a<-ggplot(comps.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0.1,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))+xlim(-8,8)
comps.USFS<-filter(comps,data=="USFS")
plotty3b<-ggplot(comps.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0.1,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))+xlim(-8,8)
grid.arrange(plotty3a,plotty3b,nrow=1)
plotty3a<-ggplot(comps.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))+xlim(-8,8)
plotty3b<-ggplot(comps.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))+xlim(-8,8)
grid.arrange(plotty3a,plotty3b,nrow=1)
comps.noint.MTSV<-filter(comps.noint,data="MTSV")
comps.noint.MTSV<-filter(comps.noint,data=="MTSV")
plotty4a<-ggplot(comps.noint.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0.4,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))
plotty4a
plotty4a<-ggplot(comps.noint.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))
plotty4a
plotty4a<-ggplot(comps.noint.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("MTSV")
plotty4a<-ggplot(comps.noint.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("MTSV")
plotty4a
comps.noint.USFS<-filter(comps.noint,data=="USFS")
plotty4b<-ggplot(comps.noint.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("USFS")
plotty4b
grid.arrange(plotty4a,plotty4b,nrow=1)
plotty4a<-ggplot(comps.noint.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_minimal()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("MTSV")
plotty4a
plotty4a<-ggplot(comps.noint.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_tufte()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("MTSV")
plotty4a
plotty4a<-ggplot(comps.noint.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("MTSV")
plotty4a
plotty4b<-ggplot(comps.noint.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("USFS")
plotty4b
grid.arrange(plotty4a,plotty4b,nrow=1)
plotty4a<-ggplot(comps.noint.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("MTSV")
plotty4a
plotty4b<-ggplot(comps.noint.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("USFS")
plotty4b
grid.arrange(plotty4a,plotty4b,nrow=1)
plotty4a<-ggplot(comps.noint.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("MTSV")+xlim(-6,3)
plotty4b<-ggplot(comps.noint.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("USFS")+xlim(-6,3)
grid.arrange(plotty4a,plotty4b,nrow=1)
plotty4a<-ggplot(comps.noint.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("MTSV")+xlim(-6,4)
plotty4b<-ggplot(comps.noint.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("USFS")+xlim(-6,4)
grid.arrange(plotty4a,plotty4b,nrow=1)
plotty4a<-ggplot(comps.noint.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("MTSV")+xlim(-6,5)
plotty4b<-ggplot(comps.noint.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("USFS")+xlim(-6,5)
grid.arrange(plotty4a,plotty4b,nrow=1)
plotty4a<-ggplot(comps.noint.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("MTSV")+xlim(-6,5,5)
plotty4b<-ggplot(comps.noint.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("USFS")+xlim(-6.5,5)
grid.arrange(plotty4a,plotty4b,nrow=1)
plotty4a<-ggplot(comps.noint.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("MTSV")+xlim(-6.5,5)
plotty4b<-ggplot(comps.noint.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("USFS")+xlim(-6.5,5)
grid.arrange(plotty4a,plotty4b,nrow=1)
twopan.noint<-grid.arrange(plotty4a,plotty4b,nrow=1)
save.image(file="hystmodels.RData")
load("continuous.mods.RData")
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant")
library("phytools")
library(broom)
library(dplyr)
library(tidyr)
library(boot)
library("ggplot2")
library(car)
library(lme4)
library(brms)
library(ggstance)
library(MCMCglmm)
source("Scripts/continuous_mod_prep.R")
load("continuous.mods.RData")
hf.cont.noint<-ggplot(DDDD,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd,width=0.4)+geom_vline(aes(xintercept=0),color="black")+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("Continuous")
hf.bin.noint<-ggplot(DDDDD,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd,width=0.4)+geom_vline(aes(xintercept=0),color="black")+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("Binary")
grid.arrange(hf.cont.noint,hf.bin.noint)
hf.cont.noint<-ggplot(DDDD,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd,width=0)+geom_vline(aes(xintercept=0),color="black")+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("HF-Continuous")
hf.bin.noint<-ggplot(DDDDD,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd,width=0)+geom_vline(aes(xintercept=0),color="black")+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("HF-Binary")
grid.arrange(hf.cont.noint,hf.bin.noint)
grid.arrange(hf.cont.noint,hf.bin.noint,nrow=1)
####c### This is the final analysis file for hysteranthy anaylsis on MTSV as of 3/28/18.
###major update on 11.27.18
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant/input")
library("ape")
library("phytools")
library("geiger")
library("gbm")
library("pez")
library(caper)
library(picante)
library("tidyverse")
library(boot)
library("phylolm")
library("ggplot2")
library(arm)
library("randomForest")
library(car)
library(ggstance)
library(broom)
#if you dont want to run the model:
load("hystmodels.RData")
twopan.noint
twopan.noint<-grid.arrange(plotty4a,plotty4b,nrow=1)
###plotting==================================================
comps.noint$trait[which(comps.noint$trait=="pol_cent")] <- "pollination syndrome"
comps.noint$trait[which(comps.noint$trait=="flo_cent")] <- "flowering time"
comps.noint$trait[which(comps.noint$trait=="precip_cent")] <- "minimum precipitation"
pd=position_dodgev(height=0.4)
comps.noint.MTSV<-filter(comps.noint,data=="MTSV")
comps.noint.USFS<-filter(comps.noint,data=="USFS")
plotty4<-ggplot(comps.noint,aes(estimate,trait))+geom_point(size=2.5,aes(color=category,shape=data),position=pd)+geom_errorbarh(position=pd,width=0.4,aes(xmin=low,xmax=high,color=category,shape=data))+geom_vline(aes(xintercept=0))+theme_bw()+scale_color_manual(values=c("orchid4", "springgreen4"))
plotty4a<-ggplot(comps.noint.MTSV,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("MTSV")+xlim(-6.5,5)
plotty4b<-ggplot(comps.noint.USFS,aes(estimate,trait))+geom_point(size=2.5,aes(color=category),position=pd)+geom_errorbarh(position=pd,width=0,aes(xmin=low,xmax=high,color=category))+geom_vline(aes(xintercept=0))+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("USFS")+xlim(-6.5,5)
twopan.noint<-grid.arrange(plotty4a,plotty4b,nrow=1)
save.image(file="hystmodels.RData")
save.image(file="hystmodels.RData")
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant")
library("phytools")
library(broom)
library(dplyr)
library(tidyr)
library(boot)
library("ggplot2")
library(car)
library(lme4)
library(brms)
library(ggstance)
library(MCMCglmm)
source("Scripts/continuous_mod_prep.R")
load("continuous.mods.RData")
pd=position_dodgev(height=0.4)
hf.cont.noint<-ggplot(DDDD,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd,width=0)+geom_vline(aes(xintercept=0),color="black")+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("HF-Continuous")
hf.bin.noint<-ggplot(DDDDD,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd,width=0)+geom_vline(aes(xintercept=0),color="black")+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("HF-Binary")
grid.arrange(hf.cont.noint,hf.bin.noint,nrow=1)
###do summary and tidy match
coef(modelbin.funct.noint)
###do summary and tidy match
summary(modelbin.funct.noint)
tidy(modelbin.phys.noint,robust = TRUE))
tidy(modelbin.phys.noint,robust = TRUE)
###do summary and tidy match
summary(modelbin.funct.noint)
tidy(modelbin.phys.noint,robust = FALSE)
summary(modelcont.funct.noint)
summary(modelcont.phys.noint)
extract_coefs<-function(x){
gather(rownames_to_column(dplyr::select(as.data.frame(coef(x)),contains("Estimate")),"name"),term,Estimate,2:5)
}
cont.est<-extract_coefs(modelcont.funct.noint)
cont.est
View(cont.est)
as.data.frame(summary(modelcont.funct.noint))
as.data.frame(ranef(modelcont.funct.noint))
as.data.frame(coef(modelcont.funct.noint))
as.data.frame(modelcont.funct.noint)
modelcont.funct.noint
?coef()
?coef((modelcont.funct.noint,complete=FALSE)
as.data.frame(modelcont.funct.noint)
),contains("Estimate"))
coef((modelcont.funct.noint,complete=FALSE)
as.data.frame(modelcont.funct.noint)
),contains("Estimate"))
coef(modelcont.funct.noint,complete=FALSE)
print(modelcont.funct.noint,complete=FALSE)
as.data.frame(print(modelcont.funct.noint))
fixef(modelcont.funct.noint)
fixef(modelcont.funct.noint, summary=TRUE)
fixef(modelcont.funct.noint, summary=TRUE,probs=c(.25,.75))
cont.est<-as.data.frame(fixef(modelcont.funct.noint, summary=TRUE,probs=c(.25,.75)))
View(cont.est)
cont.est<-(rownames_to_column(as.data.frame(fixef(modelcont.funct.noint, summary=TRUE,probs=c(.25,.75))),"term"))
View(cont.est)
extract_coefs<-function(x){rownames_to_column(as.data.frame(fixef(modelcont.funct.noint, summary=TRUE,probs=c(.25,.75))),"term"))
}
extract_coefs<-function(x){rownames_to_column(as.data.frame(fixef(modelcont.funct.noint, summary=TRUE,probs=c(.25,.75))),"term")
}
funct.cont<-extract_coefs(modelcont.funct.noint)
View(funct.cont)
extract_coefs<-function(x){rownames_to_column(as.data.frame(fixef(modelcont.funct.noint, summary=TRUE,probs=c(0.025,.25,.75,0.975))),"term")
}
funct.cont<-extract_coefs(modelcont.funct.noint)
View(funct.cont)
phys.cont<-extract_coefs(modelcont.phys.noint)
funct.bin<-extract_coefs(modelbin.funct.int)
View(funct.bin)
extract_coefs<-function(x){rownames_to_column(as.data.frame(fixef(modelcont.funct.noint, summary=TRUE,probs=c(0.025,.25,.75,0.975))),"trait")
}
funct.cont<-extract_coefs(modelcont.funct.noint)
phys.cont<-extract_coefs(modelcont.phys.noint)
funct.bin<-extract_coefs(modelbin.funct.int)
funct.bin<-extract_coefs(modelbin.funct.noint)
phys.bin<-extract_coefs(modelbin.phys.noint)
View(phys.bin)
funct.bin$class<-"functional"
funct.cont$class<-"functional"
View(funct.bin)
phys.cont$class<-"physiological"
phys.bin$class<-"physiological"
cont.noint<-rbind(phys.cont,funct.cont)
hf.cont.noint<-ggplot(cont.noint,aes(Estimate,trait))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=class)linetype="solid",position=pd,width=0)++geom_errorbarh(aes(xmin=Q2.5,xmax=Q97.5,color=class)linetype="dashdot",position=pd,width=0)+geom_vline(aes(xintercept=0),color="black")+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("HF-Continuous")
hf.cont.noint<-ggplot(cont.noint,aes(Estimate,trait))+geom_point(aes(color=class),position=pd)
hf.cont.noint<
hf.cont.noint
hf.cont.noint
cont.noint<-rbind(phys.cont,funct.cont)
View(cont.noint)
extract_coefs<-function(x){rownames_to_column(as.data.frame(fixef(x, summary=TRUE,probs=c(0.025,.25,.75,0.975))),"trait")
}
funct.cont<-extract_coefs(modelcont.funct.noint)
funct.cont$class<-"functional"
funct.bin<-extract_coefs(modelbin.funct.noint)
funct.bin$class<-"functional"
phys.cont<-extract_coefs(modelcont.phys.noint)
phys.bin<-extract_coefs(modelbin.phys.noint)
phys.cont$class<-"physiological"
phys.bin$class<-"physiological"
cont.noint<-rbind(phys.cont,funct.cont)
pd=position_dodgev(height=0.4)
hf.cont.noint<-ggplot(cont.noint,aes(Estimate,trait))+geom_point(aes(color=class),position=pd)
hf.cont.noin
hf.cont.noint
hf.cont.noint<-ggplot(cont.noint,aes(Estimate,trait))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=class)linetype="solid",position=pd,width=0)+geom_errorbarh(aes(xmin=Q2.5,xmax=Q97.5,color=class)linetype="dashdot",position=pd,width=0)+geom_vline(aes(xintercept=0),color="black")+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("HF-Continuous")
hf.cont.noint<-ggplot(cont.noint,aes(Estimate,trait))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=class),linetype="solid",position=pd,width=0)+geom_errorbarh(aes(xmin=Q2.5,xmax=Q97.5,color=class)linetype="dashdot",position=pd,width=0)+geom_vline(aes(xintercept=0),color="black")+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("HF-Continuous")
hf.cont.noint<-ggplot(cont.noint,aes(Estimate,trait))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=class),linetype="solid",position=pd,width=0)
hf.cont.noint
hf.cont.noint<-ggplot(cont.noint,aes(Estimate,trait))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=class),linetype="solid",position=pd,width=0)+geom_errorbarh(aes(xmin=Q2.5,xmax=Q97.5,color=class),linetype="dashdot",position=pd,width=0)+geom_vline(aes(xintercept=0),color="black")+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("HF-Continuous")
hf.cont.noint
hf.cont.noint<-ggplot(cont.noint,aes(Estimate,trait))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=class),linetype="solid",position=pd,width=0)+geom_errorbarh(aes(xmin=Q2.5,xmax=Q97.5,color=class),linetype="dotdash",position=pd,width=0)+geom_vline(aes(xintercept=0),color="black")+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("HF-Continuous")
hf.cont.noint
hf.cont.noint<-ggplot(cont.noint,aes(Estimate,trait))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=class),linetype="solid",position=pd,width=0)+geom_errorbarh(aes(xmin=Q2.5,xmax=Q97.5,color=class),linetype="dotted",position=pd,width=0)+geom_vline(aes(xintercept=0),color="black")+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("HF-Continuous")
hf.cont.noint
bin.noint<-rbind(phys.bin,funct.bin)
hf.bin.noint<-ggplot(bin.noint,aes(Estimate,trait))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=class),linetype="solid",position=pd,width=0)+geom_errorbarh(aes(xmin=Q2.5,xmax=Q97.5,color=class),linetype="dotted",position=pd,width=0)+geom_vline(aes(xintercept=0),color="black")+theme_base()+scale_color_manual(values=c("orchid4", "springgreen4"))+ggtitle("HF-Binary")
hf.bin.noint
grid.arrange(hf.cont.noint,hf.bin.noint,nrow=1)
save.image("continuous.mods.RData")
####c### This is the final analysis file for hysteranthy anaylsis on MTSV as of 3/28/18.
###major update on 11.27.18
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant/input")
library("ape")
library("phytools")
library("geiger")
library("gbm")
library("pez")
library(caper)
library(picante)
library("tidyverse")
library(boot)
library("phylolm")
library("ggplot2")
library(arm)
library("randomForest")
library(car)
library(ggstance)
library(broom)
#if you dont want to run the model:
load("hystmodels.RData")
z.funct.drought.noint$bootconfint95
coef(z.funct.drought.noint)
t(coef(z.funct.drought.noint))
fixef(z.funct.drought.noint)
coef(z.funct.drought.noint)
z.funct.drought.noint
z.funct.drought.noint$coefficients
z.funct.drought.noint$boot
z.funct.drought.noint$bootmean
z.funct.drought.noint$fitted.values
z.funct.drought.noint$bootconfint95
twopan.noint
twopan.noint<-grid.arrange(plotty4a,plotty4b,nrow=1)
