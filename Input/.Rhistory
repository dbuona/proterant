power.prop.test(n=c(20,30,40,50,60),p1=0.5,p2=0.8,sig.level=0.05,alternative=c("two.sided"))
power.prop.test(n=c(20,30,40,50,60),p1=0.5,p2=0.78,sig.level=0.05,alternative=c("two.sided"))
setwd("~/")
citation("lme4")
citation("car")
citation("stats")
install.packages("geometry")
library("geometry")
(2016-2012)/(2012-1986)^100
(2016-2012)/(2012-1986)*100
a=4
a
a*5
a=a+1
a
a=4
a*5
a=a+1
a
rm(a)
a=2012
b=2016
c=1986
(b-a)/(a-c)*100
rm(list=ls())
b=c(3,4,5)
b/3
mean(x=b)
mean(b)
q=(4,5,8,11)
q=(4,5,8,11)
d=(4,5,8,11)
d=(4,5,8,11)
d=4,5,8,11
d=4,5,8
d=(4,5,8)
l=(4,5,8,11)
l=c(4,5,8,11)
sum(l)
rnorm(10)
rnorm(10,mean=1.3, sd=3.4)
x=rnorm(100)
plot(x)
help(rnorm)
example(rnorm)
help(sqrt)
rm(list=ls())
a=rnorm(300, mean = 22, sd=7.6)
plot(a)
a=rnorm(300)
plot(a)
a=rnorm(300)
plot(a)
a=rnorm(300)
plot(a)
mat=matrix(data=c(9,2,3,4,5,6),ncol=3)
mat
60-31
p=seq(from=31, to-60, lenth=29 )
p=seq(from=31, to-60)
p=seq(from=31, to=60)
p
pmat=matrix(data=p,ncol=6,nrow-5)
pmat=matrix(data=p,ncol=6,nrow=5)
pmat
mean(pmat)
pmat(2,)
pmat(2,1)
pmat[2,1]
pmat[2,]
x1=c(rnorm,100)
x2=c(rnorm,100)
x3=c(rnorm,100)
x1
x1=c(rnorm,length=100)
x1
x1=seq(from=0, to=100)
x1
rnorm(x1)
x3=rnorm(100)
x1=rnorm(100)
x2=rnorm(100)
x1=c(x1)
x2=c(x2)
x3=c(x3)
x3
x1=c(x1, length=100)
x1
x1=c(x1)
t=data.frame(a=c(x1),b=c(x2),c=c(x3))
x1=rnorm(100)
x2=rnorm(100)
x3=rnorm(100)
t=data.frame(a=c(x1),b=c(x2),c=c(x3))
t
t=data.frame(a=c(x1),b=c(x1+x2),c=c(x1+x2+x3))
t
plot(t)
sd(t)
data.frame(a=x1,b=(x1=x2),c=(x1+x2+x3))
plot(t)
sd(t)
plot(rnorm=100, type=l, col="red")
plot(rnorm(100), type=l, col="red")
plot(rnorm(100), type="l", col="red")
hist(rnorm)
hist(rnorm(100))
t = data.frame(x = c(11,12,14), y = c(19,20,21), z = c(10,9,7))
t
plot(t$a, type="l",ylim=range(t),
lwd=3, col=rgb(1,0,0,0.3))
plot(t$a, type="l",ylim=range(t),lwd=3, col=rgb(1,0,0,0.3))
plot(t$a, type="l",ylim=range(t),lwd=3,col=rgb(1,0,0,0.3))
points(t$c, pch=20, cex=4,6 col=rgb(0,0,1,0.3))
d = data.frame(a = c(3,4,5),b = c(12,43,54))
d
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat("\nCC=clang", "CXX=clang++ -arch x86_64 -ftemplate-depth-256",
file = M, sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
Sys.setenv(MAKEFLAGS = "-j4")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
Sys.setenv(MAKEFLAGS = "-j4")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
Sys.setenv(MAKEFLAGS = "-j4")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
Sys.setenv(MAKEFLAGS = "-j4")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 ) # should be 10
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
> system('clang++ -v')
system('clang++ -v')
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 )
library("restan")
library("rstan")
data {
int<lower=0> J; // number of schools
real y[J]; // estimated treatment effects
real<lower=0> sigma[J]; // s.e. of effect estimates
}
parameters {
real mu;
real<lower=0> tau;
real eta[J];
}
transformed parameters {
real theta[J];
for (j in 1:J)
theta[j] = mu + tau * eta[j];
}
model {
target += normal_lpdf(eta | 0, 1);
target += normal_lpdf(y | theta, sigma);
}
data {
int<lower=0> J; // number of schools
real y[J]; // estimated treatment effects
real<lower=0> sigma[J]; // s.e. of effect estimates
}
data {
int<lower=0> J; // number of schools
real y[J]; // estimated treatment effects
real<lower=0> sigma[J]; // s.e. of effect estimates
real<lower=0> sigma[J]; // s.e. of effect estimates}
data {
int<lower=0> J; // number of schools
real y[J]; // estimated treatment effects
real<lower=0> sigma[J]; // s.e. of effect estimates}
data {
int<lower=0> J; // number of schools
real y[J]; // estimated treatment effects
real<lower=0> sigma[J]; // s.e. of effect estimates
}
parameters {
real mu;
real<lower=0> tau;
real eta[J];
}
transformed parameters {
real theta[J];
for (j in 1:J)
theta[j] <- mu + tau * eta[j];
}
model {
eta ~ normal(0, 1);
y ~ normal(theta, sigma);
}
data {
int<lower=0> J; // number of schools
real y[J]; // estimated treatment effects
real<lower=0> sigma[J]; // s.e. of effect estimates
}
real<lower=0> sigma[J]; // s.e. of effect estimates}
data { int<lower=0> J; // number of schools
library("rstan")
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 )
data <- list(N = 1000, y = rbinom(1000, 1, 0.7))
bernoulli <- stan("bernoulli.stan", data = data)
bernoulli.stan
60-31
p=seq(from=31, to=60, length=29)
p
rm(p)
p=seq.int(from = 31, to=60, by=1)
p
q=matrix(data=p, ncol=5, nrow=6)
q
x1=c(rnorm(100))
x2=c(rnorm(100))
x3=c(rnorm(100))
t=data.frame(a=x1, b=x1+x2, c=x1+x2=X3)
t=data.frame(a=x1, b=x1+x2, c=x1+x2+X3)
t=data.frame(a=x1, b=x1+x2, c=x1+x2+x3)
plot(t)
x1=seq(rnorm(100))
x2=seq(rnorm(100))
x3=seq(rnorm(100))
t=data.frame(a=x1, b=x1+x2, c=x1+x2+x3)
plot(t)
rnorm(100)
x1=c(rnorm(100))
x2=c(rnorm(100))
x3=c(rnorm(100))
t=data.frame(a=x1, b=x1+x2, c=x1+x2+x3)
plot(t)
sd(t)
x1=(rnorm(100))
x2=(rnorm(100))
x3=(rnorm(100))
x1=(rnorm(100))
x2=(rnorm(100))
x3=(rnorm(100))
t= data.frame(a=c(x1), b=c(x1+x2), c=c(x1+x2+x3))
plot(t)
sd(t)
\usepackage{Library/Frameworks/R.Framework/Resources/Share/texmf/Sweave}
usepackage{Library/Frameworks/R.Framework/Resources/Share/texmf/Sweave}
library(tools)
library(xtable)
options(SweaveSyntax="SweaveSyntaxNoweb")
library(tools)
library(xtable)
options(SweaveSyntax="SweaveSyntaxNoweb")
###This is a tidy analysis compiling and comparing all of Dan B's hysteranthy codes from elsewhere
###Began 5 Spet 2017
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant/input")
library(ape)
library(phytools)
library(geiger)
library(gbm)
library(pez)
library(dplyr)
library(tidyr)
library(caper)
library(picante)
library(tidyverse)
library(boot)
library(phylolm)
library(ggplot2)
#########READ IN ALL DATA AND ASSOCIATED TREES##################
mich.tree<-read.tree("pruned_for_mich.tre")
mich.data<-read.csv("mich_data_full.csv")
silv.tree<-read.tree("pruned_silvics.tre")
silv.data<-read.csv("silv_data_full.csv")
##Mich trees phylo D
set.seed(122)
mich.tree$node.label<-NULL
View(mich.data)
#clean av fruit time
mich.data$av_fruit_time[mich.data$av_fruit_time=="persistant"]<-12
mich.data$av_fruit_time[mich.data$av_fruit_time=="persitant"]<-12
mich.data$av_fruit_time[mich.data$av_fruit_time=="unreported"]<-9
mich.data$av_fruit_time<-as.numeric(mich.data$av_fruit_time)
###clean fruiting
#mich.data$fruiting[mich.data$fruiting==19]<-7
#####add a new column for a adjusting for red acorn time
mich.data$fruiting<-NA
mich.data$fruiting<-mich.data$av_fruit_time
mich.data$fruiting[mich.data$fruiting==19]<-7
mich.data$fruiting[mich.data$fruiting=="persistant"]<-12
mich.data$fruiting[mich.data$fruiting=="persitant"]<-12
mich.data$fruiting[mich.data$fruiting=="unreported"]<-9
mich.data$fruiting<-as.numeric(mich.data$fruiting)
####Silvics cleaning
###fruiting
silv.data$fruiting<-NA
silv.data$fruiting<-silv.data$av_fruit_time
silv.data$fruiting[silv.data$fruiting==21]<-9
###functional hysteranthy
silv.data["pro2"]<-NA
silv.data$pro2[silv.data$silvic_phen_seq== "pro"] <- 1
silv.data$pro2[silv.data$silvic_phen_seq== "pro/syn"] <- 1
silv.data$pro2[silv.data$silvic_phen_seq== "syn"] <- 1
silv.data$pro2[silv.data$silvic_phen_seq== "syn/ser"] <- 0
silv.data$pro2[silv.data$silvic_phen_seq== "ser"] <- 0
silv.data$pro2[silv.data$silvic_phen_seq== "hyst"] <- 0
silv.data$pro2[silv.data$name == "Quercus_laurifolia"] <- 1
###super biological hysreanthy
final.df["pro3"]<-NA
final.df$pro3[final.df$Phen.sequence == "pro"] <- 1
final.df$pro3[final.df$Phen.sequence == "pro/syn"] <- 0
final.df$pro3[final.df$Phen.sequence== "syn"] <- 0
final.df$pro3[final.df$Phen.sequence== "syn/ser"] <- 0
final.df$pro3[final.df$Phen.sequence== "ser"] <- 0
final.df$pro3[final.df$Phen.sequence== "hyst"] <- 0
mich.data["pro3"]<-NA
final.df$pro3[mich.data$Phen.sequence == "pro"] <- 1
mich.data["pro3"]<-NA
mich.data$pro3[mich.data$Phen.sequence == "pro"] <- 1
mich.data$pro3[mich.data$Phen.sequence == "pro/syn"] <- 0
mich.data$pro3[mich.data$Phen.sequence== "syn"] <- 0
mich.data$pro3[mich.data$Phen.sequence== "syn/ser"] <- 0
mich.data$pro3[mich.data$Phen.sequence== "ser"] <- 0
mich.data$pro3[mich.data$Phen.sequence== "hyst"] <- 0
PhyloPro3<-phylo.d(d,binvar=pro3)
d<-comparative.data(mich.tree,mich.data,name,vcv = TRUE,vcv.dim = 2, na.omit = FALSE)
PhyloPro3<-phylo.d(d,binvar=pro3)
PhyloPro3
mich.data$height_cent<-(mich.data$heigh_height-mean(mich.data$heigh_height))/(2*sd(mich.data$heigh_height))
mich.data$fruit_cent<-(mich.data$fruiting-mean(mich.data$fruiting))/(2*sd(mich.data$fruiting))
mich.data$flo_cent<-(mich.data$flo_time-mean(mich.data$flo_time))/(2*sd(mich.data$flo_time))
mich.data$pol_cent<-(mich.data$pol-mean(mich.data$pol))/(2*sd(mich.data$pol))
mich.data$av_fruit_time_cent<-(mich.data$av_fruit_time-mean(mich.data$av_fruit_time))/(2*sd(mich.data$av_fruit_time))
silv.data$height_cent<-(silv.data$height-mean(silv.data$height))/(2*sd(silv.data$height))
silv.data$fruit_cent<-(silv.data$fruiting-mean(silv.data$fruiting))/(2*sd(silv.data$fruiting))
silv.data$flo_cent<-(silv.data$flower_time-mean(silv.data$flower_time))/(2*sd(silv.data$flower_time))
mich.data<-  mich.data %>% remove_rownames %>% column_to_rownames(var="name")
silv.data<-  silv.data %>% remove_rownames %>% column_to_rownames(var="name")
Mich5cent.super<-phyloglm(pro3~pol+height_cent+flo_cent+fruit_cent+shade_bin,mich.data, mich.tree, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=50,full.matrix = TRUE)
summary(Mich5cent.super)
silv.data["pro3"]<-NA
silv.data$pro3[silv.data$silvic_phen_seq== "pro"] <- 1
silv.data$pro3[silv.data$silvic_phen_seq== "pro/syn"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "syn"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "syn/ser"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "ser"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "hyst"] <- 0
silv.data$pro3[silv.data$name == "Quercus_laurifolia"] <- 1
e<-comparative.data(silv.tree,silv.data,name,vcv = TRUE,vcv.dim = 2, na.omit = FALSE)
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant/input")
library(ape)
library(phytools)
library(geiger)
library(gbm)
library(pez)
library(dplyr)
library(tidyr)
library(caper)
library(picante)
library(tidyverse)
library(boot)
library(phylolm)
library(ggplot2)
#########READ IN ALL DATA AND ASSOCIATED TREES##################
mich.tree<-read.tree("pruned_for_mich.tre")
mich.data<-read.csv("mich_data_full.csv")
silv.tree<-read.tree("pruned_silvics.tre")
silv.data<-read.csv("silv_data_full.csv")
##Mich trees phylo D
set.seed(122)
mich.tree$node.label<-NULL
d<-comparative.data(mich.tree,mich.data,name,vcv = TRUE,vcv.dim = 2, na.omit = FALSE)
PhyloD <- phylo.d(d, binvar=pro) ###Physiological hysteranthy
PhyloD
##functionalhysteranthy
PhyloPro2<-phylo.d(d,binvar=pro2)
PhyloPro2
###Silvics phyloD
e<-comparative.data(silv.tree,silv.data,name,vcv = TRUE,vcv.dim = 2, na.omit = FALSE)
PhyloE <- phylo.d(e, binvar=pro)
PhyloE
#######Michigan cleaning######################
#clean av fruit time
mich.data$av_fruit_time[mich.data$av_fruit_time=="persistant"]<-12
mich.data$av_fruit_time[mich.data$av_fruit_time=="persitant"]<-12
mich.data$av_fruit_time[mich.data$av_fruit_time=="unreported"]<-9
mich.data$av_fruit_time<-as.numeric(mich.data$av_fruit_time)
###clean fruiting
#mich.data$fruiting[mich.data$fruiting==19]<-7
#####add a new column for a adjusting for red acorn time
mich.data$fruiting<-NA
mich.data$fruiting<-mich.data$av_fruit_time
mich.data$fruiting[mich.data$fruiting==19]<-7
mich.data$fruiting[mich.data$fruiting=="persistant"]<-12
mich.data$fruiting[mich.data$fruiting=="persitant"]<-12
mich.data$fruiting[mich.data$fruiting=="unreported"]<-9
mich.data$fruiting<-as.numeric(mich.data$fruiting)
####Silvics cleaning
###fruiting
silv.data$fruiting<-NA
silv.data$fruiting<-silv.data$av_fruit_time
silv.data$fruiting[silv.data$fruiting==21]<-9
###functional hysteranthy
silv.data["pro2"]<-NA
silv.data$pro2[silv.data$silvic_phen_seq== "pro"] <- 1
silv.data$pro2[silv.data$silvic_phen_seq== "pro/syn"] <- 1
silv.data$pro2[silv.data$silvic_phen_seq== "syn"] <- 1
silv.data$pro2[silv.data$silvic_phen_seq== "syn/ser"] <- 0
silv.data$pro2[silv.data$silvic_phen_seq== "ser"] <- 0
silv.data$pro2[silv.data$silvic_phen_seq== "hyst"] <- 0
silv.data$pro2[silv.data$name == "Quercus_laurifolia"] <- 1
###super bio hysteranthy for silvics
silv.data["pro3"]<-NA
silv.data$pro3[silv.data$silvic_phen_seq== "pro"] <- 1
silv.data$pro3[silv.data$silvic_phen_seq== "pro/syn"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "syn"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "syn/ser"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "ser"] <- 0
silv.data$pro3[silv.data$silvic_phen_seq== "hyst"] <- 0
silv.data$pro3[silv.data$name == "Quercus_laurifolia"] <- 1
###super biological hysreanthy
mich.data["pro3"]<-NA
mich.data$pro3[mich.data$Phen.sequence == "pro"] <- 1
mich.data$pro3[mich.data$Phen.sequence == "pro/syn"] <- 0
mich.data$pro3[mich.data$Phen.sequence== "syn"] <- 0
mich.data$pro3[mich.data$Phen.sequence== "syn/ser"] <- 0
mich.data$pro3[mich.data$Phen.sequence== "ser"] <- 0
mich.data$pro3[mich.data$Phen.sequence== "hyst"] <- 0
##super biological for michigan trees
PhyloPro3<-phylo.d(d,binvar=pro3)
PhyloPro3
PhyloPro3<-phylo.d(d,binvar=pro3)
mich.data["pro3"]<-NA
mich.data$pro3[mich.data$Phen.sequence == "pro"] <- 1
mich.data$pro3[mich.data$Phen.sequence == "pro/syn"] <- 0
mich.data$pro3[mich.data$Phen.sequence== "syn"] <- 0
mich.data$pro3[mich.data$Phen.sequence== "syn/ser"] <- 0
mich.data$pro3[mich.data$Phen.sequence== "ser"] <- 0
mich.data$pro3[mich.data$Phen.sequence== "hyst"] <- 0
d<-comparative.data(mich.tree,mich.data,name,vcv = TRUE,vcv.dim = 2, na.omit = FALSE)
PhyloPro3<-phylo.d(d,binvar=pro3)
PhyloPro3
e<-comparative.data(silv.tree,silv.data,name,vcv = TRUE,vcv.dim = 2, na.omit = FALSE)
PhyloSilv3<-phylo.d(e,binvar=pro3)
PhyloSilv3
#####Centering
mich.data$height_cent<-(mich.data$heigh_height-mean(mich.data$heigh_height))/(2*sd(mich.data$heigh_height))
mich.data$fruit_cent<-(mich.data$fruiting-mean(mich.data$fruiting))/(2*sd(mich.data$fruiting))
mich.data$flo_cent<-(mich.data$flo_time-mean(mich.data$flo_time))/(2*sd(mich.data$flo_time))
mich.data$pol_cent<-(mich.data$pol-mean(mich.data$pol))/(2*sd(mich.data$pol))
mich.data$av_fruit_time_cent<-(mich.data$av_fruit_time-mean(mich.data$av_fruit_time))/(2*sd(mich.data$av_fruit_time))
silv.data$height_cent<-(silv.data$height-mean(silv.data$height))/(2*sd(silv.data$height))
silv.data$fruit_cent<-(silv.data$fruiting-mean(silv.data$fruiting))/(2*sd(silv.data$fruiting))
silv.data$flo_cent<-(silv.data$flower_time-mean(silv.data$flower_time))/(2*sd(silv.data$flower_time))
mich.data<-  mich.data %>% remove_rownames %>% column_to_rownames(var="name")
silv.data<-  silv.data %>% remove_rownames %>% column_to_rownames(var="name")
###uncentered
mich5<-phyloglm(pro~pol+heigh_height+flo_time+fruiting+shade_bin,mich.data, mich.tree, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=50,full.matrix = TRUE)
summary(mich5)
###centered for comparision between bianry and continuous
mich5cent<-phyloglm(pro~pol+height_cent+flo_cent+fruit_cent+shade_bin,mich.data, mich.tree, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=50,full.matrix = TRUE)
summary(mich5cent)
###Functional hysteranthy-centered
Mich5cent.funct<-phyloglm(pro2~pol+height_cent+flo_cent+fruit_cent+shade_bin,mich.data, mich.tree, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=50,full.matrix = TRUE)
summary(Mich5cent.funct)
Mich5cent.super<-phyloglm(pro3~pol+height_cent+flo_cent+fruit_cent+shade_bin,mich.data, mich.tree, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=50,full.matrix = TRUE)
summary(Mich5cent.super)
sil5.cent<-phyloglm(pro~pol+flo_cent+height_cent+fruit_cent+shade_bin,silv.data, silv.tree, method = "logistic_MPLE", btol = 60, log.alpha.bound = 4,
start.beta=NULL, start.alpha=NULL,
boot=50,full.matrix = TRUE)
summary(sil5.cent)
#### functional silvics
sil5.cent.funct<-phyloglm(pro2~pol+flo_cent+height_cent+fruit_cent+shade_bin,silv.data, silv.tree, method = "logistic_MPLE", btol = 60, log.alpha.bound = 4,
start.beta=NULL, start.alpha=NULL,
boot=50,full.matrix = TRUE)
summary(sil5.cent.funct)
sil5.cent.super<-phyloglm(pro3~pol+flo_cent+height_cent+fruit_cent+shade_bin,silv.data, silv.tree, method = "logistic_MPLE", btol = 60, log.alpha.bound = 4,
start.beta=NULL, start.alpha=NULL,
boot=50,full.matrix = TRUE)
summary(sil5.cent.super)
sil5.cent.super<-phyloglm(pro3~pol+flo_cent+height_cent+fruit_cent+shade_bin,silv.data, silv.tree, method = "logistic_MPLE", btol = 60, log.alpha.bound = 4,
start.beta=NULL, start.alpha=NULL,
boot=50,full.matrix = TRUE)
summary(sil5.cent.super)
sil5.cent.funct<-phyloglm(pro2~pol+flo_cent+height_cent+fruit_cent+shade_bin,silv.data, silv.tree, method = "logistic_MPLE", btol = 60, log.alpha.bound = 4,
start.beta=NULL, start.alpha=NULL,
boot=50,full.matrix = TRUE)
summary(sil5.cent.funct)
summary(sil5.cent)
