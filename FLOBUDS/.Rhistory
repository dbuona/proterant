View(Q)
View(Q)
Q<-as.data.frame(VAC1$fit)
View(Q)
?datawrangling
??datawrangling
??cheatsheets
Q<-summarise_each(Q, funs(mean))
Q<-summarise_all(Q, funs(mean))
View(Q)
#######try a model with just vaccor
VACO<-filter(hayim2,GEN.SPA=="COR.COR")
VAC1<-brm(DOY | cens(surv) ~ phase+photoperiod+chilldays+temp_day+photoperiod:phase+chilldays:phase+temp_day:phase,
data = VACO, family = weibull,inits = "0",
iter= 3000,
warmup = 2000)
summary(VAC1)
#######try a model with just COR COR
VACO<-filter(hayim2,GEN.SPA=="COM.PER")
VAC1<-brm(DOY | cens(surv) ~ phase+photoperiod+chilldays+temp_day+photoperiod:phase+chilldays:phase+temp_day:phase,
data = VACO, family = weibull,inits = "0",
iter= 3000,
warmup = 2000)
summary(VAC1)
####data leadin 6 Nov 2018
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
library(ggplot2)
library(tidyverse)
library("brms")
library(rstan)
library(arm)
library(rstanarm)
library(tibble)
library(ggstance)
library(survival)
library(sur)
library(survminer)
library(ggthemes)
library("Hmisc")
setwd("~/Documents/git/proterant/FLOBUDS")
#load("flobud_mods.RData")
d<-read.csv("first.event.dat.csv",header=TRUE)
#load("flobud_mods.RData")
d<-read.csv("input/first.event.dat.csv",header=TRUE)
###get rid of useless colummns
colnames(d)
d<-dplyr::select(d, -X.1)
d<-dplyr::select(d, -X)
#### make light differsent so variables  appear in order
#d$Light<-ifelse(d$Light=="L","XL","S")
###name treatments numeric/continuous
d$photoperiod<-ifelse(d$Light=="L",12,8)
d$temp_day<-ifelse(d$Force=="W",24,18)
d$temp_night<-ifelse(d$Force=="W",18,12)
d$chilldays<-ifelse(d$Chill==0,28,56)
###center predictors
d$p_scale<-d$photoperiod-mean(d$photoperiod)/2*(sd(d$photoperiod))
d$f_scale<-d$temp_day-mean(d$temp_day)/2*(sd(d$temp_day))
d$c_scale<-d$chilldays-mean(d$chilldays)/2*(sd(d$chilldays))
###what is the distrbution of response variables
ggplot(d,aes(flo_day))+geom_density()
ggplot(d,aes(leaf_day))+geom_density()
ggplot(d,aes(Lbb_day))+geom_density()
ggplot(d,aes(Lexpand_day))+geom_density()
d<-unite(d, treatment, Force,Light, Chill, sep= "",remove = FALSE)
phased<-gather(d,phase,DOY,8:12)
bbview<-filter(phased, phase %in% c("Lbb_day","flo_day"))
expview<-filter(phased, phase %in% c("Lexpand_day","flo_day"))
leafview<-filter(phased, phase %in% c("leaf_day","flo_day"))
###leafout and flowering
bigsp<-filter(leafview, !GEN.SPA %in% c("AME.SPP","BET.SPP"))
unique(bigsp$GEN.SPA)
library(ggstance)
pd=position_dodge(0.1)
bigsp$phase[bigsp$phase=="flo_day"]<-"flower"
bigsp$phase[bigsp$phase=="leaf_day"]<-"leaf"
bigsp$Light[bigsp$Light=="XL"]<-"long photoperiod"
bigsp$Light[bigsp$Light=="S"]<-"short photoperiod"
bigsp$Chill[bigsp$Chill=="0"]<-"short chilling"
bigsp$Chill[bigsp$Chill=="1"]<-"long chilling"
bigsp$Force[bigsp$Force=="C"]<-"low forcing"
bigsp$Force[bigsp$Force=="W"]<-"high forcing"
p<-ggplot(bigsp,aes(GEN.SPA,as.numeric(DOY)))+geom_point(aes(shape=phase,color=phase),size=0.8)+ylab("days to event")+xlab("species")+stat_summary(fun.data = "mean_cl_boot",aes(shape=phase,color=phase),position=pd)+facet_grid(Force~Light~Chill)+theme_bw()
pp<-p+theme(axis.text.x = element_text(size=8,angle = 300, hjust = 0))
pp
###################survival analysis###########Kaplan-Meier########################
viv<-filter(d,Dead.alive %in% c("A","?"))
table(viv$treatment)
table(viv$treatment)
table(d$treatment)
vivo.full<-gather(viv,phase,DOY,9:12)
###do it for bud burst
vivo<-filter(vivo.full, phase %in% c("Lbb_day","flo_day"))
vivo$DOY<-ifelse(is.na(vivo$DOY),120,vivo$DOY)
vivo$surv<-ifelse(vivo$DOY==120,1,0)
vivo$floposs<-ifelse(vivo$Flo.poss.=="N",0,1)
###This is only twigs where we deemed flowering to even bee possible
vivo2<-filter(vivo,floposs==1)
###vivo2 is main datasheet for buds and flower
###chayim 2 is for leaf out and flowering
unique(vivo.full$phase)
hayim<-dplyr::filter(vivo.full, phase %in% c("leaf_day","flo_day"))
hayim$DOY<-ifelse(is.na(hayim$DOY),120,hayim$DOY)
hayim$surv<-ifelse(hayim$DOY==120,1,0)
hayim$floposs<-ifelse(hayim$Flo.poss.=="N",0,1)
###This is only twigs where we deemed flowering to even bee possible
hayim2<-filter(hayim,floposs==1)
write.csv(vivo2,"budburst_survival_data",rownames=FALSE)
write.csv(vivo2,"budburst_survival_data")
write.csv(hayyim2, "flo_exapand_survival_data")
write.csv(hayim2, "flo_exapand_survival_data")
####data leadin 6 Nov 2018
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
library(ggplot2)
library(tidyverse)
library("brms")
library(rstan)
library(arm)
library(rstanarm)
library(tibble)
library(ggstance)
library(survival)
library(sur)
library(survminer)
library(ggthemes)
library("Hmisc")
d<-read.csv("flo_exapand_survival_data")
###model for flowering and leaf exansion
prior2<-get_prior(DOY | cens(surv) ~ phase+Light+Chill+Force+Light:phase+Chill:phase+Force:phase,
data = d, family = weibull)
mod.fe<- brm(DOY | cens(surv) ~ phase+Light+Chill+Force+Light:phase+Chill:phase+Force:phase+(1+phase+Light:phase+Chill:phase+Force:phase|GEN.SPA),
data = d, family = weibull,inits = "0",
iter= 3000,
warmup = 2000,
prior = prior2)
summary(mod.fe)#13 divergent transitions
#plot this model
Q<-as.data.frame(coef(mod.fe))
colnames(Q)
R<-dplyr::select(Q,contains("Estimate"))
View(R)
R<-rownames_to_column(R,"GEN.SPA")
colnames(R)
colnames(R)<-c("GEN.SPA","Intercept","Phase","Light:Flo","Light:Leaf","Chill:Flo","Chill:Leaf","Force:Flo","Force:Leaf","LightS","Chill","Force")
R<-gather(R,"predictor","effect",2:12)
ggplot(R, aes(effect,predictor))+geom_point()+geom_vline(aes(xintercept=0,color="red"))+facet_wrap(~GEN.SPA)
ggplot(R, aes(effect,predictor))+geom_point()+geom_vline(aes(xintercept=0,color="red"))+facet_wrap(~GEN.SPA)
X<-dplyr::select(Q, contains("Q2.5."))
colnames(X)
#X<-dplyr::select(X, -GEN.SPA.Q2.5.Intercept)
colnames(X)
X<-rownames_to_column(X,"GEN.SPA")
X<-rownames_to_column(X,"GEN.SPA")
colnames(X)<-c("GEN.SPA","Phase","Light:Flo","Light:Leaf","Chill:Flo","Chill:Leaf","Force:Flo","Force:Leaf","LightS","Chill")
colnames(X)<-c("GEN.SPA","Phase","Light:Flo","Light:Leaf","Chill:Flo","Chill:Leaf","Force:Flo","Force:Leaf","LightS","Chill","Force")
#X<-dplyr::select(X, -GEN.SPA.Q2.5.Intercept)
colnames(X)
X<-dplyr::select(Q, contains("Q2.5."))
colnames(X)
X<-rownames_to_column(X,"GEN.SPA")
colnames(X)<-c("GEN.SPA","Intercept","Phase","Light:Flo","Light:Leaf","Chill:Flo","Chill:Leaf","Force:Flo","Force:Leaf","LightS","Chill","Force")
#X<-dplyr::select(X, -GEN.SPA.Q2.5.Intercept)
colnames(X)
X<-gather(X,"predictor","CIlow",2:12)
###high
XX<-dplyr::select(Q, contains("Q97.5."))
colnames(XX)
#XX<-dplyr::select(XX, -GEN.SPA.Q97.5.Intercept)
ncol(XX)
XX<-rownames_to_column(XX,"GEN.SPA")
XX<-rownames_to_column(XX,"GEN.SPA")
colnames(XX)<-c("GEN.SPA","Intercept"," Phase","Light:Flo","Light:Leaf","Chill:Flo","Chill:Leaf","Force:Flo","Force:Leaf","LightS","Chill","Force")
XX<-gather(XX,"predictor","CIhigh",2:12)
XXX<-full_join(X,XX)
Z<-full_join(XXX,R)
pd<- position_dodgev(height = 1)
Z$class<-NA
Z$class<-ifelse(Z$predictor=="Light:Flo",0,2)
Z$class<-ifelse(Z$predictor=="Light:Leaf",0,Z$class)
Z$class<-ifelse(Z$predictor=="Chill:Leaf",1,Z$class)
Z$class<-ifelse(Z$predictor=="Chill:Flo",1,Z$class)
Z$class<-ifelse(Z$predictor=="Phase",4,Z$class)
ggplot(Z,aes(effect,predictor))+geom_point(aes(color=as.character(class)))+geom_errorbarh(aes(color=as.character(class),xmin=(CIlow), xmax=(CIhigh)), position=pd, size=.5, height =0, width=0)+geom_vline(aes(xintercept=0))+ggtitle("Model M1b:")+facet_wrap(~GEN.SPA)
ggplot(Z,aes(effect,predictor))+geom_point(aes(color=as.character(class)))+geom_errorbarh(aes(color=as.character(class),xmin=(CIlow), xmax=(CIhigh)), position=pd, size=.5, height =0, width=0)+geom_vline(aes(xintercept=0))+ggtitle("Model M1b:")+facet_wrap(~GEN.SPA)
Z$class<-NA
Z$class<-ifelse(Z$predictor=="Light:Flo",0,2)
Z$class<-ifelse(Z$predictor=="Light:Leaf",0,Z$class)
Z$class<-ifelse(Z$predictor=="LightS",0,Z$class)
View(Z)
Z$class<-ifelse(Z$predictor=="Light:Flo",0,2)
Z$class<-ifelse(Z$predictor=="Light:Leaf",0,Z$class)
Z$class<-ifelse(Z$predictor=="LightS",0,Z$class)
Z$class<-ifelse(Z$predictor=="Chill:Leaf",1,Z$class)
Z$class<-ifelse(Z$predictor=="Chill:Flo",1,Z$class)
Z$class<-ifelse(Z$predictor=="Chil",1,Z$class)
Z$class<-ifelse(Z$predictor=="Chill",1,Z$class)
Z$class<-ifelse(Z$predictor=="Force:Leaf",3,Z$class)
Z$class<-ifelse(Z$predictor=="Force:Flo",3,Z$class)
Z$class<-ifelse(Z$predictor=="Force",3,Z$class)
Z$class<-ifelse(Z$predictor=="Phase",4,Z$class)
ggplot(Z,aes(effect,predictor))+geom_point(aes(color=as.character(class)))+geom_errorbarh(aes(color=as.character(class),xmin=(CIlow), xmax=(CIhigh)), position=pd, size=.5, height =0, width=0)+geom_vline(aes(xintercept=0))+ggtitle("Model M1b:")+facet_wrap(~GEN.SPA)
View(d)
View(d)
###### This model has 13 divergent transistions and no real effects in the predictors.
#Try running it numerically
colnames(d)
prior<-get_prior(DOY | cens(surv) ~ phase+photoperiod+chilldays+temp_day+photoperiod:phase+chilldays:phase+temp_day:phase,
data = d, family = weibull)
mod.fe<- brm(DOY | cens(surv) ~ phase+photoperiod+chilldays+temp_day+photoperiod:phase+chilldays:phase+temp_day:phase+(1+phase+photoperiod+chilldays+temp_day+photoperiod:phase+chilldays:phase+temp_day:phase|GEN.SPA),
data = d, family = weibull,inits = "0",
iter= 3000,
warmup = 2000,
prior = prior2)
mod.fe<- brm(DOY | cens(surv) ~ phase+photoperiod+chilldays+temp_day+photoperiod:phase+chilldays:phase+temp_day:phase+(1+phase+photoperiod+chilldays+temp_day+photoperiod:phase+chilldays:phase+temp_day:phase|GEN.SPA),
data = d, family = weibull,inits = "0",
iter= 3000,
warmup = 2000,
prior = prior)
summary(mod.fe)
#plot this model
Q<-as.data.frame(coef(mod.fe))
colnames(Q)
R<-dplyr::select(Q,contains("Estimate"))
R<-rownames_to_column(R,"GEN.SPA")
colnames(R)
R<-dplyr::select(R,-GEN.SPA.Estimate.Intercept)
colnames(R)<-c("GEN.SPA","Intercept","Phase","Light:Flo","Light:Leaf","Chill:Flo","Chill:Leaf","Force:Flo","Force:Leaf","LightS","Chill","Force")
R<-gather(R,"predictor","effect",2:12)
ggplot(R, aes(effect,predictor))+geom_point()+geom_vline(aes(xintercept=0,color="red"))+facet_wrap(~GEN.SPA)
X<-dplyr::select(Q, contains("Q2.5."))
colnames(X)
#X<-dplyr::select(X, -GEN.SPA.Q2.5.Intercept)
colnames(X)
X<-rownames_to_column(X,"GEN.SPA")
colnames(X)<-c("GEN.SPA","Intercept","Phase","Light:Flo","Light:Leaf","Chill:Flo","Chill:Leaf","Force:Flo","Force:Leaf","LightS","Chill","Force")
X<-gather(X,"predictor","CIlow",2:12)
###high
XX<-dplyr::select(Q, contains("Q97.5."))
colnames(XX)
#XX<-dplyr::select(XX, -GEN.SPA.Q97.5.Intercept)
ncol(XX)
XX<-rownames_to_column(XX,"GEN.SPA")
colnames(XX)<-c("GEN.SPA","Intercept"," Phase","Light:Flo","Light:Leaf","Chill:Flo","Chill:Leaf","Force:Flo","Force:Leaf","LightS","Chill","Force")
XX<-gather(XX,"predictor","CIhigh",2:12)
XXX<-full_join(X,XX)
Z<-full_join(XXX,R)
pd<- position_dodgev(height = 1)
Z$class<-NA
Z$class<-ifelse(Z$predictor=="Light:Flo",0,2)
Z$class<-ifelse(Z$predictor=="Light:Leaf",0,Z$class)
Z$class<-ifelse(Z$predictor=="LightS",0,Z$class)
Z$class<-ifelse(Z$predictor=="Chill:Leaf",1,Z$class)
Z$class<-ifelse(Z$predictor=="Chill:Flo",1,Z$class)
Z$class<-ifelse(Z$predictor=="Chill",1,Z$class)
Z$class<-ifelse(Z$predictor=="Force:Leaf",3,Z$class)
Z$class<-ifelse(Z$predictor=="Force:Flo",3,Z$class)
Z$class<-ifelse(Z$predictor=="Force",3,Z$class)
#plot this model
Q<-as.data.frame(coef(mod.fe))
colnames(Q)
R<-dplyr::select(Q,contains("Estimate"))
R<-rownames_to_column(R,"GEN.SPA")
colnames(R)
R<-dplyr::select(R,-GEN.SPA.Estimate.Intercept)
colnames(R)<-c("GEN.SPA","Intercept","Phase","Light:Flo","Light:Leaf","Chill:Flo","Chill:Leaf","Force:Flo","Force:Leaf","LightS","Chill","Force")
colnames(R)
#plot this model
Q<-as.data.frame(coef(mod.fe))
colnames(Q)
R<-dplyr::select(Q,contains("Estimate"))
R<-rownames_to_column(R,"GEN.SPA")
#R<-dplyr::select(R,-GEN.SPA.Estimate.Intercept)
colnames(R)<-c("GEN.SPA","Intercept","Phase","Light:Flo","Light:Leaf","Chill:Flo","Chill:Leaf","Force:Flo","Force:Leaf","LightS","Chill","Force")
summary(mod.fe)
ggplot(Z2,aes(effect,predictor))+geom_point(aes(color=as.character(class)))+geom_errorbarh(aes(color=as.character(class),xmin=(CIlow), xmax=(CIhigh)), position=pd, size=.5, height =0, width=0)+geom_vline(aes(xintercept=0))+ggtitle("Model M1b")+facet_wrap(~GEN.SPA)
coef(mod.fe)
d.flo<-filter(d,phase=="flo_day")
d.leaf<-filter(d,phase=="leaf_day")
#####flower and leaves seperately
prior<-get_prior(DOY | cens(surv) ~ photoperiod+chilldays+temp_day,
data = d.flo, family = weibull)
mod.flo<- brm(DOY | cens(surv) ~ photoperiod+chilldays+temp_day+(1+photoperiod+chilldays+temp_day|GEN.SPA),
fds
)
mod.flo<- brm(DOY | cens(surv) ~ photoperiod+chilldays+temp_day+(1+photoperiod+chilldays+temp_day|GEN.SPA),
data = d.flo, family = weibull,inits = "0",
iter= 3000,
warmup = 2000,
prior = prior)
summary(mod.flo)
coef(mod.flo)
prior<-get_prior(DOY | cens(surv) ~ photoperiod+chilldays+temp_day,
data = d.leaf, family = weibull)
mod.leaf<- brm(DOY | cens(surv) ~ photoperiod+chilldays+temp_day+(1+photoperiod+chilldays+temp_day|GEN.SPA),
data = d.leaf, family = weibull,inits = "0",
iter= 3000,
warmup = 2000,
prior = prior)
coef(mod.leaf)
L<-as.data.frame(coef(mod.leaf))
Fl<-as.data.frame(coef(mod.flo))
L$class<-"leafout"
Fl$class<-"flowering"
output<-cbind(L,Fl)
View(output)
output<-rbind(L,Fl)
View(output)
View(output)
output<-gather(output,2:20)
View(output)
output<-rbind(L,Fl)
output<-rownames_to_column(output,"GEN.SPA")
View(output)
output<-rbind(L,Fl)
estimate<-filter(output, contains("Estimate")
estimate<-filter(output, contains("Estimate"))
estimate<-filter(output, contains("Estimate"))
View(output)
estimate<-filter(output, contains(".Estimate."))
estimate<-filter(output, contains("Q2.5"))
estimate<-dplyr::select(output, contains("Estimate"))
View(estimate)
estimate<-gather(estimate,"estimate","predictor",1:4)
View(estimate)
estimate<-dplyr::select(output, contains("Estimate"))
estimate<-gather(estimate,,"predictor","estimate",1:4)
output<-rownames_to_column(output,"GEN.SPA")
estimate<-dplyr::select(output, contains("Estimate"))
estimate<-gather(estimate,,"predictor","estimate",1:4)
estimate<-gather(estimate,"predictor","estimate",1:4)
output<-rownames_to_column(output,"GEN.SPA")
estimate<-dplyr::select(output, contains("Estimate"))
estimate<-gather(estimate,"predictor","estimate",1:4)
output<-rbind(L,Fl)
estimate<-dplyr::select(output, contains("Estimate"))
estimate<-gather(estimate,"predictor","estimate",1:4)
output<-rbind(L,Fl)
output<-rownames_to_column(output,"GEN.SPA")
estimate<-dplyr::select(output, contains("Estimate"))
output<-rbind(L,Fl)
estimate<-dplyr::select(output, contains("Estimate"))
estimate<-rownames_to_column(estimate,"GEN.SPA")
estimate<-gather(estimate,"predictor","estimate",2:5)
###low
low<-dplyr::select(output, contains("Q2.5"))
low<-rownames_to_column(low,"GEN.SPA")
low<-gather(estimate,"predictor","low",2:5)
View(low)
low<-gather(low,"predictor","low",2:5)
high<-dplyr::select(output, contains("Q97.5"))
high<-rownames_to_column(high,"GEN.SPA")
high<-gather(high,"predictor","high",2:5)
View(high)
output<-rbind(L,Fl)
estimate<-dplyr::select(output, contains(c("Estimate","class"))
estimate<-dplyr::select(output, contains(c("Estimate","class")))
estimate<-dplyr::select(output, contains(c("Estimate","class")))
estimate<-dplyr::select(output, contains(c("Estimate","class"))
estimate<-dplyr::select(output, contains(c("Estimate","class")))
estimate<-dplyr::select(output, contains(c("Estimate","class")))
estimate<-dplyr::select(output, contains(c("Estimate"))
output<-rbind(L,Fl)
output<-rbind(L,Fl)
View(output)
estimate<-dplyr::select(output, contains(c("Estimate"))
estimate<-gather(estimate,"predictor","estimate",2:5)
###low
low<-dplyr::select(output, contains("Q2.5"))
low<-rownames_to_column(low,"GEN.SPA")
low<-gather(low,"predictor","low",2:5)
high<-dplyr::select(output, contains("Q97.5"))
high<-rownames_to_column(high,"GEN.SPA")
high<-gather(high,"predictor","high",2:5)
out<-rbind(high,low,estimate)
out<-cbind(high,low,estimate)
View(out)
out<-rbind(high,low,estimate)
colnames(estimate)
colnames(high)
out<-left_join(high,low,estimate)
View(out)
out<-left_join(high,low,estimate,by"predictor")
out<-left_join(high,low,estimate,by="predictor")
View(out)
output<-rbind(L,Fl)
View(output)
View(output)
L<-as.data.frame(coef(mod.leaf))
Fl<-as.data.frame(coef(mod.flo))
L$class<-"leafout"
Fl$class<-"flowering"
View(L)
launch_shinystan(mod.leaf)
plot(mod.leaf)
summary(mod.leaf)
summary(mod.flo)
summary(mod.leaf)
summary(mod.flo)
L$class<-"leafout"
Fl$class<-"flowering"
View(L)
estimate<-dplyr::select(L, contains(c("Estimate"))
estimate<-dplyr::select(L, contains(c("Estimate"))
estimate<-rownames_to_column(L,"GEN.SPA"))
estimate<-dplyr::select(L, contains(c("Estimate"))
estimate<-rownames_to_column(L,"GEN.SPA"))
estimate<-dplyr::select(L, contains(c("Estimate"))
estimate<-rownames_to_column(L,"GEN.SPA"))
estimate<-dplyr::select(L, contains(c("Estimate")
estimate<-rownames_to_column(L,"GEN.SPA"))
estimate<-gather(L,"predictor","estimate",2:4))
estimate<-dplyr::select(L, contains("Estimate")
estimate<-rownames_to_column(L,"GEN.SPA"))
estimate<-dplyr::select(L, contains("Estimate"))
estimate<-rownames_to_column(L,"GEN.SPA")
estimate<-dplyr::select(L, contains("Estimate"))
View(estimate)
estimate<-rownames_to_column(L,"GEN.SPA")
estimate<-gather(L,"predictor","estimate",2:4)
View(estimate)
leaf<-dplyr::select(L, contains("Estimate"))
leaf<-rownames_to_column(leaf,"GEN.SPA")
leaf<-gather(leaf,"predictor","estimate",2:4)
View(leaf)
leaf<-dplyr::select(L, contains("Estimate"))
leaf<-rownames_to_column(leaf,"GEN.SPA")
leaf<-gather(leaf,"predictor","estimate",2:5)
View(leaf)
leaf<-dplyr::select(L, contains("Estimate"))
leaf<-rownames_to_column(leaf,"GEN.SPA")
colnames(leaf)<-c("GEN.SPA","Intercept","photo","chill","force")
leaf<-gather(leaf,"predictor","estimate",2:5)
colnames(leaf)<-c("GEN.SPA","Intercept","photo","chill","force")
###low
low<-dplyr::select(L, contains("Q2.5"))
low<-rownames_to_column(low,"GEN.SPA")
View(low)
colnames(leaf)<-c("GEN.SPA","Intercept","photo","chill","force")
colnames(low)<-c("GEN.SPA","Intercept","photo","chill","force")
low<-gather(low,"predictor","low",2:5)
View(low)
high<-dplyr::select(L, contains("Q97.5"))
high<-rownames_to_column(high,"GEN.SPA")
high<-gather(high,"predictor","high",2:5)
lef_join(leaf,low)
left_join(leaf,low)
X<-left_join(leaf,low)
XX<-left_join(X,high)
View(XX)
high<-dplyr::select(L, contains("Q97.5"))
high<-rownames_to_column(high,"GEN.SPA")
high<-gather(high,"predictor","high",2:5)
X<-left_join(leaf,low)
XX<-left_join(X,high)
View(XX)
high<-dplyr::select(L, contains("Q97.5"))
high<-rownames_to_column(high,"GEN.SPA")
high<-gather(high,"predictor","high",2:5)
high<-dplyr::select(L, contains("Q97.5"))
high<-rownames_to_column(high,"GEN.SPA")
colnames(high)<-c("GEN.SPA","Intercept","photo","chill","force")
high<-gather(high,"predictor","high",2:5)
X<-left_join(leaf,low)
XX<-left_join(X,high)
View(XX)
XX$class<-"leaf"
###flower output
flower<-dplyr::select(F, contains("Estimate"))
###flower output
flower<-dplyr::select(Fl, contains("Estimate"))
flower<-rownames_to_column(flower,"GEN.SPA")
colnames(flower)<-c("GEN.SPA","Intercept","photo","chill","force")
flower<-gather(flower,"predictor","estimate",2:5)
low<-dplyr::select(Fl, contains("Q2.5"))
low<-rownames_to_column(low,"GEN.SPA")
colnames(low)<-c("GEN.SPA","Intercept","photo","chill","force")
low<-gather(low,"predictor","low",2:5)
high<-dplyr::select(Fl, contains("Q97.5"))
high<-rownames_to_column(high,"GEN.SPA")
colnames(high)<-c("GEN.SPA","Intercept","photo","chill","force")
high<-gather(high,"predictor","high",2:5)
Y<-left_join(Fl,low)
Y<-left_join(flower,low)
YY<-left_join(Y,high)
YY$class<-"flower"
View(XX)
plotdat<-cbind(YY,XX)
View(plotdat)
plotdat<-rbind(YY,XX)
View(plotdat)
ggplot(plotdat,aes(predictor,estimate))+geom_point(aes(color=class))
ggplot(plotdat,aes(estimate,predictor))+geom_point(aes(color=class))
ggplot(plotdat,aes(estimate,predictor))+geom_point(aes(color=class))+facet_wrap(~GEN.SPA)
plotdat<-filter(plotdat,predictor!="intercept")
View(plotdat)
plotdat<-filter(plotdat,predictor!="Intercept")
ggplot(plotdat,aes(estimate,predictor))+geom_point(aes(color=class))+facet_wrap(~GEN.SPA)
ggplot(plotdat,aes(estimate,predictor))+geom_point(aes(color=class))+facet_wrap(~GEN.SPA)+geom_vline(x=0)
ggplot(plotdat,aes(estimate,predictor))+geom_point(aes(color=class))+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0))
ggplot(R, aes(effect,predictor))+geom_point()+geom_vline(aes(xintercept=0,color="red"))+geom_errorbarh(aes(,xmin=(low), xmax=(high))+facet_wrap(~GEN.SPA)
ggplot(R, aes(effect,predictor))+geom_point()+geom_vline(aes(xintercept=0,color="red"))+geom_errorbarh(aes(,xmin=(low), xmax=(high)))+facet_wrap(~GEN.SPA)
ggplot(R, aes(effect,predictor))+geom_point()+geom_vline(aes(xintercept=0,color="red"))+geom_errorbarh(aes(,xmin=(low), xmax=(high)))+facet_wrap(~GEN.SPA)
ggplot(plotdat,aes(estimate,predictor))+geom_point(aes(color=class))+geom_errorbarh(aes(,xmin=(low), xmax=(high))+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0))
ggplot(plotdat,aes(estimate,predictor))+geom_point(aes(color=class))+geom_errorbarh(aes(,xmin=(low), xmax=(high)))+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0))
ggplot(plotdat,aes(estimate,predictor))+geom_point(aes(color=class))+geom_errorbarh(aes(,xmin=(low), xmax=(high)))+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0))
ggplot(plotdat,aes(estimate,predictor))+geom_point(aes(color=class))+geom_errorbarh(aes(,xmin=(low), xmax=(high)),color=class)+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0))
ggplot(plotdat,aes(estimate,predictor))+geom_point(aes(color=class))+geom_errorbarh(aes(xmin=(low), xmax=(high)),color=class)+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0))
ggplot(plotdat,aes(estimate,predictor))+geom_point(aes(color=class))+geom_errorbarh(aes(xmin=(low), xmax=(high),color=class))+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0))
