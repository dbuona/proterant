plot(y~time, data=test.dat)
chilltreat <- c(0,1,2) # We need to use this in the equation! Just the way you do in Stan
# Now, if we are starting simple, with just two levels of chill, we may need only one value of d, t50, beta ? Leaving it for now as I am not sure what this is doing...
d.mus <- 4
t50s <- 20
betas <- 10
chill.d <- 0
chill.t50 <- -5
chill.beta <- -1
sigma_y <- 0.1
repz=10
##same parements in all functions
time <- seq(0,24,by=3)
d.low <- 0
d.up <- 20
df <- data.frame(time=numeric(), y=numeric(), ID=numeric(), chilltreat=numeric())
for(i in c(1:length(chilltreat))){ # i <- 1
chilltreathere <- chilltreat[i]
for(j in c(1:length(d.mus))){ # j <- 1
d.muhere <- d.mus[j]
t50here <- t50s[j]
betahere <- betas[j]
dfhere <- data.frame(time=numeric(), y=numeric(), ID=numeric(), chilltreat=numeric())
# This next equation needs to more closely match your stan code.
# Here's the critcial bits of the stan model
# y_hat[i] =(b_chill_d*chill[i]+a_d)/
# (1+(((t[i])/(b_chill_t50*chill[i]+a_t50))^(b_chill_beta*chill[i]+a_beta)))
# Also note: The only sigma you probably need in your Stan model is this one:
# Y ~ normal(y_hat, sigma)
# But you had three more below ... need to adjust .... here's my basic idea of how it should work
for(k in 1:repz){
y <- c()
for (l in c(1:length(time))){
yhere <- (chill.d*chilltreat[i]+d.muhere)/
(1+((time[l]/(chill.t50*chilltreat[i]+t50here))^
(chill.beta*chilltreat[i]*betahere)))
y <- rbind(y, yhere)
}
# I add in sigma_y here...
dfrepadd <- data.frame(time=time, y=rnorm(length(y), y, sigma_y), ID=rep(1:9, length(y)),
chilltreat=chilltreathere)
dfhere <- rbind(dfhere, dfrepadd)
}
df <- rbind(df, dfhere)
}
}
test.dat <- df
test.dat$y <- round(test.dat$y)
plot(y~time, data=test.dat)
?rep()
96+50+1447+108+300+500
96+50+1447+108+300+500+400
dat <- data.frame(daytime = as.POSIXct(sprintf("%02i:%02i", 1:23, 2 * (1:23)), format = "%H:%M"),
y = 1:23)
ggplot(dat, aes(daytime, y)) + geom_point() +
scale_x_datetime(labels = function(x) format(x, format = "%H:%M"))
Library(ggplot)
library(ggplot)
library(ggplot2)
dat <- data.frame(daytime = as.POSIXct(sprintf("%02i:%02i", 1:23, 2 * (1:23)), format = "%H:%M"),
y = 1:23)
ggplot(dat, aes(daytime, y)) + geom_point() +
scale_x_datetime(labels = function(x) format(x, format = "%H:%M"))
ggplot(dat, aes(daytime, y)) + geom_point()
ggplot(dat, aes(daytime, y)) + geom_point() +
scale_x_datetime(labels = function(x) format(x, format = "%H:%M"))
ggplot(dat, aes(daytime, y)) + geom_point()
ggplot(dat, aes(daytime, y)) + geom_point() +
scale_x_datetime(labels = function(x) format(x, format = "%H:%M"))
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
library(ggplot2)
library(ggpubr)
library(gridExtra)
library(grid)
library(gtable)
library(ggthemes)
GDH<-c(376,408,504,472,384,480,480,384)
photo<-c(11,15,15,11,11,11,15,15)
periodicities<-c("coupled","coupled","coupled","coupled","uncoupled","uncoupled","uncoupled","uncoupled")
dat<-data.frame(GDH,photo,periodicities)
x<-c(10.8,10.8,15.2,15.2)
y<-c(382,482,382,482)
xy<-data.frame(x,y)
ploty<-ggplot(dat,(aes(x=photo)))+geom_point(aes(y=GDH,color=periodicities),size=4)+xlim(8,18)+ylim(350,520)+theme_base()+geom_polygon(aes(x=photo,y=GDH,color=periodicities,fill=periodicities),alpha=0.5) +scale_color_manual(values=c("rosybrown","gray10"))+scale_fill_manual(values=c("rosybrown","gray10"))
plotty2<-ploty+geom_rect(dat,mapping=aes(xmin=10.9,xmax=15.1,ymin=382,ymax=482),fill=NA,color="black",size=0.2,linetype="dashed")
plotty2<-plotty2+geom_point(xy,mapping=aes(x,y),shape=8,size=4)+theme(legend.position = "left")
plotty2
xx<-c(1:24)
yy<-rep(25,24)
zz<-rep(15,24)
aa<-c(30,30,30,30,30,30,30,30,30,30,20,20,20,20,20,20,20,20,20,20,20,20,20,20)
bb<-c(30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,20,20,20,20,20,20,20,20)
cc<-c(20,20,20,20,20,20,20,20,20,20,10,10,10,10,10,10,10,10,10,10,10,10,10,10)
dd<-c(20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,10,10,10,10,10,10,10,10)
ee<-c(30,30,30,30,30,30,30,30,30,30,30,30,20,20,20,20,20,20,20,20,20,20,20,20)
ff<-c(20,20,20,20,20,20,20,20,20,20,20,20,10,10,10,10,10,10,10,10,10,10,10,10)
dat.simple<-data.frame(xx,yy,zz,aa,bb,cc,dd,ee,ff)
a<-ggplot(dat.simple,aes(xx,yy))+geom_rect(dat.simple,mapping=aes(xmin=10,xmax=24,ymin=0,ymax=30),fill="gray")+theme_base()+geom_line(aes(xx,yy),color="red")+scale_x_continuous(breaks=c(4,8,12,16,20,24))+scale_y_continuous(breaks=c(0,5,10,15,20,25,30))+ labs(y = "temperature",x = "hours")+ggtitle("warm/short")+theme(plot.title=element_text( hjust=0.5, vjust=0.5))
b<-ggplot(dat.simple,aes(xx,yy))+geom_rect(dat.simple,mapping=aes(xmin=16,xmax=24,ymin=0,ymax=30),fill="gray")+theme_base()+geom_line(aes(xx,yy),color="red")+scale_x_continuous(breaks=c(4,8,12,16,20,24))+scale_y_continuous(breaks=c(0,5,10,15,20,25,30))+ labs(y = "temperature",x = "hours")+ggtitle("warm/long")+theme(plot.title=element_text( hjust=0.5, vjust=0.5))
c<-ggplot(dat.simple,aes(xx,yy))+geom_rect(dat.simple,mapping=aes(xmin=10,xmax=24,ymin=0,ymax=30),fill="gray")+theme_base()+geom_line(aes(xx,zz),color="blue")+scale_x_continuous(breaks=c(4,8,12,16,20,24))+scale_y_continuous(breaks=c(0,5,10,15,20,25,30))+ labs(y = "temperature",x = "hours")+ggtitle("cool/short")+theme(plot.title=element_text( hjust=0.5, vjust=0.5))
d<-ggplot(dat.simple,aes(xx,yy))+geom_rect(dat.simple,mapping=aes(xmin=16,xmax=24,ymin=0,ymax=30),fill="gray")+theme_base()+geom_line(aes(xx,zz),color="blue")+scale_x_continuous(breaks=c(4,8,12,16,20,24))+scale_y_continuous(breaks=c(0,5,10,15,20,25,30))+ labs(y = "temperature",x = "hours")+ggtitle("cool/long")+theme(plot.title=element_text( hjust=0.5, vjust=0.5))
flat<-ggarrange(a, b,c, d, ncol=2, nrow=2, common.legend = TRUE, legend="bottom")
?ggarrange()
aaa<-ggplot(dat.simple,aes(xx,aa))+geom_rect(dat.simple,mapping=aes(xmin=10,xmax=24,ymin=0,ymax=30),fill="gray")+theme_base()+geom_line(aes(xx,aa),color="red")+scale_x_continuous(breaks=c(4,8,12,16,20,24))+scale_y_continuous(breaks=c(0,5,10,15,20,25,30))+ labs(y = "temperature",x = "hours")+ggtitle("warm/short")+theme(plot.title=element_text( hjust=0.5, vjust=0.5))
bbb<-ggplot(dat.simple,aes(xx,bb))+geom_rect(dat.simple,mapping=aes(xmin=16,xmax=24,ymin=0,ymax=30),fill="gray")+theme_base()+geom_line(aes(xx,bb),color="red")+scale_x_continuous(breaks=c(4,8,12,16,20,24))+scale_y_continuous(breaks=c(0,5,10,15,20,25,30))+ labs(y = "temperature",x = "hours")+ggtitle("warm/long")+theme(plot.title=element_text( hjust=0.5, vjust=0.5))
ccc<-ggplot(dat.simple,aes(xx,cc))+geom_rect(dat.simple,mapping=aes(xmin=10,xmax=24,ymin=0,ymax=30),fill="gray")+theme_base()+geom_line(aes(xx,cc),color="blue")+scale_x_continuous(breaks=c(4,8,12,16,20,24))+scale_y_continuous(breaks=c(0,5,10,15,20,25,30))+ labs(y = "temperature",x = "hours")+ggtitle("cool/short")+theme(plot.title=element_text( hjust=0.5, vjust=0.5))
ddd<-ggplot(dat.simple,aes(xx,dd))+geom_rect(dat.simple,mapping=aes(xmin=16,xmax=24,ymin=0,ymax=30),fill="gray")+theme_base()+geom_line(aes(xx,dd),color="blue")+scale_x_continuous(breaks=c(4,8,12,16,20,24))+scale_y_continuous(breaks=c(0,5,10,15,20,25,30))+ labs(y = "temperature",x = "hours")+ggtitle("cool/long")+theme(plot.title=element_text( hjust=0.5, vjust=0.5))
covarying<-ggarrange(aaa, bbb,ccc, ddd, ncol=2, nrow=2, common.legend = TRUE, legend="bottom")
aaaa<-ggplot(dat.simple,aes(xx,ee))+geom_rect(dat.simple,mapping=aes(xmin=10,xmax=24,ymin=0,ymax=30),fill="gray")+theme_base()+geom_line(aes(xx,ee),color="red")+scale_x_continuous(breaks=c(4,8,12,16,20,24))+scale_y_continuous(breaks=c(0,5,10,15,20,25,30))+ labs(y = "temperature",x = "hours")+ggtitle("warm/short")+theme(plot.title=element_text( hjust=0.5, vjust=0.5))
bbbb<-ggplot(dat.simple,aes(xx,ee))+geom_rect(dat.simple,mapping=aes(xmin=16,xmax=24,ymin=0,ymax=30),fill="gray")+theme_base()+geom_line(aes(xx,ee),color="red")+scale_x_continuous(breaks=c(4,8,12,16,20,24))+scale_y_continuous(breaks=c(0,5,10,15,20,25,30))+ labs(y = "temperature",x = "hours")+ggtitle("warm/long")+theme(plot.title=element_text( hjust=0.5, vjust=0.5))
cccc<-ggplot(dat.simple,aes(xx,ff))+geom_rect(dat.simple,mapping=aes(xmin=10,xmax=24,ymin=0,ymax=30),fill="gray")+theme_base()+geom_line(aes(xx,ff),color="blue")+scale_x_continuous(breaks=c(4,8,12,16,20,24))+scale_y_continuous(breaks=c(0,5,10,15,20,25,30))+ labs(y = "temperature",x = "hours")+ggtitle("cool/short")+theme(plot.title=element_text( hjust=0.5, vjust=0.5))
dddd<-ggplot(dat.simple,aes(xx,ff))+geom_rect(dat.simple,mapping=aes(xmin=16,xmax=24,ymin=0,ymax=30),fill="gray")+theme_base()+geom_line(aes(xx,ff),color="blue")+scale_x_continuous(breaks=c(4,8,12,16,20,24))+scale_y_continuous(breaks=c(0,5,10,15,20,25,30))+ labs(y = "temperature",x = "hours")+ggtitle("cool/long")+theme(plot.title=element_text( hjust=0.5, vjust=0.5))
noncovarying<-ggarrange(aaaa, bbbb,cccc, dddd, ncol=2, nrow=2, common.legend = TRUE, legend="bottom")
grid.arrange(flat,covarying,noncovarying,ncol=3)
grid.rect(width = .5, height = .5, gp = gpar(lwd = 2, col = "black", fill = NA,hjust="left",vjust="top"))
grid.arrange(flat,covarying,noncovarying,ncol=3)
View(dat.simple)
View(dat.simple)
xy
dat
########
temp<-c(12,12,12,12)
light<-c(11,11,15,15)
########
temp<-c(12,12,12,12)
light<-c(11,11,15,15)
treat<-c("warm/short","cool/short","warm/long","warm/long")
dawn<-data.frame(temp,light,treat)
dawn$dawn.offset$(dan$temp-dawn$light)
dawn$dawn.offset$dan$temp-dawn$light
dawn$dawn.offset<-dan$temp-dawn$light
dawn$dawn.offset<-dawn$temp-dawn$light
View(dawn)
require(rstan)
require(geiger)
require(MCMCglmm)
# load data
data(geospiza)
dat <- geospiza$geospiza.data
View(dat)
# create fake sample of trees
tr <- drop.tip(geospiza$geospiza.tree, 'olivacea')
trees <- vector('list', 15)
for(i in 1:15) trees[[i]] <- tr
# get the inverse of the phylovcv, order all to match data
invA <- lapply(trees, function(x) solve(vcv.phylo(x))[row.names(dat), row.names(dat)])
stdat <- list(
N=dim(dat)[1],
y=dat$wingL,
x=dat$tarsusL,
invA=invA,
Ntree=length(invA), #number of trees
p=rep(1/length(invA), length(invA)) #probability of sampling each tree
)
phymodel <- "
data {
int<lower=0> N; //species
int<lower=0> Ntree; //number of trees
vector[N] y;
real x[N];
matrix[N,N] invA[Ntree]; //array of inverse of phylovcv?
}
parameters {
real alpha; //intercept
real beta; //slope
real<lower=0> tau; // scaling factor
simplex[Ntree] theta; //mixture sampling?
}
transformed parameters{
real sigma; //regression error
sigma <- 1/sqrt(tau);
}
model {
vector[N] mu; //multivariate normal mean
//priors
alpha ~ normal(0, 10);
beta ~ normal(0, 10);
sigma ~ uniform(0,1000);
tau ~ gamma(1,1);
theta ~ uniform(0,1);
for(n in 1:N){
mu[n] <- alpha+beta*x[n];
}
y ~ multi_normal_prec(mu, tau*invA[Ntree]);
}
"
phystan = stan(model_name="phylogenetic regression", model_code = phymodel, data=stdat , iter = 1000, chains = 2)
stdat <- list(
N=dim(dat)[1],
y=dat$wingL,
x=dat$tarsusL,
invA=invA,
Ntree=length(invA), #number of trees
p=rep(1/length(invA), length(invA)) #probability of sampling each tree
)
stdat <- list(
N=dim(dat)[1],
y=dat$wingL,
x=dat$tarsusL,
invA=invA,
Ntree=length(invA), #number of trees
p=rep(1/length(invA), length(invA)) #probability of sampling each tree
)
stdat <- list(
N=dim(dat)[1],
y=dat$wingL,
x=dat$tarsusL,
invA=invA,
Ntree=length(invA), #number of trees
p=rep(1/length(invA), length(invA)) #probability of sampling each tree
)
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
library(ggplot2)
library(tidyverse)
library("brms")
library(rstan)
library(arm)
library(rstanarm)
library(tibble)
library(ggstance)
library(survival)
library(sur)
library(survminer)
library(ggthemes)
library("Hmisc")
setwd("~/Documents/git/proterant/FLOBUDS")
dat<-read.csv("flobudsdata.use.csv",header = TRUE)
dat$Light<-ifelse(dat$Light=="S",0,1)
dat$Force<-ifelse(dat$Force=="C",0,1)
dat<-filter(dat, !GEN.SPA %in% c("AME.SPP","BET.SPP"))
bb.int<-get_prior(budburst.9.~Chill+Light+Force+Chill:Light+Chill:Force+Force:Light,data = dat, family = gaussian())
mod.bb.int<-brm(budburst.9. ~ Chill+Light+Force+Chill:Light+Chill:Force+Force:Light+(Chill+Light+Force+Chill:Light+Chill:Force+Force:Light|GEN.SPA),
data = dat, family = gaussian(),
iter= 4000,
warmup = 3000)
summary(mod.bb.int)
flo.int<-get_prior(flo_day~Chill+Light+Force+Chill:Light+Chill:Force+Force:Light,data = dat, family = gaussian())
mod.flo.int<-brm(flo_day~ Chill+Light+Force+Chill:Light+Chill:Force+Force:Light+(Chill+Light+Force+Chill:Light+Chill:Force+Force:Light|GEN.SPA),
data = dat, family = gaussian(),
iter= 4000,
warmup = 3200)
summary(mod.flo.int)
extract_coefs<-function(x){rownames_to_column(as.data.frame(fixef(x, summary=TRUE,probs=c(0.10,.25,.75,0.90))),"Predictor")
}
extract_ranef<-function(x){tibble::rownames_to_column(as.data.frame(ranef(x, summary=TRUE,probs=c(0.10,.25,.75,0.90))),"GEN.SPA")
}
flowy<-extract_coefs(mod.flo.int)
leafy<-extract_coefs(mod.bb.int)
leafy$phase<-"foliate"
flowy$phase<-"floral"
bothy<-rbind(flowy,leafy)
bothy<-filter(bothy,Predictor!="Intercept")
bothy$Predictor[bothy$Predictor=="Force"]<-"main:Force"
bothy$Predictor[bothy$Predictor=="Light"]<-"main:Light"
bothy$Predictor[bothy$Predictor=="Chill"]<-"main:Chill"
bothy$Predictor[bothy$Predictor=="Chill:Light"]<-"int:Chill:Light"
bothy$Predictor[bothy$Predictor=="Light:Force"]<-"int:Light:Force"
bothy$Predictor[bothy$Predictor=="Chill:Force"]<-"int:Chill:Force"
jpeg("Plots/flo_buds_figures/fobb_maineffects.jpeg")
pd2=position_dodgev(height=0.3)
ggplot(bothy,aes(Estimate,Predictor))+geom_point(aes(color=phase,shape=phase),position=pd2, size=4)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+geom_vline(aes(xintercept=0),color="black")+theme_base()+scale_color_manual(values=c("darkgrey", "black"))+ggtitle("Main effects Flower vs. budburst")
dev.off()
##random effects
ran.flo<-extract_ranef(mod.flo.int)
colnames(ran.flo)
a<-dplyr::select(ran.flo,1:7)
b<-dplyr::select(ran.flo,1,8:13)
c<-dplyr::select(ran.flo,1,14:19)
d<-dplyr::select(ran.flo,1,20:25)
e<-dplyr::select(ran.flo,1,26:31)
f<-dplyr::select(ran.flo,1,32:37)
g<-dplyr::select(ran.flo,1,38:43)
a$Predictor<-"Intercept"
b$Predictor<-"main:chilling"
c$Predictor<-"main:light"
d$Predictor<-"main:forcing"
e$Predictor<-"int:chillxlight"
f$Predictor<-"int:chillxforce"
g$Predictor<-"int:lightxforce"
call<-c("GEN.SPA","Estimate","Error","Q10","Q25","Q75","Q90","Predictor")
colnames(a)<-call
colnames(b)<-call
colnames(c)<-call
colnames(d)<-call
colnames(e)<-call
colnames(f)<-call
colnames(g)<-call
a[,2:7]<-a[,2:7]+flowy[1,2]
b[,2:7]<-b[,2:7]+flowy[2,2]
c[,2:7]<-c[,2:7]+flowy[3,2]
d[,2:7]<-d[,2:7]+flowy[4,2]
e[,2:7]<-e[,2:7]+flowy[5,2]
f[,2:7]<-f[,2:7]+flowy[6,2]
g[,2:7]<-g[,2:7]+flowy[7,2]
flo.sps<-rbind(a,b,c,d,e,f,g)
flo.sps$phase<-"floral"
pd2=position_dodgev(height=0.6)
#flo.sps<-filter(flo.sps,Predictor!="xIntercept")
ggplot(flo.sps,aes(Estimate,Predictor))+geom_point(aes(color=GEN.SPA),position=pd2, size=3)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=GEN.SPA),linetype="solid",position=pd2,width=0,size=0.7)+geom_vline(aes(xintercept=0),color="black")+theme_base()
###now leaf estiamte
ran.leaf<-extract_ranef(mod.bb.int)
aa<-dplyr::select(ran.leaf,1:7)
bb<-dplyr::select(ran.leaf,1,8:13)
cc<-dplyr::select(ran.leaf,1,14:19)
dd<-dplyr::select(ran.leaf,1,20:25)
ee<-dplyr::select(ran.leaf,1,26:31)
ff<-dplyr::select(ran.leaf,1,32:37)
gg<-dplyr::select(ran.leaf,1,38:43)
aa$Predictor<-"Intercept"
bb$Predictor<-"main:chilling"
cc$Predictor<-"main:light"
dd$Predictor<-"main:forcing"
ee$Predictor<-"int:chillxlight"
ff$Predictor<-"int:chillxforce"
gg$Predictor<-"int:lightxforce"
call<-c("GEN.SPA","Estimate","Error","Q10","Q25","Q75","Q90","Predictor")
colnames(aa)<-call
colnames(bb)<-call
colnames(cc)<-call
colnames(dd)<-call
colnames(ee)<-call
colnames(ff)<-call
colnames(gg)<-call
aa[,2:7]<-aa[,2:7]+leafy[1,2]
bb[,2:7]<-bb[,2:7]+leafy[2,2]
cc[,2:7]<-cc[,2:7]+leafy[3,2]
dd[,2:7]<-dd[,2:7]+leafy[4,2]
ee[,2:7]<-ee[,2:7]+leafy[5,2]
ff[,2:7]<-ff[,2:7]+leafy[6,2]
gg[,2:7]<-gg[,2:7]+leafy[7,2]
leaf.sps<-rbind(aa,bb,cc,dd,ee,ff,gg)
leaf.sps$phase<-"foliate"
#leaf.sps<-filter(leaf.sps, Predictor!="xIntercept")
ggplot(leaf.sps,aes(Estimate,Predictor))+geom_point(aes(color=GEN.SPA),position=pd2, size=3)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=GEN.SPA),linetype="solid",position=pd2,width=0,size=0.7)+geom_vline(aes(xintercept=0),color="black")+theme_base()
sps.plot<-rbind(leaf.sps,flo.sps)
sps.plot$fls<-ifelse(sps.plot$GEN.SPA %in% c("ACE.RUB","COM.PER","COR.COR"),"hyst","ser")
jpeg("Plots/flo_buds_figures/fobb_sppeffects.wintercept.jpeg")
pd2=position_dodgev(height=.6)
ggplot(sps.plot,aes(Estimate,Predictor))+geom_point(aes(shape=phase,color=phase),position=pd2, size=3)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0),color="black")+theme_base()
dev.off()
#without intecepts
sps.plot.effectonly<-filter(sps.plot, Predictor!="Intercept")
jpeg("Plots/flo_buds_figures/fobb_sppeffects.nointercept.jpeg")
ggplot(sps.plot.effectonly,aes(Estimate,Predictor))+geom_point(aes(shape=phase,color=phase),position=pd2, size=3)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0),color="black")+theme_base()
dev.off()
########Leafout vs flowering
lo.int<-get_prior(leaf_day.15.~Chill+Light+Force+Chill:Light+Chill:Force+Force:Light,data = dat, family = gaussian())
mod.lo.int<-brm(leaf_day.15. ~ Chill+Light+Force+Chill:Light+Chill:Force+Force:Light+(Chill+Light+Force+Chill:Light+Chill:Force+Force:Light|GEN.SPA),
data = dat, family = gaussian(),
iter= 4000,
warmup = 3000)
summary(mod.lo.int)
leafouty<-extract_coefs(mod.lo.int)
leafouty$phase<-"foliate-lo"
flowy$phase<-"floral"
bothy<-rbind(flowy,leafouty,leafy)
bothy<-filter(bothy,Predictor!="Intercept")
bothy$Predictor[bothy$Predictor=="Force"]<-"main:Force"
bothy$Predictor[bothy$Predictor=="Light"]<-"main:Light"
bothy$Predictor[bothy$Predictor=="Chill"]<-"main:Chill"
bothy$Predictor[bothy$Predictor=="Chill:Light"]<-"int:Chill:Light"
bothy$Predictor[bothy$Predictor=="Light:Force"]<-"int:Light:Force"
bothy$Predictor[bothy$Predictor=="Chill:Force"]<-"int:Chill:Force"
jpeg("Plots/flo_buds_figures/folo_maineffects.jpeg")
pd2=position_dodgev(height=0.3)
ggplot(bothy,aes(Estimate,Predictor))+geom_point(aes(color=phase,shape=phase),position=pd2, size=4)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+geom_vline(aes(xintercept=0),color="black")+theme_base()+scale_color_manual(values=c("darkgrey", "black"))+ggtitle("Main effects flower vs. leafout")
dev.off()
ran.leafout<-extract_ranef(mod.lo.int)
aaa<-dplyr::select(ran.leafout,1:7)
bbb<-dplyr::select(ran.leafout,1,8:13)
ccc<-dplyr::select(ran.leafout,1,14:19)
ddd<-dplyr::select(ran.leafout,1,20:25)
eee<-dplyr::select(ran.leafout,1,26:31)
fff<-dplyr::select(ran.leafout,1,32:37)
ggg<-dplyr::select(ran.leafout,1,38:43)
aaa$Predictor<-"Intercept"
bbb$Predictor<-"main:chilling"
ccc$Predictor<-"main:light"
ddd$Predictor<-"main:forcing"
eee$Predictor<-"int:chillxlight"
fff$Predictor<-"int:chillxforce"
ggg$Predictor<-"int:lightxforce"
call<-c("GEN.SPA","Estimate","Error","Q10","Q25","Q75","Q90","Predictor")
colnames(aaa)<-call
colnames(bbb)<-call
colnames(ccc)<-call
colnames(ddd)<-call
colnames(eee)<-call
colnames(fff)<-call
colnames(ggg)<-call
aaa[,2:7]<-aaa[,2:7]+leafouty[1,2]
bbb[,2:7]<-bbb[,2:7]+leafouty[2,2]
ccc[,2:7]<-ccc[,2:7]+leafouty[3,2]
ddd[,2:7]<-ddd[,2:7]+leafouty[4,2]
eee[,2:7]<-eee[,2:7]+leafouty[5,2]
fff[,2:7]<-fff[,2:7]+leafouty[6,2]
ggg[,2:7]<-ggg[,2:7]+leafouty[7,2]
leafout.sps<-rbind(aaa,bbb,ccc,ddd,eee,fff,ggg)
leafout.sps$phase<-"foliate-lo"
sps.plot2<-rbind(leafout.sps,flo.sps)
jpeg("Plots/flo_buds_figures/folo_sppeffects.wintercept.jpeg")
pd2=position_dodgev(height=.6)
ggplot(sps.plot2,aes(Estimate,Predictor))+geom_point(aes(shape=phase,color=phase),position=pd2, size=3)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0),color="black")+theme_base()
dev.off()
sps.plot.2effectonly<-filter(sps.plot2, Predictor!="Intercept")
jpeg("Plots/flo_buds_figures/folo_sppeffects.nointercept.jpeg")
ggplot(sps.plot.2effectonly,aes(Estimate,Predictor))+geom_point(aes(shape=phase,color=phase),position=pd2, size=3)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0),color="black")+theme_base()
dev.off()
sps.plot3<-rbind(leafout.sps,leaf.sps,flo.sps)
jpeg("Plots/flo_buds_figures/3phase_sppeffects.wintercept.jpeg")
pd2=position_dodgev(height=.6)
ggplot(sps.plot3,aes(Estimate,Predictor))+geom_point(aes(shape=phase,color=phase),position=pd2, size=3)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0),color="black")+theme_base()
dev.off()
sps.plot.3effectonly<-filter(sps.plot3, Predictor!="Intercept")
jpeg("Plots/flo_buds_figures/3phase_sppeffects.nointercept.jpeg")
ggplot(sps.plot.3effectonly,aes(Estimate,Predictor))+geom_point(aes(shape=phase,color=phase),position=pd2, size=3)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0),color="black")+theme_base()
dev.off()
bothy<-rbind(flowy,leafouty,leafy)
bothy<-filter(bothy,Predictor!="Intercept")
bothy$Predictor[bothy$Predictor=="Force"]<-"main:Force"
bothy$Predictor[bothy$Predictor=="Light"]<-"main:Light"
bothy$Predictor[bothy$Predictor=="Chill"]<-"main:Chill"
bothy$Predictor[bothy$Predictor=="Chill:Light"]<-"int:Chill:Light"
bothy$Predictor[bothy$Predictor=="Light:Force"]<-"int:Light:Force"
bothy$Predictor[bothy$Predictor=="Chill:Force"]<-"int:Chill:Force"
jpeg("Plots/flo_buds_figures/2phase_maineffects.jpeg")
pd2=position_dodgev(height=0.3)
ggplot(bothy,aes(Estimate,Predictor))+geom_point(aes(color=phase,shape=phase),position=pd2, size=4)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+geom_vline(aes(xintercept=0),color="black")+theme_base()
dev.off()
ggplot(bothy,aes(Estimate,Predictor))+geom_point(aes(color=phase,shape=phase),position=pd2, size=4)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+geom_vline(aes(xintercept=0),color="black")+theme_base()
View(dat)
ggplot(sps.plot.3effectonly,aes(Estimate,Predictor))+geom_point(aes(shape=phase,color=phase),position=pd2, size=3)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0),color="black")+theme_base()
ggplot(sps.plot3,aes(Estimate,Predictor))+geom_point(aes(shape=phase,color=phase),position=pd2, size=3)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0),color="black")+theme_base()
FLS<-filter(dat, !GEN.SPA %in% c("ACE.SAC","BET.ALL"))
hys<-c("ACE.RUB","COM.PER","COR.COR")
syn<-c("PRU.PEN, VAC.COR")
save("new_flobud.mods.Rda")
save("new_flobud.mods")
save.image("new_flobud.mods.Rda")
newdata <- data.frame(Chill = c(0,1),
Light = c(0,1),
Force=c(0,1))
predict(mod.lo.int, newdata = newdata)
newdata <- data.frame(Chill = c(0,1),
Light = c(0,1),
Force=c(0,1),
GEN.SPA=c("PRU.VIR","VAC.COR"))
predict(mod.lo.int, newdata = newdata)
View(newdata)
newdata <- data.frame(Chill = c(0,1,1,1),
Light = c(0,0,1,1),
Force=  c(0,0,0,1),
GEN.SPA=c("PRU.VIR","VAC.COR"))
predict(mod.lo.int, newdata = newdata)
goo<-predict(mod.lo.int, newdata = newdata)
View(leaf.sps)
View(goo)
newdata <- data.frame(Chill = c(0,1),
Light = c(0,1),
Force=  c(0,1),
GEN.SPA=c("VAC.COR"))
predict(mod.lo.int, newdata = newdata)
predict(mod.flo.int, newdata = newdata)
predict(mod.bb.int, newdata = newdata)
predict(mod.flo.int, newdata = newdata)
newdata <- data.frame(Chill = c(0,0),
Light = c(0,1),
Force=  c(0,1),
GEN.SPA=c("VAC.COR"))
predict(mod.bb.int, newdata = newdata)
predict(mod.flo.int, newdata = newdata)
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
library(ggplot2)
library(tidyverse)
library(brms)
library(rstan)
library(arm)
library(rstanarm)
library(tibble)
library(ggstance)
setwd("~/Documents/git/proterant/FLOBUDS")
d<-read.csv("dicogamy.csv",header=TRUE)
d<-unite(d,treatment,Force,Light,Chill,sep="",remove=FALSE)
d$Light<-ifelse(d$Light=="L","xL","S")
###name treatments numeric/continuous
d$photoperiod<-ifelse(d$Light=="xL",12,8)
d$temp_day<-ifelse(d$Force=="W",24,18)
d$temp_night<-ifelse(d$Force=="W",18,12)
d$chilldays<-ifelse(d$Chill==0,28,56)
###center predictors
d$p_cent<-d$photoperiod/mean(d$photoperiod)
d$f_cent<-d$temp_day/mean(d$temp_day)
d$c_cent<-d$chilldays/mean(d$chilldays)
d$p.z<-d$photoperiod-mean(d$photoperiod)/sd(d$photoperiod)
d$f.z<-d$temp_day-mean(d$temp_day)/sd(d$temp_day)
d$c.z<-d$chilldays-mean(d$chilldays)/sd(d$chilldays)
goo<- d %>% group_by(GEN.SPA,treatment) %>% summarise(mean.gyn=mean(flo_dayF,na.rm=TRUE))
goo2<-d %>% group_by(GEN.SPA,treatment) %>% summarise(mean.anth=mean(flo_dayM,na.rm=TRUE))
googoo<-left_join(goo,goo2)
googoo$dichog<-googoo$mean.gyn-googoo$mean.anth
cor<-filter(d,GEN.SPA=="COR.COR")
com<-filter(d,GEN.SPA=="COM.PER")
View(d)
d$Force<-iflese(d$Force=="W",1,0)
d$Light<-ifelse(d$Light=="xL",1,0)
View(d)
