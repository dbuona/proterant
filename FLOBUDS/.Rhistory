brm(Y~X1+(1|species), data =sim.dat, family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000,thin=1,  prior = c(
prior(normal(0, 1), "b"),
prior(student_t(3, 0, 10), "Intercept"),
prior(student_t(3, 0, 10), "sd")))
get_prior(Y~X1+X2+(1|species), data =sim.dat, family = bernoulli(link="logit"))
brm(Y~X1+X2+(1|species), data =sim.dat, family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000,thin=1,  prior = c(
prior(normal(0, 1), "b"),
prior(student_t(3, 0, 10), "Intercept"),
prior(student_t(3, 0, 10), "sd")))
?student_t
??student_t
?brmsfamily()
summary(phyloglm(Y ~ X1+X2, phy=phy, data=sim.dat,method = "logistic_MPLE", btol = 100, log.alpha.bound = 8))
summary(phyloglm(Y ~ X1+X2, phy=phy, data=sim.dat,method = "logistic_MPLE", btol = 100, log.alpha.bound = 8))
# Fit model
binaryPGLMM(Y ~ X1+X2, phy=phy, data=sim.dat)
a<-brm(Y~X1+X2+(1|species), data =sim.dat, family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000,thin=1,  prior = c(
prior(normal(0, 1), "b"),
prior(student_t(3, 0, 10), "Intercept"),
prior(student_t(3, 0, 10), "sd")))
summary(a)
a<-brm(Y~X1+X2+(1|species), data =sim.dat, family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000,thin=1,  prior = c(
prior(normal(0, 1), "b"),
prior(student_t(3, 0, 5), "Intercept"),
prior(student_t(3, 0, 10), "sd")))
summary(a)
##### can brms be preproduce by phyloglm
phylo <- ape::read.nexus("https://paul-buerkner.github.io/data/phylo.nex")
data_simple <- read.table(
"https://paul-buerkner.github.io/data/data_simple.txt",
header = TRUE
)
head(data_simple)
data_simple
inv.phylo <- MCMCglmm::inverseA(phylo, nodes = "TIPS", scale = TRUE)
A <- solve(inv.phylo$Ainv)
rownames(A) <- rownames(inv.phylo$Ainv)
model_simple <- brm(
phen ~ cofactor + (1|phylo), data = data_simple,
family = gaussian(), cov_ranef = list(phylo = A),
prior = c(
prior(normal(0, 10), "b"),
prior(normal(0, 50), "Intercept"),
prior(student_t(3, 0, 20), "sd"),
prior(student_t(3, 0, 20), "sigma")
)
)
View(sim.dat)
model_simple
PGLMM(phen ~ cofactor phy=phylo, data=data_simple)
PGLMM(phen ~ cofactor, phy=phylo, data=data_simple)
PGLMS(phen ~ cofactor, phy=phylo, data=data_simple)
PGLS(phen ~ cofactor, phy=phylo, data=data_simple)
?pgls()
summary(a)
# Simulate binary Y
sim.dat <- data.frame(Y=array(0, dim=n), X1=X1,X2=X2, row.names=phy$tip.label)
sim.dat$Y <- binaryPGLMM.sim(Y ~ X1+X2, phy=phy, data=sim.dat, s2=0,
B=matrix(c(1,2,-1),nrow=3,ncol=1), nrep=1)$Y
# Fit model
binaryPGLMM(Y ~ X1+X2, phy=phy, data=sim.dat)
summary(phyloglm(Y ~ X1+X2, phy=phy, data=sim.dat,method = "logistic_MPLE", btol = 100, log.alpha.bound = 8))
sim.dat$species <- phy$tip.label
inv.phylo <- MCMCglmm::inverseA(phy, nodes = "TIPS", scale = TRUE)
A <- solve(inv.phylo$Ainv)
rownames(A) <- rownames(inv.phylo$Ainv)
get_prior(Y~X1+X2+(1|species), data =sim.dat, family = bernoulli(link="logit"))
a<-brm(Y~X1+X2+(1|species), data =sim.dat, family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000,thin=1,  prior = c(
prior(normal(0, 2), "b"),
prior(student_t(3, 0, 5), "Intercept"),
prior(student_t(3, 0, 10), "sd")))
summary(a)
a<-brm(Y~X1+X2+(1|species), data =sim.dat, family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000,thin=1,  prior = c(
prior(normal(0, 2), "b"),
prior(student_t(3, 0, 10), "Intercept"),
prior(student_t(3, 0, 10), "sd")))
summary(a)
a<-brm(Y~X1+X2+(1|species), data =sim.dat, family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000,thin=1,  prior = c(
prior(student_t(3, 0, 5), "b"),
prior(student_t(3, 0, 10), "Intercept"),
prior(student_t(3, 0, 10), "sd")))
(hyp <- hypothesis(a, hyp, class = NULL))
hyp <- "sd_phylo__Intercept^2 / (sd_phylo__Intercept^2 + sigma^2) = 0"
(hyp <- hypothesis(a, hyp, class = NULL))
summary(a)
a<-brm(Y~X1+X2+(1|species), data =sim.dat, family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000,thin=1,  prior = c(
prior(student_t(3, 0, 1), "b"),
prior(student_t(3, 0, 10), "Intercept"),
prior(student_t(3, 0, 10), "sd")))
a<-brm(Y~X1+X2+(1|species), data =sim.dat, family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000,thin=1,  prior = c(
prior(normal(0,1), "b"),
prior(normal(0,1), "Intercept"),
prior(student_t(3, 0, 10), "sd")))
summary(a)
# Fit model
binaryPGLMM(Y ~ X1+X2, phy=phy, data=sim.dat)
summary(phyloglm(Y ~ X1+X2, phy=phy, data=sim.dat,method = "logistic_MPLE", btol = 100, log.alpha.bound = 8))
# Fit model
binaryPGLMM(Y ~ X1+X2, phy=phy, data=sim.dat)
sim.dat$Y <- binaryPGLMM.sim(Y ~ X1+X2, phy=phy, data=sim.dat, s2=.8,
B=matrix(c(1,2,-1),nrow=3,ncol=1), nrep=1)$Y
# Simulate binary Y
sim.dat <- data.frame(Y=array(0, dim=n), X1=X1,X2=X2, row.names=phy$tip.label)
sim.dat$Y <- binaryPGLMM.sim(Y ~ X1+X2, phy=phy, data=sim.dat, s2=.8,
B=matrix(c(1,2,-1),nrow=3,ncol=1), nrep=1)$Y
# Fit model
binaryPGLMM(Y ~ X1+X2, phy=phy, data=sim.dat)
summary(phyloglm(Y ~ X1+X2, phy=phy, data=sim.dat,method = "logistic_MPLE", btol = 100, log.alpha.bound = 8))
sim.dat$species <- phy$tip.label
inv.phylo <- MCMCglmm::inverseA(phy, nodes = "TIPS", scale = TRUE)
A <- solve(inv.phylo$Ainv)
rownames(A) <- rownames(inv.phylo$Ainv)
get_prior(Y~X1+X2+(1|species), data =sim.dat, family = bernoulli(link="logit"))
a<-brm(Y~X1+X2+(1|species), data =sim.dat, family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000,thin=1,  prior = c(
prior(normal(0,1), "b"),
prior(student_t(3, 0, 10), "Intercept"),
prior(student_t(3, 0, 10), "sd")))
summary(a)
summary(phyloglm(Y ~ X1+X2, phy=phy, data=sim.dat,method = "logistic_MPLE", btol = 100, log.alpha.bound = 8))
# Fit model
binaryPGLMM(Y ~ X1+X2, phy=phy, data=sim.dat)
summary(a)
pp_check(a)
####This is the master Rcode for Dan B's hysteranthy paper
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant/Input")
###libraryies
library("tidyverse")
library("ggplot2")
library(brms)
library(ggthemes)
library("ape")
library("phytools")
library("geiger")
library("gbm")
library("pez")
library(caper)
library(picante)
library(boot)
library("phylolm")
library(ggstance)
library("raster")
library("remote")
library(reshape2)
load("RData/paper_full_analysis.RData")
###continuous models
summary(z.funct.drought)
###continuous models
summary(z.funct.drought)
###continuous models
summary(mich.funct.wint.dat)
###continuous models
mich.funct.wint.dat
##prep for plotting
mich.funct.wint.dat<-full_join(extract_coefs(z.funct.drought),extract_CIs(z.funct.drought),by="trait")
##with Interactions
z.funct.drought<-phyloglm(pro2~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent,mich.data, mich.tre, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=599,full.matrix = TRUE)
##with Interactions
z.funct.drought<-phyloglm(pro2~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent,mich.data, mich.tre, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=599,full.matrix = TRUE)
mich.tre<-read.tree("datasheets_derived/MTSV_USFS/michtre_final.tre")
##### phylo signal for suppliment
mich.tre$node.label<-NULL
######### phyloglm requires species names to be in rownames
mich.data<-  mich.data %>% remove_rownames %>% column_to_rownames(var="name")
silv.data<- silv.data %>% remove_rownames %>% column_to_rownames(var="name")
##with Interactions
z.funct.drought<-phyloglm(pro2~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent,mich.data, mich.tre, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=599,full.matrix = TRUE)
###read in data
mich.data<-read.csv("datasheets_derived/MTSV_USFS/michdata_final.csv")
mich.tre<-read.tree("datasheets_derived/MTSV_USFS/michtre_final.tre")
silv.data<-read.csv("datasheets_derived/MTSV_USFS/silvdata_final.csv")
silv.tre<-read.tree("datasheets_derived/MTSV_USFS/silvtre_final.tre")
##### phylo signal for suppliment
mich.tre$node.label<-NULL
silv.tre$node.label<-NULL
d<-comparative.data(mich.tre,mich.data,name,vcv = TRUE,vcv.dim = 2, na.omit = FALSE)
#physiological hysteranthy
Phylo.Pro.phys<-phylo.d(d, binvar=pro3)
Phylo.Pro.phys
##functionalhysteranthy
PhyloPro.funct<-phylo.d(d,binvar=pro2)
PhyloPro.funct
plot(PhyloPro.funct)
d.silv<-comparative.data(silv.tre,silv.data,name,vcv = TRUE,vcv.dim = 2, na.omit = FALSE)
silv.Pro.phys<-phylo.d(d.silv, binvar=pro3)
silv.Pro.phys
######### phyloglm requires species names to be in rownames
mich.data<-  mich.data %>% remove_rownames %>% column_to_rownames(var="name")
silv.data<- silv.data %>% remove_rownames %>% column_to_rownames(var="name")
##with Interactions
z.funct.drought<-phyloglm(pro2~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent,mich.data, mich.tre, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=599,full.matrix = TRUE)
inv.phylo <- MCMCglmm::inverseA(mich.tre, nodes = "TIPS", scale = TRUE)
A <- solve(inv.phylo$Ainv)
rownames(A) <- rownames(inv.phylo$Ainv)
get_prior(pro2~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent+(1|name), data = mich.data,family = bernoulli(link = "logit"), cov_ranef = list(name= A))
get_prior(pro2~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent+(1|name), data = mich.data,family = bernoulli(link = "logit"))
mich.data$names<-rownames(mich.data)
get_prior(pro2~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent+(1|name), data = mich.data,family = bernoulli(link = "logit"))
mich.data$name<-rownames(mich.data)
get_prior(pro2~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent+(1|name), data = mich.data,family = bernoulli(link = "logit"))
priorz<-get_prior(pro2~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent+(1|name), data = mich.data,family = bernoulli(link = "logit"))
modelcont.funct.noint <- brm(pro2~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent+(1|name), data = mich.data,
family = bernoulli(link = "logit"), cov_ranef = list(name= A),prior=priorz,iter=3000)
summary(modelcont.funct.noint )
modelcont.funct.noint <- brm(pro2~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent+(1|name), data = mich.data,
family = bernoulli(link = "logit"), cov_ranef = list(name= A),iter=3000)
binaryPGLMM(pro2~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent,mich.data, mich.tre)
z.funct.drought<-phyloglm(pro2~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent,mich.data, mich.tre, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=599,full.matrix = TRUE)
summary( z.funct.drought)
z.phys.drought<-phyloglm(pro3~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent,mich.data, mich.tre, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=599,full.matrix = TRUE)
z.funct.drought.silvics<-phyloglm(pro2~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent,silv.data, silv.tre, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=599,full.matrix = TRUE)
z.phys.drought.silvics<-phyloglm(pro3~pol_cent+flo_cent+precip_cent+precip_cent:flo_cent+precip_cent:pol_cent+pol_cent:flo_cent,silv.data, silv.tre, method = "logistic_MPLE", btol = 100, log.alpha.bound = 10,
start.beta=NULL, start.alpha=NULL,
boot=599,full.matrix = TRUE)
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
library(ggplot2)
library(tidyverse)
library("brms")
library(rstan)
library(arm)
library(rstanarm)
library(tibble)
library(ggstance)
library(survival)
library(sur)
library(survminer)
library(ggthemes)
library("Hmisc")
#load("new_flobud.mods.Rda")
setwd("~/Documents/git/proterant/FLOBUDS")
dat<-read.csv("flobudsdata.use.csv",header = TRUE)
dat$Light<-ifelse(dat$Light=="S",0,1)
dat$Force<-ifelse(dat$Force=="C",0,1)
dat<-filter(dat, !GEN.SPA %in% c("AME.SPP","BET.SPP"))
load("new_flobud.mods.Rda")
View(dat)
plot.raw.dat<-gather(dat,DOY,phase,2:4)
View(plot.raw.dat)
plot.raw.dat<-gather(dat,phase,DOY,2:4)
ggplot(sps.plot2,aes(Estimate,Predictor))+geom_point(aes(shape=phase,color=phase),position=pd2, size=3)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0),color="black")+theme_base()
ggplot(sps.plot3,aes(Estimate,Predictor))+geom_point(aes(shape=phase,color=phase),position=pd2, size=3)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0),color="black")+theme_base()
goodsps<-filter(sps.plot3, Taxa %in% c("ACE.PEN","COM.PER","COR.COR","ILE.MUC""PRU.PEN","VAC.COR"))
goodsps<-filter(sps.plot3, Taxa %in% c("ACE.PEN","COM.PER","COR.COR","ILE.MUC","PRU.PEN","VAC.COR"))
ggplot(goodsps,aes(Estimate,Predictor))+geom_point(aes(shape=phase,color=phase),position=pd2, size=3)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0),color="black")+theme_base()
ggplot(goodsps,aes(Estimate,Predictor))+geom_point(aes(shape=phase,color=phase),position=pd2, size=3)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0),color="black")+theme_base()
goodsps
goodsps<-dplyr::filter(sps.plot3, Taxa %in% c("ACE.PEN","COM.PER","COR.COR","ILE.MUC","PRU.PEN","VAC.COR"))
save.image("new_flobud.mods.Rda")
goodsps<-dplyr::filter(sps.plot3, Taxa %in% c("ACE.PEN","COM.PER","COR.COR","ILE.MUC","PRU.PEN","VAC.COR"))
goodsps<-dplyr::filter(sps.plot3, GEN.SPA %in% c("ACE.PEN","COM.PER","COR.COR","ILE.MUC","PRU.PEN","VAC.COR"))
pd2=position_dodgev(height=.6)
ggplot(goodsps,aes(Estimate,Predictor))+geom_point(aes(shape=phase,color=phase),position=pd2, size=3)+geom_errorbarh(aes(xmin=Q25,xmax=Q75,color=phase),linetype="solid",position=pd2,width=0,size=0.7)+geom_errorbarh(aes(xmin=Q10,xmax=Q90,color=phase),linetype="dotted",position=pd2,width=0,size=0.7)+facet_wrap(~GEN.SPA)+geom_vline(aes(xintercept=0),color="black")+theme_base()
save.image("new_flobud.mods.Rda")
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant/Input")
###libraryies
library("tidyverse")
library("ggplot2")
library(brms)
library(ggthemes)
library("ape")
library("phytools")
library("geiger")
library("gbm")
library("pez")
library(caper)
library(picante)
library(boot)
library("phylolm")
library(ggstance)
library("raster")
library("remote")
library(reshape2)
load("RData/paper_full_analysis.RData")
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
library(ggplot2)
library(tidyverse)
library("brms")
library(rstan)
library(arm)
library(rstanarm)
library(tibble)
library(ggstance)
library(survival)
library(sur)
library(survminer)
library(ggthemes)
library("Hmisc")
load("new_flobud.mods.Rda")
setwd("~/Documents/git/proterant/FLOBUDS")
load("new_flobud.mods.Rda")
predict(mod.bb.int, newdata = newdata)
newdata <- data.frame(Chill = c(0,0),
Light = c(0,1),
Force=  c(0,1),
GEN.SPA=c("VAC.COR"))
predict(mod.bb.int, newdata = newdata)
newdata <- data.frame(Chill = c(0,0,0,0,1,1,1,1),
Light = c(0,0,1,1,0,0,0,1),
Force=  c(0,1,1,0,0,1,1,1),
GEN.SPA=c("VAC.COR","COM.PER","COR.COR"))
predict(mod.bb.int, newdata = newdata)
View(newdata)
newdata <- data.frame(Chill = c(0,0,0,0,1,1,1,1),
Light = c(0,0,1,1,0,0,0,1),
Force=  c(0,1,1,0,0,1,1,1),
GEN.SPA=c("VAC.COR","COM.PER","COR.COR"))
newdata <- data.frame(Chill = c(0,0,0,0,1,1,1,1),
Light = c(0,0,1,1,0,0,0,1),
Force=  c(0,1,1,0,0,1,1,1),
GEN.SPA=c("VAC.COR","COM.PER","COR.COR"))
newdata <- data.frame(Chill = c(0,0,0,0,1,1,1,1),
Light = c(0,0,1,1,0,0,0,1),
Force=  c(0,1,1,0,0,1,1,1),
GEN.SPA=c("VAC.COR","COM.PER","COR.COR"))
new.data<-"g"
newdata<-"g"
newdata <- data.frame(Chill = c(0,0,0,0,1,1,1,1),
Light = c(0,0,1,1,0,0,0,1),
Force=  c(0,1,1,0,0,1,1,1),
GEN.SPA=c("VAC.COR","COM.PER","COR.COR"))
newdata <- data.frame(Chill = c(0,0,0,0,1,1,1,1),
Light = c(0,0,1,1,0,0,0,1),
Force=  c(0,1,1,0,0,1,1,1),
GEN.SPA=c("VAC.COR","COM.PER","COR.COR"))
newdata <- data.frame(Chill = c(0,0,0,0,1,1,1,1))
View(newdata)
predict(mod.bb.int, newdata = newdata)
newdata <- data.frame(Chill = c(0,0,0,0,1,1,1,1),
Light = c(0,0,1,1,0,0,0,1))
View(newdata)
newdata <- data.frame(Chill = c(0,0,0,0,1,1,1,1),
Light = c(0,0,1,1,0,0,1,1))
newdata <- data.frame(Chill = c(0,0,1,1),
Light = c(0,1,0,1))
newdata <- data.frame(Chill = c(0,0,1,1),
Light = c(0,1,0,1),
Force=  c(0,1,1,0))
newdata <- data.frame(Chill = c(0,0,1,1,0),
Light = c(0,1,0,1,0),
Force=  c(0,1,1,0,1))
newdata <- data.frame(Chill = c(0,0,1,1,0,1),
Light = c(0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1))
newdata <- data.frame(Chill = c(0,0,1,1,0,1,1),
Light = c(0,1,0,1,0,1,0),
Force=  c(0,1,1,0,1,1,0))
newdata <- data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0))
predict(mod.bb.int, newdata = newdata)
brms::predict(mod.bb.int, newdata = newdata)
goober<-brms::predict(mod.bb.int, newdata = newdata)
?predict()
??predict()
?predict()
?brms::predict()
library("brms")
save.image("new_flobud.mods.Rda")
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
load("new_flobud.mods.Rda")
?brms::predict()
predict(mod.bb.int, newdata = newdata)
predict(mod.bb.int, newdata = newdata,summary=TRUE,   probs = c(0.025, 0.975))
newdata<-as.factor(newdata)
predict(mod.bb.int, newdata = newdata,summary=TRUE,   probs = c(0.025, 0.975))
newdata
newdata <- data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0))
newdata
predict(mod.bb.int, newdata = newdata,summary=TRUE,   probs = c(0.025, 0.975))
newdata <- data.frame(Chill = factor(c(0,0,1,1,0,1,1,0)),
Light = factor(c(0,1,0,1,0,1,0,1)),
Force=  factor(c(0,1,1,0,1,1,0,0)))
predict(mod.bb.int, newdata = newdata,summary=TRUE,   probs = c(0.025, 0.975))
newdata <- data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR"))
predict(mod.bb.int, newdata = newdata,summary=TRUE,   probs = c(0.025, 0.975))
bb.pred<-predict(mod.bb.int, newdata = newdata,summary=TRUE,   probs = c(0.025, 0.975))
flo.pred<-predict(mod.flo.int, newdata = newdata,summary=TRUE,   probs = c(0.025, 0.975))
newdata <- data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR","COR.COR"))
newdata
bb.pred<-predict(mod.bb.int, newdata = newdata,summary=TRUE,   probs = c(0.025, 0.975))
flo.pred<-predict(mod.flo.int, newdata = newdata,summary=TRUE,   probs = c(0.025, 0.975))
View(bb.pred)
newdata <- data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR","COR.COR","COM.PER"))
bb.pred<-predict(mod.bb.int, newdata = newdata,summary=TRUE,   probs = c(0.025, 0.975))
flo.pred<-predict(mod.flo.int, newdata = newdata,summary=TRUE,   probs = c(0.025, 0.975))
View(bb.pred)
newdata$treatcode<-unite(newdata,1:3)
View(newdata)
newdata$treatcode<-unite(newdata,1:3)
newdata<-unite(newdata,treatcode,1:3)
View(newdata)
newdata <- data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR","COR.COR","COM.PER"))
newdata<-unite(newdata,treatcode,1:3,remove=FALSE)
View(newdata)
newdata <- data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR","COR.COR","COM.PER"))
View(newdata)
newdata <- data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR","COR.COR","COM.PER"))
newdata,-"g"
newdata<-"g"
newdata <- data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR","COR.COR","COM.PER"))
save.image("new_flobud.mods.Rda")
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
library(ggplot2)
library(tidyverse)
library("brms")
library(rstan)
library(arm)
library(rstanarm)
library(tibble)
library(ggstance)
library(survival)
library(sur)
library(survminer)
library(ggthemes)
library("Hmisc")
load("new_flobud.mods.Rda")
newdata <- data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR","COR.COR","COM.PER"))
newdata <-data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR","COR.COR","COM.PER"))
newdata<-unite(newdata,treatcode,1:3,remove=FALSE)
newdat <-data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR","COR.COR","COM.PER"))
newdata<-data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR","COR.COR","COM.PER"))
rm(newdata)
newdata<-data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR","COR.COR","COM.PER"))
newdata<-data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR","COR.COR","COM.PER"))
newdata<-data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR"))
View(newdata)
newdata<-data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR","COM.PER","COR.COR","PRU.PEN"))
View(newdata)
newdata<-data.frame(Chill = c(0,0,1,1,0,1,1,0),
Light = c(0,1,0,1,0,1,0,1),
Force=  c(0,1,1,0,1,1,0,0),
GEN.SPA=c("VAC.COR"))
newdata<-unite(newdata,treatcode,1:3,remove=FALSE)
bb.pred<-predict(mod.bb.int, newdata = newdata,summary=TRUE,   probs = c(0.025, 0.975))
flo.pred<-predict(mod.flo.int, newdata = newdata,summary=TRUE,   probs = c(0.025, 0.975))
View(bb.pred)
left_join(newdata,bb.pred)
goo<-left_join(newdata,bb.pred)
