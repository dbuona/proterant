rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant")
library("ape")
library("phytools")
library("geiger")
library("gbm")
library("pez")
library(broom)
library(caper)
library(picante)
library("tidyverse")
library(boot)
library("phylolm")
library("ggplot2")
library(arm)
library("randomForest")
library(car)
library(lme4)
source("Scripts/continuous_mod_prep.R")
checker1<-d %>% group_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>% group_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>% group_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>% dplyr::group_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
checker1<-filter(checker1, non_na_count>=10)
checker1<-d %>% dplyr::group_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
d %>% dpgroup_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
d %>% pgroup_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
d %>% group_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
d %>% group_by(tree.id) %>% dplyr::summarise(non_na_count = sum(!is.na(offset.funct)))
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant")
library("phytools")
library(broom)
library("tidyverse")
library(boot)
library("ggplot2")
library("randomForest")
library(car)
library(lme4)
source("Scripts/continuous_mod_prep.R")
checker1<-d %>% dpgroup_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>% group_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
?as_data_pronoun()
?as_data_pronoun(d)
as_data_pronoun(d)
library(rlang)
as_data_pronoun(d)
checker1<-d %>% group_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>% group_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>% group_by_(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>% group_by_(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
View(d)
checker1<-d %>% group_by_(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>% dplyr::group_by_(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>% dplyr::group_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>% dplyr::group_by(d$tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>% dplyr::group_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>%group_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>%group_by(tree.id) %>% dplyr::summarise(non_na_count = sum(!is.na(offset.funct)))
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant")
library("phytools")
library(broom)
library(dplyr)
library(tidyr)
library(boot)
library("ggplot2")
library(car)
library(lme4)
library(rlang)
source("Scripts/continuous_mod_prep.R")
###individuals with more than 10 observations
checker1<-d %>%group_by(tree.id) %>% dplyr::summarise(non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>%group_by(tree.id) %>% summarize(non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>%group_by(tree.id) %>% summarize(d,non_na_count = sum(!is.na(offset.funct)))
checker1<-d %>%group_by(tree.id) %>% summarize(non_na_count = n(!is.na(offset.funct)))
checker1<-d %>%group_by(tree.id) %>% summarize(non_na_count = count(!is.na(offset.funct)))
checker1<-d %>%group_by(tree.id) %>% count(!is.na(offset.funct)))
checker1<-d %>%group_by(tree.id) %>% count(!is.na(offset.funct))
checker1<-d %>%group_by(tree.id) %>% summarise(non_na_count = sum(!is.na(offset.funct)))
d %>%group_by(tree.id)
d %>%group_by(tree.id)%>% summarise(no_na=sum(!is.na(offset.phys)))
checker1<-d %>%group_by(tree.id) %>% summarise(non_na_count = mean(!is.na(offset.funct)))
checker1<-d %>%group_by(tree.id) %>% summarize(non_na_count = mean(!is.na(offset.funct)))
checker1<-d %>%group_by(tree.id) %>% summarize(non_na_count = mean((offset.funct)))
checker1<-d %>%group_by(tree.id) %>% summarize(non_na_count = mean((offset.funct)))
checker1<-d %>%group_by(tree.id) %>% summarise(non_na_count = mean((offset.funct)))
checker1<-d %>%group_by(tree.id) %>% count(offset.funct)
View(checker1)
setdiff(d$species, traits$species)
intersect(d$species, traits$species)
spfordata<-traits$species
d<-filter(d,species %in% c(spfordata))
d<-filter(d,species %in% c(spfordata))
new_data_mask()
new_data_mask(d)
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant")
library("phytools")
library(broom)
library(dplyr)
library(tidyr)
library(boot)
library("ggplot2")
library(car)
library(lme4)
library(rlang)
source("Scripts/continuous_mod_prep.R")
use.sp<-c("ACPE","ACRU","QURU")
d.plus<-filter(d.plus, species %in% use.sp)
d.plus<-filter(d, species %in% use.sp)
install.packages(c("brms", "dplyr", "tidyr"))
rm(list=ls())
options(stringsAsFactors = FALSE)
graphics.off()
setwd("~/Documents/git/proterant")
library("phytools")
library(broom)
library(dplyr)
library(tidyr)
library(boot)
library("ggplot2")
library(car)
library(lme4)
library(rlang)
source("Scripts/continuous_mod_prep.R")
###individuals with more than 10 observations
##species to use
###ACRU, QURU, ACPE, most complete observations, each hysteranthy class
###species with more than 45 total boservations
use.sp<-c("ACPE","ACRU","QURU")
d.plus<-filter(d, species %in% use.sp)
jpeg("../figure/individual_HF_var.jpg")
ggplot(d.plus)+stat_summary(fun.data = "mean_cl_boot",geom="errorbar",aes(tree.id, offset.phys,color=species),linetype="solid")+stat_summary(fun.data = "mean_cl_boot", geom = "errorbar",aes(tree.id,offset.funct,color=species),linetype="dashed")+stat_summary(fun.data = "mean_cl_boot", geom = "errorbar",aes(tree.id,offset.inter,color=species),linetype="dotdash")+theme_bw()+scale_color_manual(values=c("darkgreen","red","blue"))+ylab("FLS offset")+xlab("tree ID")
dev.off()
m<-lmer(offset.inter~tree.id+(1|species)+(1|year),data=d.plus)
n<-lmer(offset.phys~tree.id+(1|species)+(1|year),data=d.plus)
o<-lmer(offset.funct~tree.id+(1|species)+(1|year),data=d.plus)
Anova(m)
Anova(n)
Anova(o)
####This indicates that idividuals vary in the phys and inter, but bot
#### interannual
jpeg("../figure/interannual_HF_var.jpg")
ggplot(d.plus)+geom_line(aes(year,offset.funct, group=tree.id, color=species),linetype="dashed")+theme_bw()+scale_color_manual(values=c("darkgreen","red","blue"))+geom_line(aes(year,offset.phys, group=tree.id, color=species),linetype="solid")+theme_bw()+scale_color_manual(values=c("darkgreen","red","blue"))+geom_line(aes(year,offset.inter, group=tree.id, color=species),linetype="dotdash")+theme_bw()+scale_color_manual(values=c("darkgreen","red","blue"))+ylab("FLS offset")
dev.off()
mm<-lmer(offset.inter~year+(1|tree.id),data=d.plus)
nn<-lmer(offset.phys~year+(1|tree.id),data=d.plus)
oo<-lmer(offset.funct~year+(1|tree.id),data=d.plus)
summary(mm)
Anova(mm)
###This is the continuous model not using michigan tree so we can address other hypothesese
setdiff(d$species, traits$species)
intersect(d$species, traits$species)
spfordata<-traits$species
d<-filter(d,species %in% c(spfordata))
dater<-left_join(d,traits, by="species")
intersect(traits$species, dater$species)
unique(dater$species)
#flower_ave<-dater %>% group_by(name) %>% summarise(average.flower.time=mean(fopn.jd,na.rm=TRUE))
flower_ave<-dplyr::select(dater,tree.id,species,name, year,fopn.jd)
flower_ave$origin <- as.Date(paste0(flower_ave$year, "-01-01"),tz = "UTC")
flower_ave$flo_date<-as.Date(flower_ave$fopn.jd, origin = flower_ave$origin, tz = "UTC")
flower_ave<-separate(flower_ave, flo_date, c("year", "month", "dia"))
flower_ave$month<-as.numeric(flower_ave$month)
flo_month<-flower_ave %>% group_by(name) %>% summarise(flowering_month=mean(month,na.rm=TRUE))
dater<-left_join(dater,flo_month, by="name")
table(dater$name)
dater$cent_flo_month<-(dater$flowering_month-mean(dater$flowering_month,na.rm=TRUE))/(2*sd(dater$flowering_month,na.rm=TRUE))
library(brms)
library(MCMCglmm)
inv.phylo <- MCMCglmm::inverseA(HF.tree.pruned, nodes = "TIPS", scale = TRUE)
A <- solve(inv.phylo$Ainv)
rownames(A) <- rownames(inv.phylo$Ainv)
colnames(dater)
modelcont.funct.1 <- brm(offset.funct~ cent_pol+seed_cent+cent_minP+cent_minT+cent_flo_view+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
summary(modelcont.funct.1)
modelcont.phys.1 <- brm(offset.phys~ cent_pol+seed_cent+cent_minP+cent_minT+cent_flo_view+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
summary(modelcont.phys.1)
modelcont.inter.1 <- brm(offset.inter~ cent_pol+seed_cent+cent_minP+cent_minT+cent_frost+cent_roots +(1|name), data = dater,
00
)
modelcont.inter.1 <- brm(offset.inter~ cent_pol+seed_cent+cent_minP+cent_minT+cent_flo_view +(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
coef(modelcont.funct.1)
A<-as.data.frame(tidy(modelcont.funct.1,robust = TRUE))
A<-A %>% "["(.,2:7,)
A$class<-"functional"
B<-as.data.frame(tidy(modelcont.inter.1,robust = TRUE))
B<-B %>% "["(.,2:7,)
B$class<-"intermediate"
C<-as.data.frame(tidy(modelcont.phys.1,robust = TRUE))
C<-C %>% "["(.,2:7,)
C$class<-"physiological"
D<-rbind(A,B,C)
library(ggstance)
pd=position_dodgev(height=0.3)
ggplot(D,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
jpeg("../figure/continuous_1.jpg")
ggplot(D,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
dev.off()
colnames(dater)
View(dater)
modelbin.funct.1 <- brm(hyst.funct~ cent_pol+seed_cent+cent_minP+cent_minT+cent_flo_view+(1|name), data = dater,
family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000)
inv.phylo <- MCMCglmm::inverseA(HF.tree.pruned, nodes = "TIPS", scale = TRUE)
A <- solve(inv.phylo$Ainv)
rownames(A) <- rownames(inv.phylo$Ainv)
modelbin.funct.1 <- brm(hyst.funct~ cent_pol+seed_cent+cent_minP+cent_minT+cent_flo_view+(1|name), data = dater,
family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000)
summary(modelbin.funct.1)
modelbin.inter.1 <- brm(hyst.inter~ cent_pol+seed_cent+cent_minP+cent_minT+cent_flo_view+(1|name), data = dater,
family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000)
modelbin.phys.1 <- brm(hyst.phys~ cent_pol+seed_cent+cent_minP+cent_minT+cent_flo_view+(1|name), data = dater,
family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000)
View(B)
A<-as.data.frame(tidy(modelcont.funct.1,robust = TRUE))
View(A)
A<-A %>% "["(.,2:6,)
A$class<-"functional"
B<-as.data.frame(tidy(modelcont.inter.1,robust = TRUE))
B<-B %>% "["(.,2:6,)
B$class<-"intermediate"
C<-as.data.frame(tidy(modelcont.phys.1,robust = TRUE))
C<-C %>% "["(.,2:6,)
C$class<-"physiological"
D<-rbind(A,B,C)
library(ggstance)
pd=position_dodgev(height=0.3)
jpeg("../figure/continuous_1.jpg")
ggplot(D,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
dev.off()
ggplot(D,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
AA<-as.data.frame(tidy(modelbin.funct.1,robust = TRUE))
AA<-AA %>% "["(.,2:6,)
AA$class<-"functional"
BB<-as.data.frame(tidy(modelbin.inter.1,robust = TRUE))
BB<-BB %>% "["(.,2:6,)
BB$class<-"intermediate"
CC<-as.data.frame(tidy(modelbin.phys.1,robust = TRUE))
CC<-CC %>% "["(.,2:6,)
CC$class<-"physiological"
DD<-rbind(AA,BB,CC)
ggplot(DD,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
jpeg("../figure/binary_1.jpg")
ggplot(DD,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
dev.off()
jpeg("../figure/binary_1.jpg")
ggplot(DD,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
dev.off()
jpeg("../figure/continuous_1.jpg")
ggplot(D,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
dev.off()
ggplot(D,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
pdf("../figure/continuous_1.pdf")
pdf("../figure/continuous_1.pdf")
pdf("../figure/continuous_1.pdf")
ggplot(D,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
dev.off()
pdf("../figure/continuous_1.pdf")
ggplot(D,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
dev.off()
save.image("continuous.mods.RData")
ggplot(D,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
ggplot(DD,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
colnames(dater)
modelcont.funct.2 <- brm(offset.funct~ cent_pol+seed_cent+cent_frost+cent_roots+cent_minT+cent_flo_view+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
inv.phylo <- MCMCglmm::inverseA(HF.tree.pruned, nodes = "TIPS", scale = TRUE)
A <- solve(inv.phylo$Ainv)
rownames(A) <- rownames(inv.phylo$Ainv)
modelcont.funct.2 <- brm(offset.funct~ cent_pol+seed_cent+cent_frost+cent_roots+cent_minT+cent_flo_view+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
summary(modelcont.funct.2)
modelcont.funct.2 <- brm(offset.funct~ cent_pol+seed_cent+cent_frost+cent_roots+cent_flo_view+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
summary(modelcont.funct.2)
colnames(dater)
modelcont.funct.2 <- brm(offset.funct~ cent_pol+cent_flo_month+cent_minP+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
summary(modelcont.funct.2)
modelcont.funct.2 <- brm(offset.funct~ cent_pol+cent_flo_month+cent_minP+cent_pol:cent_flo_,vent_minP:cent_flo_month+cet_minP:cent_pol+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
modelcont.funct.2 <- brm(offset.funct~ cent_pol+cent_flo_month+cent_minP+cent_pol:cent_flo_month,vent_minP:cent_flo_month+cet_minP:cent_pol+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
modelcont.funct.2 <- brm(offset.funct~ cent_pol+cent_flo_month+cent_minP+cent_pol:cent_flo_month,cent_minP:cent_flo_month+cet_minP:cent_pol+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
modelcont.funct.2 <- brm(offset.funct~ cent_pol+cent_flo_month+cent_minP+cent_pol:cent_flo_month,cent_minP:cent_flo_month+cent_minP:cent_pol+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
colnames(dater)
modelcont.funct.2 <- brm(offset.funct~ cent_pol+cent_flo_month+cent_minP+cent_pol:cent_flo_month,cent_minP:cent_flo_month+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
modelcont.funct.2 <- brm(offset.funct~ cent_pol+cent_flo_month+cent_minP+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
modelcont.funct.2 <- brm(offset.funct~ cent_pol+cent_flo_month+cent_minP+cent_flo_month:cent_pol+cent_flo_month:cent_minP+cent_pol:cent_minP+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
summary(modelcont.funct.2)
modelcont.inter.1 <- brm(offset.inter~cent_pol+cent_flo_month+cent_minP+cent_flo_month:cent_pol+cent_flo_month:cent_minP+cent_pol:cent_minP+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
summary(modelcont.inter.1)
modelcont.phys.2 <- brm(offset.phys~ cent_pol+cent_flo_month+cent_minP+cent_flo_month:cent_pol+cent_flo_month:cent_minP+cent_pol:cent_minP+(1|name)+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
summary(modelcont.phys.2)
summary(modelcont.inter.1)
AAA<-as.data.frame(tidy(modelcont.funct.2,robust = TRUE))
View(AAA)
AAA<-as.data.frame(tidy(modelcont.funct.2,robust = TRUE))
AAA<-AAA %>% "["(.,2:7,)
AAA$class<-"functional"
BBB<-as.data.frame(tidy(modelcont.inter.1,robust = TRUE))
BBB<-BBB %>% "["(.,2:7,)
B$class<-"intermediate"
CCC<-as.data.frame(tidy(modelcont.phys.2,robust = TRUE))
CCC<-CCC %>% "["(.,2:7,)
CCCC$class<-"physiological"
CCC$class<-"physiological"
DDD<-rbind(AAA,BBB,CCC)
AAA<-as.data.frame(tidy(modelcont.funct.2,robust = TRUE))
AAA<-AAA %>% "["(.,2:7,)
AAA$class<-"functional"
BBB<-as.data.frame(tidy(modelcont.inter.1,robust = TRUE))
BBB<-BBB %>% "["(.,2:7,)
B$class<-"intermediate"
CCC<-as.data.frame(tidy(modelcont.phys.2,robust = TRUE))
CCC<-CCC %>% "["(.,2:7,)
CCC$class<-"physiological"
DDD<-rbind(AAA,BBB,CCC)
DDD<-rbind(AAA,CCC)
ggplot(DDD,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
BBB<-as.data.frame(tidy(modelcont.inter.1,robust = TRUE))
BBB<-BBB %>% "["(.,2:7,)
B$class<-"intermediate"
BBB<-as.data.frame(tidy(modelcont.inter.1,robust = TRUE))
BBB<-BBB %>% "["(.,2:7,)
BBB<-as.data.frame(tidy(modelcont.inter.2,robust = TRUE))
modelcont.inter.2<- brm(offset.inter~cent_pol+cent_flo_month+cent_minP+cent_flo_month:cent_pol+cent_flo_month:cent_minP+cent_pol:cent_minP+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
AAA<-as.data.frame(tidy(modelcont.funct.2,robust = TRUE))
AAA<-AAA %>% "["(.,2:7,)
AAA$class<-"functional"
BBB<-as.data.frame(tidy(modelcont.inter.2,robust = TRUE))
BBB<-BBB %>% "["(.,2:7,)
B$class<-"intermediate"
CCC<-as.data.frame(tidy(modelcont.phys.2,robust = TRUE))
CCC<-CCC %>% "["(.,2:7,)
CCC$class<-"physiological"
DDD<-rbind(AAA,BBB,CCC)
View(BBB)
AAA<-as.data.frame(tidy(modelcont.funct.2,robust = TRUE))
AAA<-AAA %>% "["(.,2:7,)
AAA$class<-"functional"
BBB<-as.data.frame(tidy(modelcont.inter.2,robust = TRUE))
BBB<-BBB %>% "["(.,2:7,)
BBB$class<-"intermediate"
CCC<-as.data.frame(tidy(modelcont.phys.2,robust = TRUE))
CCC<-CCC %>% "["(.,2:7,)
CCC$class<-"physiological"
DDD<-rbind(AAA,BBB,CCC)
ggplot(DDD,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
inv.phylo <- MCMCglmm::inverseA(HF.tree.pruned, nodes = "TIPS", scale = TRUE)
A <- solve(inv.phylo$Ainv)
rownames(A) <- rownames(inv.phylo$Ainv)
modelcont.funct <- brm(offset.funct~ cent_pol+seed_cent+cent_minP+cent_flo_month +(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
modelcont.phys <- brm(offset.phys~ cent_pol+seed_cent+cent_minP+cent_flo_month+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
modelcont.inter <- brm(offset.inter~ cent_pol+seed_cent+cent_minP+cent_flo_month+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
A<-as.data.frame(tidy(modelcont,robust = TRUE))
A<-A %>% "["(.,2:6,)
A$class<-"functional"
A<-as.data.frame(tidy(modelcont.funct,robust = TRUE))
A<-A %>% "["(.,2:6,)
A<-as.data.frame(tidy(modelcont.funct,robust = TRUE))
View(A)
A<-as.data.frame(tidy(modelcont.funct,robust = TRUE))
A<-A %>% "["(.,2:5,)
A$class<-"functional"
B<-as.data.frame(tidy(modelcont.inter,robust = TRUE))
B<-B %>% "["(.,2:5,)
B$class<-"intermediate"
C<-as.data.frame(tidy(modelcont.phys,robust = TRUE))
C<-C %>% "["(.,2:5,)
C$class<-"physiological"
D<-rbind(A,B,C)
library(ggstance)
pd=position_dodgev(height=0.3)
ggplot(D,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
modelbin.funct <- brm(hyst.funct~ cent_pol+seed_cent+cent_minP+cent_flo_month +(1|name), data = dater,
family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000)
inv.phylo <- MCMCglmm::inverseA(HF.tree.pruned, nodes = "TIPS", scale = TRUE)
A <- solve(inv.phylo$Ainv)
rownames(A) <- rownames(inv.phylo$Ainv)
modelbin.funct <- brm(hyst.funct~ cent_pol+seed_cent+cent_minP+cent_flo_month +(1|name), data = dater,
family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000)
modelbin.phys <- brm(hyst.phys~ cent_pol+seed_cent+cent_minP+cent_flo_month+(1|name), data = dater,
family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000)
modelcont.inter.2<- brm(offset.inter~cent_pol+cent_flo_month+cent_minP+cent_flo_month:cent_pol+cent_flo_month:cent_minP+cent_pol:cent_minP+(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
aA<-as.data.frame(tidy(modelbin.funct,robust = TRUE))
aA<-aA %>% "["(.,2:5,)
aA$class<-"functional"
bB<-as.data.frame(tidy(modelbin.inter,robust = TRUE))
bB<-bB %>% "["(.,2:5,)
bB$class<-"intermediate"
aA<-as.data.frame(tidy(modelbin.funct,robust = TRUE))
aA<-aA %>% "["(.,2:5,)
aA$class<-"functional"
bB<-as.data.frame(tidy(modelbin.inter,robust = TRUE))
cC<-as.data.frame(tidy(modelbin.phys,robust = TRUE))
cC<-cC %>% "["(.,2:5,)
cC$class<-"physiological"
modelbin.inter <- brm(hyst.inter~ cent_pol+seed_cent+cent_minP+cent_flo_month+(1|name), data = dater,
family = bernoulli(link="logit"), cov_ranef = list(name= A),iter=3000)
aA<-as.data.frame(tidy(modelbin.funct,robust = TRUE))
aA<-aA %>% "["(.,2:5,)
aA$class<-"functional"
bB<-as.data.frame(tidy(modelbin.inter,robust = TRUE))
bB<-bB %>% "["(.,2:5,)
bB$class<-"intermediate"
dD<-rbind(aA,bB,cC)
ggplot(dD,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
ggplot(Dd,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
aA<-as.data.frame(tidy(modelbin.funct,robust = TRUE))
aA<-aA %>% "["(.,2:5,)
aA$class<-"functional"
bB<-as.data.frame(tidy(modelbin.inter,robust = TRUE))
bB<-bB %>% "["(.,2:5,)
bB$class<-"intermediate"
cC<-as.data.frame(tidy(modelbin.phys,robust = TRUE))
cC<-cC %>% "["(.,2:5,)
cC$class<-"physiological"
dD<-rbind(aA,bB,cC)
ggplot(dD,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
A<-as.data.frame(tidy(modelcont.funct.1,robust = TRUE))
A<-A %>% "["(.,2:6,)
A$class<-"functional"
B<-as.data.frame(tidy(modelcont.inter.1,robust = TRUE))
B<-B %>% "["(.,2:6,)
B$class<-"intermediate"
C<-as.data.frame(tidy(modelcont.phys.1,robust = TRUE))
C<-C %>% "["(.,2:6,)
C$class<-"physiological"
D<-rbind(A,B,C)
library(ggstance)
pd=position_dodgev(height=0.3)
pdf("../figure/continuous_1.pdf")
ggplot(D,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
coef(modelcont.inter.1)
A<-as.data.frame(tidy(modelcont.funct.1,robust = TRUE))
A<-A %>% "["(.,2:6,)
A$class<-"functional"
B<-as.data.frame(tidy(modelcont.inter.1,robust = TRUE))
B<-B %>% "["(.,2:6,)
B$class<-"intermediate"
C<-as.data.frame(tidy(modelcont.phys.1,robust = TRUE))
C<-C %>% "["(.,2:6,)
C$class<-"physiological"
D<-rbind(A,B,C)
ggplot(D,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
modelcont.inter.1 <- brm(offset.inter~ cent_pol+seed_cent+cent_minP+cent_minT+cent_flo_view +(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
inv.phylo <- MCMCglmm::inverseA(HF.tree.pruned, nodes = "TIPS", scale = TRUE)
A <- solve(inv.phylo$Ainv)
rownames(A) <- rownames(inv.phylo$Ainv)
modelcont.inter.1 <- brm(offset.inter~ cent_pol+seed_cent+cent_minP+cent_minT+cent_flo_view +(1|name), data = dater,
family = gaussian(), cov_ranef = list(name= A),iter=3000)
A<-as.data.frame(tidy(modelcont.funct.1,robust = TRUE))
A<-A %>% "["(.,2:6,)
A$class<-"functional"
B<-as.data.frame(tidy(modelcont.inter.1,robust = TRUE))
B<-B %>% "["(.,2:6,)
B$class<-"intermediate"
C<-as.data.frame(tidy(modelcont.phys.1,robust = TRUE))
C<-C %>% "["(.,2:6,)
C$class<-"physiological"
D<-rbind(A,B,C)
library(ggstance)
pd=position_dodgev(height=0.3)
ggplot(D,aes(estimate,term))+geom_point(aes(color=class),position=pd)+geom_errorbarh(aes(xmin=lower,xmax=upper,color=class),position=pd)+geom_vline(aes(xintercept=0),color="black")
save.image("continuous.mods.RData")
pp_check(modelcont.phys.1)
pp_check(modelcont.inter)
pp_check(modelcont.phys)
pp_check(modelbin.phys)
